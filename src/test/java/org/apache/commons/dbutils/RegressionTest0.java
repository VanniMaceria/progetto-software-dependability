package org.apache.commons.dbutils;/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.rollbackQuietly(connection0);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.RowProcessor rowProcessor1 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator2 = new org.apache.commons.dbutils.ResultSetIterator(resultSet0, rowProcessor1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = resultSetIterator2.hasNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.ResultSet.isLast()\" because \"this.resultSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.DbUtils.close(resultSet0);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.RowProcessor rowProcessor1 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator2 = new org.apache.commons.dbutils.ResultSetIterator(resultSet0, rowProcessor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray3 = resultSetIterator2.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.ResultSet.next()\" because \"this.resultSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.Connection connection3 = null;
        java.lang.Object[] objArray5 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner2.update(connection3, "", objArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertArrayEquals(objArray5, new java.lang.Object[] {});
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.sql.Connection connection0 = null;
        java.io.PrintWriter printWriter1 = null;
        org.apache.commons.dbutils.DbUtils.printWarnings(connection0, printWriter1);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.commitAndCloseQuietly(connection0);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner2.update("hi!", (java.lang.Object) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.rollbackAndClose(connection0);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.lang.ClassLoader classLoader0 = null;
        boolean boolean2 = org.apache.commons.dbutils.DbUtils.loadDriver(classLoader0, "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) 1.0d, strArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class java.lang.Double hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertArrayEquals(strArray7, new java.lang.String[] { "hi!", "" });
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Class<?> wildcardClass7 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.commitAndClose(connection0);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray5 = new java.beans.PropertyDescriptor[] {};
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) 100.0d, propertyDescriptorArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray5);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray5, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.lang.ClassLoader classLoader0 = null;
        boolean boolean2 = org.apache.commons.dbutils.DbUtils.loadDriver(classLoader0, "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.Connection connection3 = null;
        org.apache.commons.dbutils.DbUtils dbUtils5 = new org.apache.commons.dbutils.DbUtils();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner2.update(connection3, "", (java.lang.Object) dbUtils5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner2.update(connection3, "hi!", (java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.sql.ResultSet resultSet0 = null;
        java.lang.Iterable<java.lang.Object[]> objArrayIterable1 = org.apache.commons.dbutils.ResultSetIterator.iterable(resultSet0);
        org.junit.Assert.assertNotNull(objArrayIterable1);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.closeQuietly(connection0);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.sql.ParameterMetaData parameterMetaData4 = null;
        java.sql.ResultSet resultSet6 = null;
        java.lang.Iterable<java.lang.Object[]> objArrayIterable7 = org.apache.commons.dbutils.ResultSetIterator.iterable(resultSet6);
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100.0d, resultSet6, (byte) 0 };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement3, parameterMetaData4, objArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.setObject(int, Object)\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArrayIterable7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100.0, null, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100.0, null, 0]");
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.Connection connection4 = null;
        java.lang.Object[] objArray6 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture7 = asyncQueryRunner3.update(connection4, "", objArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertArrayEquals(objArray6, new java.lang.Object[] {});
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner2.update(connection3, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.lang.Object[] objArray5 = new java.lang.Object[] { 0.0d };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner2.update("", objArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[0.0]");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.lang.Object[] objArray4 = null;
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement3, objArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration10);
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100.0f, (byte) 0, (-1) };
        java.time.Duration duration19 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration20 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 100.0f, (byte) 0, (-1) };
        java.time.Duration duration28 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration29 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration28);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100.0f, (byte) 0, (-1) };
        java.time.Duration duration37 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration38 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration37);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 100.0f, (byte) 0, (-1) };
        java.lang.Object[][] objArray40 = new java.lang.Object[][] { objArray12, objArray21, objArray30, objArray39 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture41 = asyncQueryRunner2.batch("hi!", objArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100.0, 0, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100.0, 0, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[100.0, 0, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[100.0, 0, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100.0, 0, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100.0, 0, -1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[100.0, 0, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[100.0, 0, -1]");
        org.junit.Assert.assertNotNull(objArray40);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.lang.Object[] objArray10 = new java.lang.Object[] { (short) 1, (byte) 1, 100 };
        java.lang.Object[] objArray14 = new java.lang.Object[] { (short) 1, (byte) 1, 100 };
        java.lang.Object[] objArray18 = new java.lang.Object[] { (short) 1, (byte) 1, 100 };
        java.lang.Object[] objArray22 = new java.lang.Object[] { (short) 1, (byte) 1, 100 };
        java.lang.Object[][] objArray23 = new java.lang.Object[][] { objArray10, objArray14, objArray18, objArray22 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture24 = asyncQueryRunner3.batch("hi!", objArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[1, 1, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[1, 1, 100]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1, 1, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1, 1, 100]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, 1, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, 1, 100]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, 1, 100]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, 1, 100]");
        org.junit.Assert.assertNotNull(objArray23);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.lang.Object[] objArray4 = new java.lang.Object[] {};
        java.lang.Object[] objArray5 = new java.lang.Object[] {};
        java.lang.Object[][] objArray6 = new java.lang.Object[][] { objArray4, objArray5 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture7 = asyncQueryRunner2.batch("hi!", objArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertArrayEquals(objArray4, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertArrayEquals(objArray5, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray6);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.sql.Statement statement0 = null;
        org.apache.commons.dbutils.DbUtils.close(statement0);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData4 = asyncQueryRunner2.getParameterMetaData(preparedStatement3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        boolean boolean1 = org.apache.commons.dbutils.DbUtils.loadDriver("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator1 = new org.apache.commons.dbutils.ResultSetIterator(resultSet0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray2 = resultSetIterator1.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.ResultSet.next()\" because \"this.resultSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.close(connection0);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.DbUtils.closeQuietly(resultSet0);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement5, (java.lang.Object) 1.0f, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class java.lang.Float ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertArrayEquals(strArray13, new java.lang.String[] { "", "hi!", "hi!", "hi!", "", "" });
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.sql.Statement statement0 = null;
        org.apache.commons.dbutils.DbUtils.closeQuietly(statement0);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.sql.Connection connection0 = null;
        java.sql.Statement statement1 = null;
        java.sql.ResultSet resultSet2 = null;
        org.apache.commons.dbutils.DbUtils.closeQuietly(connection0, statement1, resultSet2);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxFieldSize((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass7 = builder6.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration18 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration18);
        boolean boolean20 = statementConfiguration19.isMaxFieldSizeSet();
        java.lang.Integer int21 = statementConfiguration19.getMaxFieldSize();
        java.lang.Integer int22 = statementConfiguration19.getMaxFieldSize();
        boolean boolean23 = statementConfiguration19.isMaxRowsSet();
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        boolean boolean28 = asyncQueryRunner27.isPmdKnownBroken();
        javax.sql.DataSource dataSource29 = asyncQueryRunner27.getDataSource();
        javax.sql.DataSource dataSource30 = asyncQueryRunner27.getDataSource();
        java.lang.Object[] objArray31 = new java.lang.Object[] { builder11, '#', (short) 10, boolean23, dataSource30 };
        java.lang.Object[][] objArray32 = new java.lang.Object[][] { objArray31 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture33 = asyncQueryRunner3.batch("hi!", objArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(dataSource29);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray32);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.rollback(connection0);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatement(preparedStatement6, parameterMetaData7, (java.lang.Object[]) propertyDescriptorArray15);
        java.lang.Class<?> wildcardClass18 = propertyDescriptorArray15.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.Connection connection3 = null;
        java.lang.Object[] objArray6 = new java.lang.Object[] { 0.0f };
        java.lang.Object[] objArray8 = new java.lang.Object[] { 0.0f };
        java.lang.Object[][] objArray9 = new java.lang.Object[][] { objArray6, objArray8 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture10 = asyncQueryRunner2.batch(connection3, "hi!", objArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[0.0]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0]");
        org.junit.Assert.assertNotNull(objArray9);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture9 = asyncQueryRunner2.update("", (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService5 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner6 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, executorService5);
        java.beans.PropertyDescriptor propertyDescriptor7 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray8 = new java.beans.PropertyDescriptor[] { propertyDescriptor7 };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) dataSource4, propertyDescriptorArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.beans.PropertyDescriptor.getReadMethod()\" because \"property\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyDescriptorArray8);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray8, new java.beans.PropertyDescriptor[] { null });
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.RowProcessor rowProcessor1 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator2 = new org.apache.commons.dbutils.ResultSetIterator(resultSet0, rowProcessor1);
        // The following exception was thrown during execution in test generation
        try {
            resultSetIterator2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.ResultSet.deleteRow()\" because \"this.resultSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture7 = asyncQueryRunner3.update(connection4, "", (java.lang.Object) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture8 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) (-1), duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement5, (java.lang.Object[]) propertyDescriptorArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.ResultSet resultSet4 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator5 = new org.apache.commons.dbutils.ResultSetIterator(resultSet4);
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        boolean boolean10 = asyncQueryRunner8.isPmdKnownBroken();
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        boolean boolean15 = asyncQueryRunner14.isPmdKnownBroken();
        javax.sql.DataSource dataSource16 = asyncQueryRunner14.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder17.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder17.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration22 = builder21.build();
        java.lang.Object[] objArray23 = new java.lang.Object[] { resultSetIterator5, boolean10, asyncQueryRunner14, statementConfiguration22 };
        java.sql.ResultSet resultSet24 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator25 = new org.apache.commons.dbutils.ResultSetIterator(resultSet24);
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        boolean boolean30 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        javax.sql.DataSource dataSource36 = asyncQueryRunner34.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder37.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder37.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration42 = builder41.build();
        java.lang.Object[] objArray43 = new java.lang.Object[] { resultSetIterator25, boolean30, asyncQueryRunner34, statementConfiguration42 };
        java.sql.ResultSet resultSet44 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator45 = new org.apache.commons.dbutils.ResultSetIterator(resultSet44);
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        boolean boolean50 = asyncQueryRunner48.isPmdKnownBroken();
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        javax.sql.DataSource dataSource56 = asyncQueryRunner54.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder57 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder59 = builder57.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder61 = builder57.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration62 = builder61.build();
        java.lang.Object[] objArray63 = new java.lang.Object[] { resultSetIterator45, boolean50, asyncQueryRunner54, statementConfiguration62 };
        java.lang.Object[][] objArray64 = new java.lang.Object[][] { objArray23, objArray43, objArray63 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture65 = asyncQueryRunner2.batch("hi!", objArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(statementConfiguration22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(dataSource36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(statementConfiguration42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(dataSource56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(statementConfiguration62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray64);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.Connection connection3 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = builder9.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.maxFieldSize((java.lang.Integer) 100);
        java.lang.Object[] objArray17 = new java.lang.Object[] { statementConfiguration10, (-1L), 100 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder20.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration23 = builder22.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder27.maxFieldSize((java.lang.Integer) 100);
        java.lang.Object[] objArray30 = new java.lang.Object[] { statementConfiguration23, (-1L), 100 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder33.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration36 = builder35.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder38 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = builder38.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder40.maxFieldSize((java.lang.Integer) 100);
        java.lang.Object[] objArray43 = new java.lang.Object[] { statementConfiguration36, (-1L), 100 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder46.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration49 = builder48.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder51.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder55 = builder53.maxFieldSize((java.lang.Integer) 100);
        java.lang.Object[] objArray56 = new java.lang.Object[] { statementConfiguration49, (-1L), 100 };
        java.lang.Object[][] objArray57 = new java.lang.Object[][] { objArray17, objArray30, objArray43, objArray56 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture58 = asyncQueryRunner2.batch(connection3, "", objArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(statementConfiguration10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(statementConfiguration23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(statementConfiguration36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(statementConfiguration49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray57);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration10);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement5, (java.lang.Object) statementConfiguration11, strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertArrayEquals(strArray15, new java.lang.String[] { "", "", "hi!" });
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        java.lang.Object[][] objArray6 = new java.lang.Object[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture7 = asyncQueryRunner2.batch("hi!", objArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertArrayEquals(objArray6, new java.lang.Object[][] {});
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        boolean boolean1 = org.apache.commons.dbutils.DbUtils.loadDriver("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection5 = null;
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration12 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration11);
        boolean boolean13 = statementConfiguration12.isMaxFieldSizeSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture14 = asyncQueryRunner2.update(connection5, "hi!", (java.lang.Object) boolean13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatement(preparedStatement6, parameterMetaData7, (java.lang.Object[]) propertyDescriptorArray15);
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        java.lang.Object[] objArray38 = new java.lang.Object[] { asyncQueryRunner22, builder37 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture39 = asyncQueryRunner3.update("", objArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.rollbackAndCloseQuietly(connection0);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.time.Duration duration24 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration25 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration24);
        boolean boolean26 = statementConfiguration25.isMaxFieldSizeSet();
        java.lang.Integer int27 = statementConfiguration25.getMaxFieldSize();
        java.lang.Integer int28 = statementConfiguration25.getMaxFieldSize();
        boolean boolean29 = statementConfiguration25.isMaxRowsSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture30 = asyncQueryRunner3.update("hi!", (java.lang.Object) boolean29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        javax.sql.DataSource dataSource9 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource9, true, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        javax.sql.DataSource dataSource14 = asyncQueryRunner12.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        asyncQueryRunner12.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture27 = asyncQueryRunner3.update("hi!", (java.lang.Object[]) propertyDescriptorArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.lang.Object[] objArray6 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture7 = asyncQueryRunner3.update("", objArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertArrayEquals(objArray6, new java.lang.Object[] {});
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.lang.Integer int9 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData5 = asyncQueryRunner2.getParameterMetaData(preparedStatement4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        java.time.Duration duration8 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) (-1), duration8);
        boolean boolean10 = statementConfiguration9.isMaxRowsSet();
        java.lang.Object[] objArray11 = new java.lang.Object[] { boolean10 };
        java.time.Duration duration16 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration17 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) (-1), duration16);
        boolean boolean18 = statementConfiguration17.isMaxRowsSet();
        java.lang.Object[] objArray19 = new java.lang.Object[] { boolean18 };
        java.lang.Object[][] objArray20 = new java.lang.Object[][] { objArray11, objArray19 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture21 = asyncQueryRunner2.batch("", objArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]");
        org.junit.Assert.assertNotNull(objArray20);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.sql.Connection connection3 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService6);
        java.sql.PreparedStatement preparedStatement8 = null;
        javax.sql.DataSource dataSource9 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource9, true, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        javax.sql.DataSource dataSource14 = asyncQueryRunner12.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        asyncQueryRunner12.fillStatementWithBean(preparedStatement15, (java.lang.Object) 0, propertyDescriptorArray24);
        asyncQueryRunner7.fillStatement(preparedStatement8, (java.lang.Object[]) propertyDescriptorArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture28 = asyncQueryRunner2.update(connection3, "hi!", (java.lang.Object[]) propertyDescriptorArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isFetchDirectionSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner2.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner2.getParameterMetaData(preparedStatement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator1 = new org.apache.commons.dbutils.ResultSetIterator(resultSet0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = resultSetIterator1.hasNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.ResultSet.isLast()\" because \"this.resultSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService6);
        java.sql.PreparedStatement preparedStatement8 = null;
        javax.sql.DataSource dataSource9 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource9, true, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        javax.sql.DataSource dataSource14 = asyncQueryRunner12.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        asyncQueryRunner12.fillStatementWithBean(preparedStatement15, (java.lang.Object) 0, propertyDescriptorArray24);
        asyncQueryRunner7.fillStatement(preparedStatement8, (java.lang.Object[]) propertyDescriptorArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture28 = asyncQueryRunner3.update("", (java.lang.Object[]) propertyDescriptorArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.sql.Connection connection3 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder7.queryTimeout(duration10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture12 = asyncQueryRunner2.update(connection3, "hi!", (java.lang.Object) builder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration12 = builder11.build();
        java.time.Duration duration13 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder11.queryTimeout(duration13);
        java.lang.Object[] objArray15 = new java.lang.Object[] { builder11 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder16.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration21 = builder20.build();
        java.time.Duration duration22 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder20.queryTimeout(duration22);
        java.lang.Object[] objArray24 = new java.lang.Object[] { builder20 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration30 = builder29.build();
        java.time.Duration duration31 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder29.queryTimeout(duration31);
        java.lang.Object[] objArray33 = new java.lang.Object[] { builder29 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder38 = builder34.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration39 = builder38.build();
        java.time.Duration duration40 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder38.queryTimeout(duration40);
        java.lang.Object[] objArray42 = new java.lang.Object[] { builder38 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder43.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = builder43.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration48 = builder47.build();
        java.time.Duration duration49 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder47.queryTimeout(duration49);
        java.lang.Object[] objArray51 = new java.lang.Object[] { builder47 };
        java.lang.Object[][] objArray52 = new java.lang.Object[][] { objArray15, objArray24, objArray33, objArray42, objArray51 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture53 = asyncQueryRunner3.batch("", objArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(statementConfiguration12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(statementConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(statementConfiguration30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(statementConfiguration39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(statementConfiguration48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(objArray52);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.Connection connection4 = null;
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration10);
        boolean boolean12 = statementConfiguration11.isMaxFieldSizeSet();
        java.lang.Integer int13 = statementConfiguration11.getMaxFieldSize();
        boolean boolean14 = statementConfiguration11.isFetchSizeSet();
        boolean boolean15 = statementConfiguration11.isMaxFieldSizeSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture16 = asyncQueryRunner3.update(connection4, "hi!", (java.lang.Object) boolean15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner1 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration8 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration7);
        boolean boolean9 = statementConfiguration8.isMaxFieldSizeSet();
        java.time.Duration duration10 = statementConfiguration8.getQueryTimeoutDuration();
        boolean boolean11 = statementConfiguration8.isFetchSizeSet();
        boolean boolean12 = statementConfiguration8.isMaxFieldSizeSet();
        boolean boolean13 = statementConfiguration8.isFetchDirectionSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture14 = asyncQueryRunner1.update("", (java.lang.Object) statementConfiguration8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner2.getParameterMetaData(preparedStatement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder11.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder14.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder18.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder22.maxRows((java.lang.Integer) 1);
        java.time.Duration duration29 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration30 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration29);
        boolean boolean31 = statementConfiguration30.isMaxFieldSizeSet();
        java.lang.Integer int32 = statementConfiguration30.getMaxFieldSize();
        boolean boolean33 = statementConfiguration30.isFetchSizeSet();
        java.time.Duration duration34 = statementConfiguration30.getQueryTimeoutDuration();
        boolean boolean35 = statementConfiguration30.isQueryTimeoutSet();
        java.lang.Integer int36 = statementConfiguration30.getFetchDirection();
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService37);
        java.lang.Object[] objArray39 = new java.lang.Object[] { builder13, builder22, statementConfiguration30, asyncQueryRunner38 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture40 = asyncQueryRunner3.update("hi!", objArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(objArray39);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.time.Duration duration16 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration17 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration16);
        boolean boolean18 = statementConfiguration17.isMaxFieldSizeSet();
        java.lang.Integer int19 = statementConfiguration17.getMaxFieldSize();
        boolean boolean20 = statementConfiguration17.isFetchSizeSet();
        java.time.Duration duration21 = statementConfiguration17.getQueryTimeoutDuration();
        java.lang.Integer int22 = statementConfiguration17.getFetchSize();
        boolean boolean23 = statementConfiguration17.isMaxFieldSizeSet();
        java.lang.Object[] objArray24 = new java.lang.Object[] { boolean23 };
        java.time.Duration duration29 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration30 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration29);
        boolean boolean31 = statementConfiguration30.isMaxFieldSizeSet();
        java.lang.Integer int32 = statementConfiguration30.getMaxFieldSize();
        boolean boolean33 = statementConfiguration30.isFetchSizeSet();
        java.time.Duration duration34 = statementConfiguration30.getQueryTimeoutDuration();
        java.lang.Integer int35 = statementConfiguration30.getFetchSize();
        boolean boolean36 = statementConfiguration30.isMaxFieldSizeSet();
        java.lang.Object[] objArray37 = new java.lang.Object[] { boolean36 };
        java.time.Duration duration42 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration43 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration42);
        boolean boolean44 = statementConfiguration43.isMaxFieldSizeSet();
        java.lang.Integer int45 = statementConfiguration43.getMaxFieldSize();
        boolean boolean46 = statementConfiguration43.isFetchSizeSet();
        java.time.Duration duration47 = statementConfiguration43.getQueryTimeoutDuration();
        java.lang.Integer int48 = statementConfiguration43.getFetchSize();
        boolean boolean49 = statementConfiguration43.isMaxFieldSizeSet();
        java.lang.Object[] objArray50 = new java.lang.Object[] { boolean49 };
        java.time.Duration duration55 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration56 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration55);
        boolean boolean57 = statementConfiguration56.isMaxFieldSizeSet();
        java.lang.Integer int58 = statementConfiguration56.getMaxFieldSize();
        boolean boolean59 = statementConfiguration56.isFetchSizeSet();
        java.time.Duration duration60 = statementConfiguration56.getQueryTimeoutDuration();
        java.lang.Integer int61 = statementConfiguration56.getFetchSize();
        boolean boolean62 = statementConfiguration56.isMaxFieldSizeSet();
        java.lang.Object[] objArray63 = new java.lang.Object[] { boolean62 };
        java.lang.Object[][] objArray64 = new java.lang.Object[][] { objArray24, objArray37, objArray50, objArray63 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture65 = asyncQueryRunner3.batch("hi!", objArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[true]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[true]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(duration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[true]");
        org.junit.Assert.assertNotNull(objArray64);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.lang.Object[] objArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture9 = asyncQueryRunner3.update("hi!", objArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.time.Duration duration9 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration9);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement4, (java.lang.Object) duration9, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertArrayEquals(strArray17, new java.lang.String[] { "hi!", "", "", "", "", "hi!" });
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder4.fetchSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = builder10.build();
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) builder10, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration$Builder ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(statementConfiguration11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertArrayEquals(strArray13, new java.lang.String[] { "" });
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.sql.Connection connection0 = null;
        org.apache.commons.dbutils.DbUtils.printWarnings(connection0);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatement(preparedStatement6, parameterMetaData7, (java.lang.Object[]) propertyDescriptorArray15);
        java.time.Duration duration23 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration24 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration23);
        boolean boolean25 = statementConfiguration24.isMaxFieldSizeSet();
        java.lang.Integer int26 = statementConfiguration24.getMaxRows();
        boolean boolean27 = statementConfiguration24.isFetchDirectionSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture28 = asyncQueryRunner3.update("hi!", (java.lang.Object) statementConfiguration24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner2.update(connection3, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.sql.ResultSet resultSet0 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator1 = new org.apache.commons.dbutils.ResultSetIterator(resultSet0);
        // The following exception was thrown during execution in test generation
        try {
            resultSetIterator1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.ResultSet.deleteRow()\" because \"this.resultSet\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        boolean boolean12 = asyncQueryRunner10.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture13 = asyncQueryRunner3.update(connection6, "", (java.lang.Object) asyncQueryRunner10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        java.sql.PreparedStatement preparedStatement8 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder9.fetchSize((java.lang.Integer) 1);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement8, (java.lang.Object) 1, strArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class java.lang.Integer hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertArrayEquals(strArray20, new java.lang.String[] { "hi!", "", "", "", "", "" });
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        java.sql.Connection connection3 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.lang.Object obj11 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner8.fillStatementWithBean(preparedStatement10, obj11, propertyDescriptorArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture14 = asyncQueryRunner2.update(connection3, "", (java.lang.Object[]) propertyDescriptorArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray12, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture7 = asyncQueryRunner3.update(connection4, "", (java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService22);
        java.lang.Object[] objArray25 = new java.lang.Object[] { (-1L), true, (short) 0 };
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService28);
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1L), true, (short) 0 };
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { (-1L), true, (short) 0 };
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService40);
        java.lang.Object[] objArray43 = new java.lang.Object[] { (-1L), true, (short) 0 };
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService46);
        java.lang.Object[] objArray49 = new java.lang.Object[] { (-1L), true, (short) 0 };
        java.lang.Object[][] objArray50 = new java.lang.Object[][] { objArray25, objArray31, objArray37, objArray43, objArray49 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture51 = asyncQueryRunner3.batch("hi!", objArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1, true, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1, true, 0]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1, true, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1, true, 0]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, true, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, true, 0]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[-1, true, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[-1, true, 0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[-1, true, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[-1, true, 0]");
        org.junit.Assert.assertNotNull(objArray50);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder21.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder21.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder21.fetchSize((java.lang.Integer) (-1));
        java.time.Duration duration28 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder27.queryTimeout(duration28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture30 = asyncQueryRunner3.update("hi!", (java.lang.Object) builder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 10, (java.lang.Integer) 0, duration4);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        java.sql.Connection connection18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture20 = asyncQueryRunner3.update(connection18, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture7 = asyncQueryRunner3.update(connection5, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.lang.Integer int9 = statementConfiguration5.getFetchSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean9 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection10 = null;
        java.time.Duration duration16 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration17 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration16);
        boolean boolean18 = statementConfiguration17.isMaxFieldSizeSet();
        java.lang.Integer int19 = statementConfiguration17.getMaxFieldSize();
        java.lang.Integer int20 = statementConfiguration17.getMaxFieldSize();
        boolean boolean21 = statementConfiguration17.isMaxRowsSet();
        java.time.Duration duration22 = statementConfiguration17.getQueryTimeoutDuration();
        java.lang.Object[] objArray23 = new java.lang.Object[] { statementConfiguration17 };
        java.time.Duration duration28 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration29 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration28);
        boolean boolean30 = statementConfiguration29.isMaxFieldSizeSet();
        java.lang.Integer int31 = statementConfiguration29.getMaxFieldSize();
        java.lang.Integer int32 = statementConfiguration29.getMaxFieldSize();
        boolean boolean33 = statementConfiguration29.isMaxRowsSet();
        java.time.Duration duration34 = statementConfiguration29.getQueryTimeoutDuration();
        java.lang.Object[] objArray35 = new java.lang.Object[] { statementConfiguration29 };
        java.time.Duration duration40 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration41 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration40);
        boolean boolean42 = statementConfiguration41.isMaxFieldSizeSet();
        java.lang.Integer int43 = statementConfiguration41.getMaxFieldSize();
        java.lang.Integer int44 = statementConfiguration41.getMaxFieldSize();
        boolean boolean45 = statementConfiguration41.isMaxRowsSet();
        java.time.Duration duration46 = statementConfiguration41.getQueryTimeoutDuration();
        java.lang.Object[] objArray47 = new java.lang.Object[] { statementConfiguration41 };
        java.lang.Object[][] objArray48 = new java.lang.Object[][] { objArray23, objArray35, objArray47 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture49 = asyncQueryRunner3.batch(connection10, "", objArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(duration22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(duration34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(duration46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray48);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        java.sql.PreparedStatement preparedStatement16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService18 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner19 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, executorService18);
        boolean boolean20 = asyncQueryRunner19.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement21 = null;
        java.sql.ParameterMetaData parameterMetaData22 = null;
        java.util.concurrent.ExecutorService executorService24 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner25 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService24);
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        javax.sql.DataSource dataSource32 = asyncQueryRunner30.getDataSource();
        java.sql.PreparedStatement preparedStatement33 = null;
        javax.sql.DataSource dataSource35 = null;
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource35, true, executorService37);
        boolean boolean39 = asyncQueryRunner38.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement40 = null;
        java.lang.Object obj41 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner38.fillStatementWithBean(preparedStatement40, obj41, propertyDescriptorArray42);
        asyncQueryRunner30.fillStatementWithBean(preparedStatement33, (java.lang.Object) 0, propertyDescriptorArray42);
        asyncQueryRunner25.fillStatement(preparedStatement26, (java.lang.Object[]) propertyDescriptorArray42);
        asyncQueryRunner19.fillStatement(preparedStatement21, parameterMetaData22, (java.lang.Object[]) propertyDescriptorArray42);
        asyncQueryRunner10.fillStatement(preparedStatement16, (java.lang.Object[]) propertyDescriptorArray42);
        javax.sql.DataSource dataSource48 = asyncQueryRunner10.getDataSource();
        boolean boolean49 = asyncQueryRunner10.isPmdKnownBroken();
        java.lang.String[] strArray54 = new java.lang.String[] { "", "", "hi!", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement6, (java.lang.Object) asyncQueryRunner10, strArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.AsyncQueryRunner ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray42, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertArrayEquals(strArray54, new java.lang.String[] { "", "", "hi!", "hi!" });
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService15);
        java.sql.PreparedStatement preparedStatement17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement31 = null;
        java.lang.Object obj32 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement31, obj32, propertyDescriptorArray33);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement24, (java.lang.Object) 0, propertyDescriptorArray33);
        asyncQueryRunner16.fillStatement(preparedStatement17, (java.lang.Object[]) propertyDescriptorArray33);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray33);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture38 = asyncQueryRunner3.update(connection6, "hi!", (java.lang.Object[]) propertyDescriptorArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray33, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder4.fetchDirection((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture38 = asyncQueryRunner3.update("", (java.lang.Object) preparedStatement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture7 = asyncQueryRunner2.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection11 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatement(preparedStatement19, parameterMetaData20, (java.lang.Object[]) propertyDescriptorArray28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture31 = asyncQueryRunner3.update(connection11, "", (java.lang.Object[]) propertyDescriptorArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.lang.Object obj10 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray11 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner7.fillStatementWithBean(preparedStatement9, obj10, propertyDescriptorArray11);
        java.sql.PreparedStatement preparedStatement13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService21);
        java.sql.PreparedStatement preparedStatement23 = null;
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        boolean boolean28 = asyncQueryRunner27.isPmdKnownBroken();
        javax.sql.DataSource dataSource29 = asyncQueryRunner27.getDataSource();
        java.sql.PreparedStatement preparedStatement30 = null;
        javax.sql.DataSource dataSource32 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource32, true, executorService34);
        boolean boolean36 = asyncQueryRunner35.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement37 = null;
        java.lang.Object obj38 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner35.fillStatementWithBean(preparedStatement37, obj38, propertyDescriptorArray39);
        asyncQueryRunner27.fillStatementWithBean(preparedStatement30, (java.lang.Object) 0, propertyDescriptorArray39);
        asyncQueryRunner22.fillStatement(preparedStatement23, (java.lang.Object[]) propertyDescriptorArray39);
        asyncQueryRunner16.fillStatement(preparedStatement18, parameterMetaData19, (java.lang.Object[]) propertyDescriptorArray39);
        asyncQueryRunner7.fillStatement(preparedStatement13, (java.lang.Object[]) propertyDescriptorArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture45 = asyncQueryRunner2.update("", (java.lang.Object[]) propertyDescriptorArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray11);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray11, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(dataSource29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray39, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchSize((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        java.sql.PreparedStatement preparedStatement18 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder19.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder19.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder19.fetchSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration26 = builder25.build();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement18, (java.lang.Object) statementConfiguration26, strArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(statementConfiguration26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "hi!", "", "" });
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.queryTimeout(duration7);
        java.lang.Class<?> wildcardClass9 = builder4.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder0.fetchSize((java.lang.Integer) (-1));
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder6.build();
        boolean boolean10 = statementConfiguration9.isFetchSizeSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.maxRows((java.lang.Integer) 10);
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchDirection((java.lang.Integer) 10);
        java.lang.Object[] objArray21 = new java.lang.Object[] { builder20 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture22 = asyncQueryRunner3.update("", objArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(objArray21);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray14);
        java.lang.Class<?> wildcardClass17 = propertyDescriptorArray14.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean9 = asyncQueryRunner3.isPmdKnownBroken();
        java.lang.Object[][] objArray11 = new java.lang.Object[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture12 = asyncQueryRunner3.batch("hi!", objArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertArrayEquals(objArray11, new java.lang.Object[][] {});
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement21 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement21, (java.lang.Object) (byte) -1, strArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class java.lang.Byte ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertArrayEquals(strArray25, new java.lang.String[] { "", "hi!" });
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture10 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatement(preparedStatement6, parameterMetaData7, (java.lang.Object[]) propertyDescriptorArray15);
        java.sql.Connection connection18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture20 = asyncQueryRunner3.update(connection18, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture4 = asyncQueryRunner2.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchDirection((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass11 = builder8.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.maxRows((java.lang.Integer) 10);
        java.time.Duration duration17 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder14.queryTimeout(duration17);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder14.fetchDirection((java.lang.Integer) 1);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement9, (java.lang.Object) builder14, strArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration$Builder ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertArrayEquals(strArray26, new java.lang.String[] { "", "", "", "", "hi!" });
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        java.lang.Object[] objArray8 = new java.lang.Object[] {};
        java.lang.Object[] objArray9 = new java.lang.Object[] {};
        java.lang.Object[] objArray10 = new java.lang.Object[] {};
        java.lang.Object[][] objArray11 = new java.lang.Object[][] { objArray7, objArray8, objArray9, objArray10 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture12 = asyncQueryRunner2.batch("hi!", objArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertArrayEquals(objArray7, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertArrayEquals(objArray8, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertArrayEquals(objArray9, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertArrayEquals(objArray10, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray11);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        javax.sql.DataSource dataSource10 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.lang.Object obj19 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner16.fillStatementWithBean(preparedStatement18, obj19, propertyDescriptorArray20);
        asyncQueryRunner8.fillStatementWithBean(preparedStatement11, (java.lang.Object) 0, propertyDescriptorArray20);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatement(preparedStatement4, (java.lang.Object[]) propertyDescriptorArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray20, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        javax.sql.DataSource dataSource11 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource12 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.time.Duration duration18 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration18);
        boolean boolean20 = statementConfiguration19.isMaxFieldSizeSet();
        java.time.Duration duration21 = statementConfiguration19.getQueryTimeoutDuration();
        boolean boolean22 = statementConfiguration19.isFetchSizeSet();
        boolean boolean23 = statementConfiguration19.isMaxFieldSizeSet();
        boolean boolean24 = statementConfiguration19.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService26);
        java.sql.PreparedStatement preparedStatement28 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        javax.sql.DataSource dataSource34 = asyncQueryRunner32.getDataSource();
        java.sql.PreparedStatement preparedStatement35 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner32.fillStatementWithBean(preparedStatement35, (java.lang.Object) 0, propertyDescriptorArray44);
        asyncQueryRunner27.fillStatement(preparedStatement28, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner9.fillStatementWithBean(preparedStatement13, (java.lang.Object) statementConfiguration19, propertyDescriptorArray44);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray44);
        java.sql.PreparedStatement preparedStatement50 = null;
        java.time.Duration duration55 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration56 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration55);
        boolean boolean57 = statementConfiguration56.isMaxFieldSizeSet();
        java.lang.Integer int58 = statementConfiguration56.getMaxFieldSize();
        boolean boolean59 = statementConfiguration56.isFetchSizeSet();
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement50, (java.lang.Object) statementConfiguration56, propertyDescriptorArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertNull(dataSource12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(dataSource34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray60, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection20 = null;
        java.lang.Object[] objArray22 = new java.lang.Object[] {};
        java.lang.Object[] objArray23 = new java.lang.Object[] {};
        java.lang.Object[] objArray24 = new java.lang.Object[] {};
        java.lang.Object[][] objArray25 = new java.lang.Object[][] { objArray22, objArray23, objArray24 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture26 = asyncQueryRunner3.batch(connection20, "hi!", objArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertArrayEquals(objArray22, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertArrayEquals(objArray23, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertArrayEquals(objArray24, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray25);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.sql.ParameterMetaData parameterMetaData4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService12);
        java.sql.PreparedStatement preparedStatement14 = null;
        javax.sql.DataSource dataSource15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource15, true, executorService17);
        boolean boolean19 = asyncQueryRunner18.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner18.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        asyncQueryRunner18.fillStatementWithBean(preparedStatement21, (java.lang.Object) 0, propertyDescriptorArray30);
        asyncQueryRunner13.fillStatement(preparedStatement14, (java.lang.Object[]) propertyDescriptorArray30);
        asyncQueryRunner7.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray30);
        asyncQueryRunner2.fillStatement(preparedStatement3, parameterMetaData4, (java.lang.Object[]) propertyDescriptorArray30);
        java.sql.Connection connection36 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder38 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = builder38.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder38.fetchSize((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture43 = asyncQueryRunner2.update(connection36, "", (java.lang.Object) builder42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        java.lang.Class<?> wildcardClass6 = statementConfiguration5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        java.lang.Object[] objArray22 = new java.lang.Object[] {};
        java.lang.Object[] objArray23 = new java.lang.Object[] {};
        java.lang.Object[] objArray24 = new java.lang.Object[] {};
        java.lang.Object[] objArray25 = new java.lang.Object[] {};
        java.lang.Object[] objArray26 = new java.lang.Object[] {};
        java.lang.Object[][] objArray27 = new java.lang.Object[][] { objArray22, objArray23, objArray24, objArray25, objArray26 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture28 = asyncQueryRunner3.batch("hi!", objArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertArrayEquals(objArray22, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertArrayEquals(objArray23, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertArrayEquals(objArray24, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertArrayEquals(objArray25, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertArrayEquals(objArray26, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        javax.sql.DataSource dataSource12 = asyncQueryRunner10.getDataSource();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.sql.ParameterMetaData parameterMetaData14 = null;
        javax.sql.DataSource dataSource15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource15, true, executorService17);
        boolean boolean19 = asyncQueryRunner18.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.lang.Object obj21 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner18.fillStatementWithBean(preparedStatement20, obj21, propertyDescriptorArray22);
        asyncQueryRunner10.fillStatement(preparedStatement13, parameterMetaData14, (java.lang.Object[]) propertyDescriptorArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture25 = asyncQueryRunner2.update("", (java.lang.Object[]) propertyDescriptorArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(dataSource12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray22, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = duration7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection7 = null;
        javax.sql.DataSource dataSource9 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource9, true, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        javax.sql.DataSource dataSource14 = asyncQueryRunner12.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        asyncQueryRunner12.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture27 = asyncQueryRunner3.update(connection7, "hi!", (java.lang.Object[]) propertyDescriptorArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Class<?> wildcardClass10 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.Connection connection39 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder41.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder41.fetchSize((java.lang.Integer) (-1));
        java.lang.Object[] objArray47 = new java.lang.Object[] { builder45, 1L };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture48 = asyncQueryRunner3.update(connection39, "hi!", objArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(objArray47);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatement(preparedStatement6, parameterMetaData7, (java.lang.Object[]) propertyDescriptorArray15);
        java.sql.Connection connection18 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder20.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder20.fetchSize((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture25 = asyncQueryRunner3.update(connection18, "", (java.lang.Object) builder24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement21 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { 100.0d };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatement(preparedStatement21, objArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.setObject(int, Object)\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[100.0]");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean6 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        javax.sql.DataSource dataSource13 = asyncQueryRunner11.getDataSource();
        java.sql.PreparedStatement preparedStatement14 = null;
        javax.sql.DataSource dataSource16 = null;
        java.util.concurrent.ExecutorService executorService18 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner19 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource16, true, executorService18);
        boolean boolean20 = asyncQueryRunner19.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement21 = null;
        java.lang.Object obj22 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner19.fillStatementWithBean(preparedStatement21, obj22, propertyDescriptorArray23);
        asyncQueryRunner11.fillStatementWithBean(preparedStatement14, (java.lang.Object) 0, propertyDescriptorArray23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture26 = asyncQueryRunner2.update("hi!", (java.lang.Object[]) propertyDescriptorArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(dataSource13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray23, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection5 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] {};
        java.lang.Object[] objArray8 = new java.lang.Object[] {};
        java.lang.Object[] objArray9 = new java.lang.Object[] {};
        java.lang.Object[] objArray10 = new java.lang.Object[] {};
        java.lang.Object[] objArray11 = new java.lang.Object[] {};
        java.lang.Object[][] objArray12 = new java.lang.Object[][] { objArray7, objArray8, objArray9, objArray10, objArray11 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture13 = asyncQueryRunner2.batch(connection5, "hi!", objArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertArrayEquals(objArray7, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertArrayEquals(objArray8, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertArrayEquals(objArray9, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertArrayEquals(objArray10, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertArrayEquals(objArray11, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray12);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner3.update(connection42, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean6 = asyncQueryRunner2.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture8 = asyncQueryRunner2.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        boolean boolean32 = asyncQueryRunner3.isPmdKnownBroken();
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService35);
        java.sql.PreparedStatement preparedStatement37 = null;
        javax.sql.DataSource dataSource38 = null;
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource38, true, executorService40);
        boolean boolean42 = asyncQueryRunner41.isPmdKnownBroken();
        javax.sql.DataSource dataSource43 = asyncQueryRunner41.getDataSource();
        java.sql.PreparedStatement preparedStatement44 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService48 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner49 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, true, executorService48);
        boolean boolean50 = asyncQueryRunner49.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement51 = null;
        java.lang.Object obj52 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray53 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner49.fillStatementWithBean(preparedStatement51, obj52, propertyDescriptorArray53);
        asyncQueryRunner41.fillStatementWithBean(preparedStatement44, (java.lang.Object) 0, propertyDescriptorArray53);
        asyncQueryRunner36.fillStatement(preparedStatement37, (java.lang.Object[]) propertyDescriptorArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture57 = asyncQueryRunner3.update("", (java.lang.Object[]) propertyDescriptorArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(dataSource43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray53);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray53, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        java.lang.Integer int10 = statementConfiguration9.getMaxRows();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean11 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean12 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray14);
        java.sql.Connection connection17 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement24 = null;
        java.lang.Object obj25 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner22.fillStatementWithBean(preparedStatement24, obj25, propertyDescriptorArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture28 = asyncQueryRunner3.update(connection17, "hi!", (java.lang.Object[]) propertyDescriptorArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray26, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.util.concurrent.ExecutorService executorService5 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner6 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) executorService5, strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertArrayEquals(strArray11, new java.lang.String[] { "", "hi!", "", "hi!" });
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int8 = statementConfiguration5.getMaxRows();
        java.lang.Class<?> wildcardClass9 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        boolean boolean15 = asyncQueryRunner14.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.lang.Object obj17 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner14.fillStatementWithBean(preparedStatement16, obj17, propertyDescriptorArray18);
        javax.sql.DataSource dataSource20 = asyncQueryRunner14.getDataSource();
        javax.sql.DataSource dataSource21 = asyncQueryRunner14.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = null;
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        boolean boolean28 = asyncQueryRunner27.isPmdKnownBroken();
        javax.sql.DataSource dataSource29 = asyncQueryRunner27.getDataSource();
        java.sql.PreparedStatement preparedStatement30 = null;
        javax.sql.DataSource dataSource32 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource32, true, executorService34);
        boolean boolean36 = asyncQueryRunner35.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement37 = null;
        java.lang.Object obj38 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner35.fillStatementWithBean(preparedStatement37, obj38, propertyDescriptorArray39);
        asyncQueryRunner27.fillStatementWithBean(preparedStatement30, (java.lang.Object) 0, propertyDescriptorArray39);
        asyncQueryRunner14.fillStatement(preparedStatement22, parameterMetaData23, (java.lang.Object[]) propertyDescriptorArray39);
        asyncQueryRunner8.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray39);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement4, (java.lang.Object[]) propertyDescriptorArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray18, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(dataSource29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray39, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement24 = null;
        java.lang.Object obj25 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray26 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner22.fillStatementWithBean(preparedStatement24, obj25, propertyDescriptorArray26);
        javax.sql.DataSource dataSource28 = asyncQueryRunner22.getDataSource();
        javax.sql.DataSource dataSource29 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement30 = null;
        java.sql.ParameterMetaData parameterMetaData31 = null;
        javax.sql.DataSource dataSource32 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource32, true, executorService34);
        boolean boolean36 = asyncQueryRunner35.isPmdKnownBroken();
        javax.sql.DataSource dataSource37 = asyncQueryRunner35.getDataSource();
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource40 = null;
        java.util.concurrent.ExecutorService executorService42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource40, true, executorService42);
        boolean boolean44 = asyncQueryRunner43.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.lang.Object obj46 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner43.fillStatementWithBean(preparedStatement45, obj46, propertyDescriptorArray47);
        asyncQueryRunner35.fillStatementWithBean(preparedStatement38, (java.lang.Object) 0, propertyDescriptorArray47);
        asyncQueryRunner22.fillStatement(preparedStatement30, parameterMetaData31, (java.lang.Object[]) propertyDescriptorArray47);
        java.sql.PreparedStatement preparedStatement51 = null;
        javax.sql.DataSource dataSource52 = null;
        java.util.concurrent.ExecutorService executorService54 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner55 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource52, true, executorService54);
        boolean boolean56 = asyncQueryRunner55.isPmdKnownBroken();
        javax.sql.DataSource dataSource57 = asyncQueryRunner55.getDataSource();
        java.sql.PreparedStatement preparedStatement58 = null;
        javax.sql.DataSource dataSource60 = null;
        java.util.concurrent.ExecutorService executorService62 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner63 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource60, true, executorService62);
        boolean boolean64 = asyncQueryRunner63.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement65 = null;
        java.lang.Object obj66 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray67 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner63.fillStatementWithBean(preparedStatement65, obj66, propertyDescriptorArray67);
        asyncQueryRunner55.fillStatementWithBean(preparedStatement58, (java.lang.Object) 0, propertyDescriptorArray67);
        asyncQueryRunner22.fillStatement(preparedStatement51, (java.lang.Object[]) propertyDescriptorArray67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture71 = asyncQueryRunner3.update("hi!", (java.lang.Object) preparedStatement51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray26);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray26, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertNull(dataSource29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(dataSource37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray47, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(dataSource57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray67);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray67, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        boolean boolean43 = statementConfiguration13.isQueryTimeoutSet();
        java.time.Duration duration44 = statementConfiguration13.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(duration44);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        java.lang.Integer int8 = statementConfiguration5.getFetchSize();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(duration9);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData6 = asyncQueryRunner2.getParameterMetaData(preparedStatement5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.maxRows((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        javax.sql.DataSource dataSource21 = asyncQueryRunner15.getDataSource();
        javax.sql.DataSource dataSource22 = asyncQueryRunner15.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.sql.ParameterMetaData parameterMetaData24 = null;
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, true, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource30 = asyncQueryRunner28.getDataSource();
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.lang.Object obj39 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner36.fillStatementWithBean(preparedStatement38, obj39, propertyDescriptorArray40);
        asyncQueryRunner28.fillStatementWithBean(preparedStatement31, (java.lang.Object) 0, propertyDescriptorArray40);
        asyncQueryRunner15.fillStatement(preparedStatement23, parameterMetaData24, (java.lang.Object[]) propertyDescriptorArray40);
        java.sql.PreparedStatement preparedStatement44 = null;
        javax.sql.DataSource dataSource45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource45, true, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        javax.sql.DataSource dataSource50 = asyncQueryRunner48.getDataSource();
        java.sql.PreparedStatement preparedStatement51 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService55 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner56 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, true, executorService55);
        boolean boolean57 = asyncQueryRunner56.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.lang.Object obj59 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner56.fillStatementWithBean(preparedStatement58, obj59, propertyDescriptorArray60);
        asyncQueryRunner48.fillStatementWithBean(preparedStatement51, (java.lang.Object) 0, propertyDescriptorArray60);
        asyncQueryRunner15.fillStatement(preparedStatement44, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner9.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray60);
        java.sql.Connection connection66 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder68 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder70 = builder68.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder72 = builder68.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder74 = builder72.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder76 = builder74.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder78 = builder74.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration79 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder80 = builder78.queryTimeout(duration79);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder82 = builder78.maxRows((java.lang.Integer) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture83 = asyncQueryRunner2.update(connection66, "", (java.lang.Object) builder82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray40, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(dataSource50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray60, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder15.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder17.maxFieldSize((java.lang.Integer) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture20 = asyncQueryRunner3.update(connection11, "hi!", (java.lang.Object) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture19 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture10 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean9 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration16 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration15);
        boolean boolean17 = statementConfiguration16.isQueryTimeoutSet();
        java.lang.Integer int18 = statementConfiguration16.getQueryTimeout();
        java.lang.Integer int19 = statementConfiguration16.getQueryTimeout();
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement10, (java.lang.Object) int19, strArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertArrayEquals(strArray22, new java.lang.String[] { "", "" });
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchDirection((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement48 = null;
        java.lang.Object obj49 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner46.fillStatementWithBean(preparedStatement48, obj49, propertyDescriptorArray50);
        javax.sql.DataSource dataSource52 = asyncQueryRunner46.getDataSource();
        javax.sql.DataSource dataSource53 = asyncQueryRunner46.getDataSource();
        java.sql.PreparedStatement preparedStatement54 = null;
        java.sql.ParameterMetaData parameterMetaData55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner46.fillStatement(preparedStatement54, parameterMetaData55, (java.lang.Object[]) propertyDescriptorArray71);
        java.sql.PreparedStatement preparedStatement75 = null;
        javax.sql.DataSource dataSource76 = null;
        java.util.concurrent.ExecutorService executorService78 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner79 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource76, true, executorService78);
        boolean boolean80 = asyncQueryRunner79.isPmdKnownBroken();
        javax.sql.DataSource dataSource81 = asyncQueryRunner79.getDataSource();
        java.sql.PreparedStatement preparedStatement82 = null;
        javax.sql.DataSource dataSource84 = null;
        java.util.concurrent.ExecutorService executorService86 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner87 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource84, true, executorService86);
        boolean boolean88 = asyncQueryRunner87.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement89 = null;
        java.lang.Object obj90 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray91 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner87.fillStatementWithBean(preparedStatement89, obj90, propertyDescriptorArray91);
        asyncQueryRunner79.fillStatementWithBean(preparedStatement82, (java.lang.Object) 0, propertyDescriptorArray91);
        asyncQueryRunner46.fillStatement(preparedStatement75, (java.lang.Object[]) propertyDescriptorArray91);
        java.lang.String[] strArray96 = new java.lang.String[] { "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement42, (java.lang.Object) preparedStatement75, strArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray50, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertNull(dataSource53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(dataSource81);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray91);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray91, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertArrayEquals(strArray96, new java.lang.String[] { "hi!" });
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.util.concurrent.ExecutorService executorService5 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner6 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService5);
        java.sql.PreparedStatement preparedStatement7 = null;
        java.sql.ParameterMetaData parameterMetaData8 = null;
        javax.sql.DataSource dataSource9 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource9, true, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        javax.sql.DataSource dataSource14 = asyncQueryRunner12.getDataSource();
        javax.sql.DataSource dataSource15 = asyncQueryRunner12.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.time.Duration duration21 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration22 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration21);
        boolean boolean23 = statementConfiguration22.isMaxFieldSizeSet();
        java.time.Duration duration24 = statementConfiguration22.getQueryTimeoutDuration();
        boolean boolean25 = statementConfiguration22.isFetchSizeSet();
        boolean boolean26 = statementConfiguration22.isMaxFieldSizeSet();
        boolean boolean27 = statementConfiguration22.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService29);
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource32 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource32, true, executorService34);
        boolean boolean36 = asyncQueryRunner35.isPmdKnownBroken();
        javax.sql.DataSource dataSource37 = asyncQueryRunner35.getDataSource();
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource40 = null;
        java.util.concurrent.ExecutorService executorService42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource40, true, executorService42);
        boolean boolean44 = asyncQueryRunner43.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.lang.Object obj46 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray47 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner43.fillStatementWithBean(preparedStatement45, obj46, propertyDescriptorArray47);
        asyncQueryRunner35.fillStatementWithBean(preparedStatement38, (java.lang.Object) 0, propertyDescriptorArray47);
        asyncQueryRunner30.fillStatement(preparedStatement31, (java.lang.Object[]) propertyDescriptorArray47);
        asyncQueryRunner12.fillStatementWithBean(preparedStatement16, (java.lang.Object) statementConfiguration22, propertyDescriptorArray47);
        asyncQueryRunner6.fillStatement(preparedStatement7, parameterMetaData8, (java.lang.Object[]) propertyDescriptorArray47);
        java.sql.PreparedStatement preparedStatement53 = null;
        java.sql.ParameterMetaData parameterMetaData54 = null;
        javax.sql.DataSource dataSource55 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner58 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource55, true, executorService57);
        boolean boolean59 = asyncQueryRunner58.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.lang.Object obj61 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner58.fillStatementWithBean(preparedStatement60, obj61, propertyDescriptorArray62);
        java.sql.PreparedStatement preparedStatement64 = null;
        javax.sql.DataSource dataSource65 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource65, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.sql.ParameterMetaData parameterMetaData70 = null;
        java.util.concurrent.ExecutorService executorService72 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner73 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService72);
        java.sql.PreparedStatement preparedStatement74 = null;
        javax.sql.DataSource dataSource75 = null;
        java.util.concurrent.ExecutorService executorService77 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner78 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource75, true, executorService77);
        boolean boolean79 = asyncQueryRunner78.isPmdKnownBroken();
        javax.sql.DataSource dataSource80 = asyncQueryRunner78.getDataSource();
        java.sql.PreparedStatement preparedStatement81 = null;
        javax.sql.DataSource dataSource83 = null;
        java.util.concurrent.ExecutorService executorService85 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner86 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource83, true, executorService85);
        boolean boolean87 = asyncQueryRunner86.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement88 = null;
        java.lang.Object obj89 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray90 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner86.fillStatementWithBean(preparedStatement88, obj89, propertyDescriptorArray90);
        asyncQueryRunner78.fillStatementWithBean(preparedStatement81, (java.lang.Object) 0, propertyDescriptorArray90);
        asyncQueryRunner73.fillStatement(preparedStatement74, (java.lang.Object[]) propertyDescriptorArray90);
        asyncQueryRunner67.fillStatement(preparedStatement69, parameterMetaData70, (java.lang.Object[]) propertyDescriptorArray90);
        asyncQueryRunner58.fillStatement(preparedStatement64, (java.lang.Object[]) propertyDescriptorArray90);
        asyncQueryRunner6.fillStatement(preparedStatement53, parameterMetaData54, (java.lang.Object[]) propertyDescriptorArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture97 = asyncQueryRunner2.update("", (java.lang.Object[]) propertyDescriptorArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(dataSource37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray47);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray47, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray62, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(dataSource80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray90);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray90, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder9.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder13.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration18 = builder17.build();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = builder17.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder20.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder20.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder24.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder37.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder37.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration42 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder41.queryTimeout(duration42);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder43.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = builder43.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder49 = builder43.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = builder49.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder52.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = builder52.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder58 = builder52.fetchSize((java.lang.Integer) 0);
        java.time.Duration duration59 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder60 = builder58.queryTimeout(duration59);
        java.lang.Object[] objArray61 = new java.lang.Object[] { builder17, builder30, builder49, builder60 };
        java.lang.Object[][] objArray62 = new java.lang.Object[][] { objArray61 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture63 = asyncQueryRunner3.batch("hi!", objArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(statementConfiguration18);
        org.junit.Assert.assertNotNull(statementConfiguration19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(objArray62);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.sql.ParameterMetaData parameterMetaData4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        javax.sql.DataSource dataSource10 = asyncQueryRunner8.getDataSource();
        javax.sql.DataSource dataSource11 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.time.Duration duration17 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration18 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration17);
        boolean boolean19 = statementConfiguration18.isMaxFieldSizeSet();
        java.time.Duration duration20 = statementConfiguration18.getQueryTimeoutDuration();
        boolean boolean21 = statementConfiguration18.isFetchSizeSet();
        boolean boolean22 = statementConfiguration18.isMaxFieldSizeSet();
        boolean boolean23 = statementConfiguration18.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService25);
        java.sql.PreparedStatement preparedStatement27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        javax.sql.DataSource dataSource33 = asyncQueryRunner31.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.lang.Object obj42 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner39.fillStatementWithBean(preparedStatement41, obj42, propertyDescriptorArray43);
        asyncQueryRunner31.fillStatementWithBean(preparedStatement34, (java.lang.Object) 0, propertyDescriptorArray43);
        asyncQueryRunner26.fillStatement(preparedStatement27, (java.lang.Object[]) propertyDescriptorArray43);
        asyncQueryRunner8.fillStatementWithBean(preparedStatement12, (java.lang.Object) statementConfiguration18, propertyDescriptorArray43);
        asyncQueryRunner2.fillStatement(preparedStatement3, parameterMetaData4, (java.lang.Object[]) propertyDescriptorArray43);
        java.sql.PreparedStatement preparedStatement49 = null;
        java.sql.ParameterMetaData parameterMetaData50 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement56 = null;
        java.lang.Object obj57 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner54.fillStatementWithBean(preparedStatement56, obj57, propertyDescriptorArray58);
        java.sql.PreparedStatement preparedStatement60 = null;
        javax.sql.DataSource dataSource61 = null;
        java.util.concurrent.ExecutorService executorService62 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner63 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource61, executorService62);
        boolean boolean64 = asyncQueryRunner63.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement65 = null;
        java.sql.ParameterMetaData parameterMetaData66 = null;
        java.util.concurrent.ExecutorService executorService68 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner69 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService68);
        java.sql.PreparedStatement preparedStatement70 = null;
        javax.sql.DataSource dataSource71 = null;
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource71, true, executorService73);
        boolean boolean75 = asyncQueryRunner74.isPmdKnownBroken();
        javax.sql.DataSource dataSource76 = asyncQueryRunner74.getDataSource();
        java.sql.PreparedStatement preparedStatement77 = null;
        javax.sql.DataSource dataSource79 = null;
        java.util.concurrent.ExecutorService executorService81 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner82 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource79, true, executorService81);
        boolean boolean83 = asyncQueryRunner82.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement84 = null;
        java.lang.Object obj85 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray86 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner82.fillStatementWithBean(preparedStatement84, obj85, propertyDescriptorArray86);
        asyncQueryRunner74.fillStatementWithBean(preparedStatement77, (java.lang.Object) 0, propertyDescriptorArray86);
        asyncQueryRunner69.fillStatement(preparedStatement70, (java.lang.Object[]) propertyDescriptorArray86);
        asyncQueryRunner63.fillStatement(preparedStatement65, parameterMetaData66, (java.lang.Object[]) propertyDescriptorArray86);
        asyncQueryRunner54.fillStatement(preparedStatement60, (java.lang.Object[]) propertyDescriptorArray86);
        asyncQueryRunner2.fillStatement(preparedStatement49, parameterMetaData50, (java.lang.Object[]) propertyDescriptorArray86);
        java.sql.PreparedStatement preparedStatement93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData94 = asyncQueryRunner2.getParameterMetaData(preparedStatement93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray43, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray58, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(dataSource76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray86);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray86, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.Connection connection9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture11 = asyncQueryRunner3.update(connection9, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner9.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray54);
        java.sql.Connection connection59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture61 = asyncQueryRunner3.update(connection59, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.lang.Object obj11 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner8.fillStatementWithBean(preparedStatement10, obj11, propertyDescriptorArray12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        javax.sql.DataSource dataSource16 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource16, executorService17);
        javax.sql.DataSource dataSource19 = asyncQueryRunner18.getDataSource();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.sql.ParameterMetaData parameterMetaData21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService24 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner25 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, true, executorService24);
        java.sql.PreparedStatement preparedStatement26 = null;
        java.sql.ParameterMetaData parameterMetaData27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        javax.sql.DataSource dataSource37 = asyncQueryRunner31.getDataSource();
        javax.sql.DataSource dataSource38 = asyncQueryRunner31.getDataSource();
        java.sql.PreparedStatement preparedStatement39 = null;
        java.sql.ParameterMetaData parameterMetaData40 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        javax.sql.DataSource dataSource46 = asyncQueryRunner44.getDataSource();
        java.sql.PreparedStatement preparedStatement47 = null;
        javax.sql.DataSource dataSource49 = null;
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource49, true, executorService51);
        boolean boolean53 = asyncQueryRunner52.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement54 = null;
        java.lang.Object obj55 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner52.fillStatementWithBean(preparedStatement54, obj55, propertyDescriptorArray56);
        asyncQueryRunner44.fillStatementWithBean(preparedStatement47, (java.lang.Object) 0, propertyDescriptorArray56);
        asyncQueryRunner31.fillStatement(preparedStatement39, parameterMetaData40, (java.lang.Object[]) propertyDescriptorArray56);
        java.sql.PreparedStatement preparedStatement60 = null;
        javax.sql.DataSource dataSource61 = null;
        java.util.concurrent.ExecutorService executorService63 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner64 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource61, true, executorService63);
        boolean boolean65 = asyncQueryRunner64.isPmdKnownBroken();
        javax.sql.DataSource dataSource66 = asyncQueryRunner64.getDataSource();
        java.sql.PreparedStatement preparedStatement67 = null;
        javax.sql.DataSource dataSource69 = null;
        java.util.concurrent.ExecutorService executorService71 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner72 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource69, true, executorService71);
        boolean boolean73 = asyncQueryRunner72.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement74 = null;
        java.lang.Object obj75 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray76 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner72.fillStatementWithBean(preparedStatement74, obj75, propertyDescriptorArray76);
        asyncQueryRunner64.fillStatementWithBean(preparedStatement67, (java.lang.Object) 0, propertyDescriptorArray76);
        asyncQueryRunner31.fillStatement(preparedStatement60, (java.lang.Object[]) propertyDescriptorArray76);
        asyncQueryRunner25.fillStatement(preparedStatement26, parameterMetaData27, (java.lang.Object[]) propertyDescriptorArray76);
        asyncQueryRunner18.fillStatement(preparedStatement20, parameterMetaData21, (java.lang.Object[]) propertyDescriptorArray76);
        asyncQueryRunner8.fillStatement(preparedStatement15, (java.lang.Object[]) propertyDescriptorArray76);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement4, (java.lang.Object[]) propertyDescriptorArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray12, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource37);
        org.junit.Assert.assertNull(dataSource38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(dataSource46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray56, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(dataSource66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray76);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray76, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner1 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0);
        java.sql.PreparedStatement preparedStatement2 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder3 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = builder3.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder3.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.maxRows((java.lang.Integer) 10);
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.queryTimeout(duration10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder11.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration14 = builder13.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder13.maxRows((java.lang.Integer) 100);
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        javax.sql.DataSource dataSource26 = asyncQueryRunner20.getDataSource();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.sql.ParameterMetaData parameterMetaData28 = asyncQueryRunner20.getParameterMetaData(preparedStatement27);
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, false, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement35 = null;
        java.sql.ParameterMetaData parameterMetaData36 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.sql.ParameterMetaData parameterMetaData43 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.lang.Object obj50 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner47.fillStatementWithBean(preparedStatement49, obj50, propertyDescriptorArray51);
        asyncQueryRunner40.fillStatement(preparedStatement42, parameterMetaData43, (java.lang.Object[]) propertyDescriptorArray51);
        asyncQueryRunner33.fillStatement(preparedStatement35, parameterMetaData36, (java.lang.Object[]) propertyDescriptorArray51);
        asyncQueryRunner20.fillStatement(preparedStatement29, (java.lang.Object[]) propertyDescriptorArray51);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner1.fillStatementWithBean(preparedStatement2, (java.lang.Object) 100, propertyDescriptorArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(statementConfiguration14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource26);
        org.junit.Assert.assertNull(parameterMetaData28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray51, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        javax.sql.DataSource dataSource21 = asyncQueryRunner15.getDataSource();
        javax.sql.DataSource dataSource22 = asyncQueryRunner15.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.sql.ParameterMetaData parameterMetaData24 = null;
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, true, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource30 = asyncQueryRunner28.getDataSource();
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.lang.Object obj39 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner36.fillStatementWithBean(preparedStatement38, obj39, propertyDescriptorArray40);
        asyncQueryRunner28.fillStatementWithBean(preparedStatement31, (java.lang.Object) 0, propertyDescriptorArray40);
        asyncQueryRunner15.fillStatement(preparedStatement23, parameterMetaData24, (java.lang.Object[]) propertyDescriptorArray40);
        java.sql.PreparedStatement preparedStatement44 = null;
        javax.sql.DataSource dataSource45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource45, true, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        javax.sql.DataSource dataSource50 = asyncQueryRunner48.getDataSource();
        java.sql.PreparedStatement preparedStatement51 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService55 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner56 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, true, executorService55);
        boolean boolean57 = asyncQueryRunner56.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.lang.Object obj59 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner56.fillStatementWithBean(preparedStatement58, obj59, propertyDescriptorArray60);
        asyncQueryRunner48.fillStatementWithBean(preparedStatement51, (java.lang.Object) 0, propertyDescriptorArray60);
        asyncQueryRunner15.fillStatement(preparedStatement44, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner9.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray60);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement5, (java.lang.Object[]) propertyDescriptorArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray40, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(dataSource50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray60, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.lang.Object obj11 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner8.fillStatementWithBean(preparedStatement10, obj11, propertyDescriptorArray12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner8.getDataSource();
        javax.sql.DataSource dataSource15 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.sql.ParameterMetaData parameterMetaData17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement31 = null;
        java.lang.Object obj32 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement31, obj32, propertyDescriptorArray33);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement24, (java.lang.Object) 0, propertyDescriptorArray33);
        asyncQueryRunner8.fillStatement(preparedStatement16, parameterMetaData17, (java.lang.Object[]) propertyDescriptorArray33);
        boolean boolean37 = asyncQueryRunner8.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.sql.ParameterMetaData parameterMetaData39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService41);
        java.sql.PreparedStatement preparedStatement43 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        javax.sql.DataSource dataSource49 = asyncQueryRunner47.getDataSource();
        java.sql.PreparedStatement preparedStatement50 = null;
        javax.sql.DataSource dataSource52 = null;
        java.util.concurrent.ExecutorService executorService54 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner55 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource52, true, executorService54);
        boolean boolean56 = asyncQueryRunner55.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement57 = null;
        java.lang.Object obj58 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray59 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner55.fillStatementWithBean(preparedStatement57, obj58, propertyDescriptorArray59);
        asyncQueryRunner47.fillStatementWithBean(preparedStatement50, (java.lang.Object) 0, propertyDescriptorArray59);
        asyncQueryRunner42.fillStatement(preparedStatement43, (java.lang.Object[]) propertyDescriptorArray59);
        asyncQueryRunner8.fillStatement(preparedStatement38, parameterMetaData39, (java.lang.Object[]) propertyDescriptorArray59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture64 = asyncQueryRunner2.update("hi!", (java.lang.Object[]) propertyDescriptorArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray12, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray33, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(dataSource49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray59);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray59, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        java.sql.ResultSet resultSet6 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator7 = new org.apache.commons.dbutils.ResultSetIterator(resultSet6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture8 = asyncQueryRunner2.update("hi!", (java.lang.Object) resultSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = asyncQueryRunner3.getParameterMetaData(preparedStatement18);
        java.sql.Connection connection20 = null;
        java.time.Duration duration26 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration27 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration26);
        boolean boolean28 = statementConfiguration27.isMaxFieldSizeSet();
        boolean boolean29 = statementConfiguration27.isFetchDirectionSet();
        java.lang.Integer int30 = statementConfiguration27.getMaxRows();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture31 = asyncQueryRunner3.update(connection20, "hi!", (java.lang.Object) statementConfiguration27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(parameterMetaData19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.Connection connection3 = null;
        java.time.Duration duration9 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration9);
        boolean boolean11 = statementConfiguration10.isMaxFieldSizeSet();
        java.time.Duration duration12 = statementConfiguration10.getQueryTimeoutDuration();
        boolean boolean13 = statementConfiguration10.isFetchSizeSet();
        boolean boolean14 = statementConfiguration10.isMaxFieldSizeSet();
        boolean boolean15 = statementConfiguration10.isFetchDirectionSet();
        boolean boolean16 = statementConfiguration10.isFetchDirectionSet();
        boolean boolean17 = statementConfiguration10.isFetchSizeSet();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder20.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration23 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder20.queryTimeout(duration23);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.maxFieldSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder27.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder27.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder27.fetchSize((java.lang.Integer) (-1));
        java.time.Duration duration34 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder33.queryTimeout(duration34);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration36 = builder33.build();
        java.lang.Object[] objArray37 = new java.lang.Object[] { statementConfiguration10, builder26, builder33 };
        java.lang.Object[][] objArray38 = new java.lang.Object[][] { objArray37 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture39 = asyncQueryRunner2.batch(connection3, "hi!", objArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(statementConfiguration36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        javax.sql.DataSource dataSource11 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource12 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.time.Duration duration18 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration18);
        boolean boolean20 = statementConfiguration19.isMaxFieldSizeSet();
        java.time.Duration duration21 = statementConfiguration19.getQueryTimeoutDuration();
        boolean boolean22 = statementConfiguration19.isFetchSizeSet();
        boolean boolean23 = statementConfiguration19.isMaxFieldSizeSet();
        boolean boolean24 = statementConfiguration19.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService26);
        java.sql.PreparedStatement preparedStatement28 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        javax.sql.DataSource dataSource34 = asyncQueryRunner32.getDataSource();
        java.sql.PreparedStatement preparedStatement35 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner32.fillStatementWithBean(preparedStatement35, (java.lang.Object) 0, propertyDescriptorArray44);
        asyncQueryRunner27.fillStatement(preparedStatement28, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner9.fillStatementWithBean(preparedStatement13, (java.lang.Object) statementConfiguration19, propertyDescriptorArray44);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray44);
        java.sql.Connection connection50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture52 = asyncQueryRunner3.update(connection50, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertNull(dataSource12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(dataSource34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, executorService44);
        boolean boolean46 = asyncQueryRunner45.isPmdKnownBroken();
        boolean boolean47 = asyncQueryRunner45.isPmdKnownBroken();
        javax.sql.DataSource dataSource48 = asyncQueryRunner45.getDataSource();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement42, (java.lang.Object) asyncQueryRunner45, strArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.AsyncQueryRunner ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(dataSource48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertArrayEquals(strArray52, new java.lang.String[] { "", "hi!", "hi!" });
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, false, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        boolean boolean15 = asyncQueryRunner14.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.sql.ParameterMetaData parameterMetaData17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.lang.Object obj24 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner21.fillStatementWithBean(preparedStatement23, obj24, propertyDescriptorArray25);
        asyncQueryRunner14.fillStatement(preparedStatement16, parameterMetaData17, (java.lang.Object[]) propertyDescriptorArray25);
        asyncQueryRunner7.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray25);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture29 = asyncQueryRunner2.update("", (java.lang.Object[]) propertyDescriptorArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray25, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        boolean boolean42 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.sql.ParameterMetaData parameterMetaData44 = asyncQueryRunner3.getParameterMetaData(preparedStatement43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture46 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(parameterMetaData44);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.Connection connection3 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) (-1));
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration16 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration15);
        boolean boolean17 = statementConfiguration16.isQueryTimeoutSet();
        java.lang.Integer int18 = statementConfiguration16.getQueryTimeout();
        java.lang.Integer int19 = statementConfiguration16.getQueryTimeout();
        java.time.Duration duration24 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration25 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration24);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration33 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder32.queryTimeout(duration33);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.maxRows((java.lang.Integer) 0);
        java.lang.Object[] objArray37 = new java.lang.Object[] { (-1), int19, (-1), builder36 };
        java.lang.Object[][] objArray38 = new java.lang.Object[][] { objArray37 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture39 = asyncQueryRunner2.batch(connection3, "hi!", objArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder9.queryTimeout(duration12);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.maxFieldSize((java.lang.Integer) (-1));
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) builder15, strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration$Builder ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertArrayEquals(strArray19, new java.lang.String[] { "", "", "hi!" });
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource7 = asyncQueryRunner3.getDataSource();
        java.lang.Object[] objArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture10 = asyncQueryRunner3.update("hi!", objArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertNull(dataSource7);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection4 = null;
        java.lang.Object[][] objArray6 = new java.lang.Object[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture7 = asyncQueryRunner2.batch(connection4, "", objArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertArrayEquals(objArray6, new java.lang.Object[][] {});
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.sql.ParameterMetaData parameterMetaData4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService12);
        java.sql.PreparedStatement preparedStatement14 = null;
        javax.sql.DataSource dataSource15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource15, true, executorService17);
        boolean boolean19 = asyncQueryRunner18.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner18.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        asyncQueryRunner18.fillStatementWithBean(preparedStatement21, (java.lang.Object) 0, propertyDescriptorArray30);
        asyncQueryRunner13.fillStatement(preparedStatement14, (java.lang.Object[]) propertyDescriptorArray30);
        asyncQueryRunner7.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray30);
        asyncQueryRunner2.fillStatement(preparedStatement3, parameterMetaData4, (java.lang.Object[]) propertyDescriptorArray30);
        java.sql.Connection connection36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture38 = asyncQueryRunner2.update(connection36, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 10, (java.lang.Integer) 100, (java.lang.Integer) 10);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner9.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray54);
        java.sql.Connection connection59 = null;
        java.time.Duration duration65 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration66 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration65);
        boolean boolean67 = statementConfiguration66.isMaxFieldSizeSet();
        boolean boolean68 = statementConfiguration66.isFetchDirectionSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture69 = asyncQueryRunner3.update(connection59, "hi!", (java.lang.Object) statementConfiguration66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        boolean boolean10 = statementConfiguration9.isFetchDirectionSet();
        java.lang.Integer int11 = statementConfiguration9.getQueryTimeout();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner1 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0);
        javax.sql.DataSource dataSource3 = null;
        java.util.concurrent.ExecutorService executorService5 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner6 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource3, true, executorService5);
        boolean boolean7 = asyncQueryRunner6.isPmdKnownBroken();
        javax.sql.DataSource dataSource8 = asyncQueryRunner6.getDataSource();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        boolean boolean15 = asyncQueryRunner14.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.lang.Object obj17 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray18 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner14.fillStatementWithBean(preparedStatement16, obj17, propertyDescriptorArray18);
        asyncQueryRunner6.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture21 = asyncQueryRunner1.update("", (java.lang.Object[]) propertyDescriptorArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(dataSource8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray18);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray18, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection6 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration13 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.queryTimeout(duration13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture15 = asyncQueryRunner3.update(connection6, "hi!", (java.lang.Object) duration13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder4.build();
        java.lang.Class<?> wildcardClass10 = statementConfiguration9.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, false, executorService7);
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        boolean boolean15 = asyncQueryRunner14.isPmdKnownBroken();
        javax.sql.DataSource dataSource16 = asyncQueryRunner14.getDataSource();
        javax.sql.DataSource dataSource17 = asyncQueryRunner14.getDataSource();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.time.Duration duration23 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration24 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration23);
        boolean boolean25 = statementConfiguration24.isMaxFieldSizeSet();
        java.time.Duration duration26 = statementConfiguration24.getQueryTimeoutDuration();
        boolean boolean27 = statementConfiguration24.isFetchSizeSet();
        boolean boolean28 = statementConfiguration24.isMaxFieldSizeSet();
        boolean boolean29 = statementConfiguration24.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService31);
        java.sql.PreparedStatement preparedStatement33 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        javax.sql.DataSource dataSource39 = asyncQueryRunner37.getDataSource();
        java.sql.PreparedStatement preparedStatement40 = null;
        javax.sql.DataSource dataSource42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource42, true, executorService44);
        boolean boolean46 = asyncQueryRunner45.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement47 = null;
        java.lang.Object obj48 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner45.fillStatementWithBean(preparedStatement47, obj48, propertyDescriptorArray49);
        asyncQueryRunner37.fillStatementWithBean(preparedStatement40, (java.lang.Object) 0, propertyDescriptorArray49);
        asyncQueryRunner32.fillStatement(preparedStatement33, (java.lang.Object[]) propertyDescriptorArray49);
        asyncQueryRunner14.fillStatementWithBean(preparedStatement18, (java.lang.Object) statementConfiguration24, propertyDescriptorArray49);
        asyncQueryRunner8.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray49);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, (java.lang.Object) preparedStatement9, strArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(dataSource39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray49, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertArrayEquals(strArray58, new java.lang.String[] { "hi!", "", "hi!" });
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder4.build();
        java.lang.Class<?> wildcardClass10 = builder4.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData5 = asyncQueryRunner2.getParameterMetaData(preparedStatement4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        asyncQueryRunner2.fillStatement(preparedStatement3, (java.lang.Object[]) propertyDescriptorArray19);
        javax.sql.DataSource dataSource23 = asyncQueryRunner2.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration32 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.queryTimeout(duration32);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder33.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration41 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration42 = statementConfiguration41.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder33.queryTimeout(duration42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner2.update("", (java.lang.Object) duration42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder11.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder15.fetchSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder15.fetchDirection((java.lang.Integer) 10);
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService21);
        java.sql.PreparedStatement preparedStatement23 = null;
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        boolean boolean28 = asyncQueryRunner27.isPmdKnownBroken();
        javax.sql.DataSource dataSource29 = asyncQueryRunner27.getDataSource();
        java.sql.PreparedStatement preparedStatement30 = null;
        javax.sql.DataSource dataSource32 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource32, true, executorService34);
        boolean boolean36 = asyncQueryRunner35.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement37 = null;
        java.lang.Object obj38 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray39 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner35.fillStatementWithBean(preparedStatement37, obj38, propertyDescriptorArray39);
        asyncQueryRunner27.fillStatementWithBean(preparedStatement30, (java.lang.Object) 0, propertyDescriptorArray39);
        asyncQueryRunner22.fillStatement(preparedStatement23, (java.lang.Object[]) propertyDescriptorArray39);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, (java.lang.Object) builder15, propertyDescriptorArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(dataSource29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray39);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray39, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = asyncQueryRunner3.getParameterMetaData(preparedStatement19);
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, executorService23);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement21, (java.lang.Object) asyncQueryRunner24, strArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.AsyncQueryRunner hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(parameterMetaData20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertArrayEquals(strArray29, new java.lang.String[] { "hi!", "", "", "" });
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration11 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int12 = statementConfiguration5.getFetchSize();
        java.lang.Integer int13 = statementConfiguration5.getFetchDirection();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner2.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        java.sql.Connection connection18 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder20.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder20.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.maxRows((java.lang.Integer) 10);
        java.time.Duration duration27 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.queryTimeout(duration27);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.maxRows((java.lang.Integer) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture31 = asyncQueryRunner3.update(connection18, "hi!", (java.lang.Object) builder30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder12.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder12.fetchSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder12.fetchDirection((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        javax.sql.DataSource dataSource21 = asyncQueryRunner15.getDataSource();
        javax.sql.DataSource dataSource22 = asyncQueryRunner15.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.sql.ParameterMetaData parameterMetaData24 = null;
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, true, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource30 = asyncQueryRunner28.getDataSource();
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.lang.Object obj39 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner36.fillStatementWithBean(preparedStatement38, obj39, propertyDescriptorArray40);
        asyncQueryRunner28.fillStatementWithBean(preparedStatement31, (java.lang.Object) 0, propertyDescriptorArray40);
        asyncQueryRunner15.fillStatement(preparedStatement23, parameterMetaData24, (java.lang.Object[]) propertyDescriptorArray40);
        java.sql.PreparedStatement preparedStatement44 = null;
        javax.sql.DataSource dataSource45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource45, true, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        javax.sql.DataSource dataSource50 = asyncQueryRunner48.getDataSource();
        java.sql.PreparedStatement preparedStatement51 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService55 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner56 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, true, executorService55);
        boolean boolean57 = asyncQueryRunner56.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.lang.Object obj59 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner56.fillStatementWithBean(preparedStatement58, obj59, propertyDescriptorArray60);
        asyncQueryRunner48.fillStatementWithBean(preparedStatement51, (java.lang.Object) 0, propertyDescriptorArray60);
        asyncQueryRunner15.fillStatement(preparedStatement44, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner9.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray60);
        java.util.concurrent.ExecutorService executorService68 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner69 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService68);
        java.sql.PreparedStatement preparedStatement70 = null;
        javax.sql.DataSource dataSource71 = null;
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource71, true, executorService73);
        boolean boolean75 = asyncQueryRunner74.isPmdKnownBroken();
        javax.sql.DataSource dataSource76 = asyncQueryRunner74.getDataSource();
        java.sql.PreparedStatement preparedStatement77 = null;
        javax.sql.DataSource dataSource79 = null;
        java.util.concurrent.ExecutorService executorService81 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner82 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource79, true, executorService81);
        boolean boolean83 = asyncQueryRunner82.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement84 = null;
        java.lang.Object obj85 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray86 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner82.fillStatementWithBean(preparedStatement84, obj85, propertyDescriptorArray86);
        asyncQueryRunner74.fillStatementWithBean(preparedStatement77, (java.lang.Object) 0, propertyDescriptorArray86);
        asyncQueryRunner69.fillStatement(preparedStatement70, (java.lang.Object[]) propertyDescriptorArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture90 = asyncQueryRunner2.update("hi!", (java.lang.Object[]) propertyDescriptorArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray40, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(dataSource50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray60, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(dataSource76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray86);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray86, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement39 = null;
        java.sql.ParameterMetaData parameterMetaData40 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService41, queryRunner42);
        java.sql.PreparedStatement preparedStatement44 = null;
        java.sql.ParameterMetaData parameterMetaData45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement50 = null;
        java.sql.ParameterMetaData parameterMetaData51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService53);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner54.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner48.fillStatement(preparedStatement50, parameterMetaData51, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner43.fillStatement(preparedStatement44, parameterMetaData45, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement39, parameterMetaData40, (java.lang.Object[]) propertyDescriptorArray71);
        java.sql.Connection connection78 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder80 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder82 = builder80.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder84 = builder80.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder86 = builder80.fetchSize((java.lang.Integer) (-1));
        java.time.Duration duration87 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder88 = builder86.queryTimeout(duration87);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration89 = builder86.build();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture90 = asyncQueryRunner3.update(connection78, "", (java.lang.Object) builder86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(statementConfiguration89);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = asyncQueryRunner3.getParameterMetaData(preparedStatement19);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.maxRows((java.lang.Integer) 10);
        java.time.Duration duration29 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.queryTimeout(duration29);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration33 = builder32.build();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture34 = asyncQueryRunner3.update("hi!", (java.lang.Object) builder32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(parameterMetaData20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(statementConfiguration33);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, executorService6);
        javax.sql.DataSource dataSource8 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        javax.sql.DataSource dataSource26 = asyncQueryRunner20.getDataSource();
        javax.sql.DataSource dataSource27 = asyncQueryRunner20.getDataSource();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.sql.ParameterMetaData parameterMetaData29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, true, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        javax.sql.DataSource dataSource35 = asyncQueryRunner33.getDataSource();
        java.sql.PreparedStatement preparedStatement36 = null;
        javax.sql.DataSource dataSource38 = null;
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource38, true, executorService40);
        boolean boolean42 = asyncQueryRunner41.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.lang.Object obj44 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner41.fillStatementWithBean(preparedStatement43, obj44, propertyDescriptorArray45);
        asyncQueryRunner33.fillStatementWithBean(preparedStatement36, (java.lang.Object) 0, propertyDescriptorArray45);
        asyncQueryRunner20.fillStatement(preparedStatement28, parameterMetaData29, (java.lang.Object[]) propertyDescriptorArray45);
        java.sql.PreparedStatement preparedStatement49 = null;
        javax.sql.DataSource dataSource50 = null;
        java.util.concurrent.ExecutorService executorService52 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner53 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource50, true, executorService52);
        boolean boolean54 = asyncQueryRunner53.isPmdKnownBroken();
        javax.sql.DataSource dataSource55 = asyncQueryRunner53.getDataSource();
        java.sql.PreparedStatement preparedStatement56 = null;
        javax.sql.DataSource dataSource58 = null;
        java.util.concurrent.ExecutorService executorService60 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner61 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource58, true, executorService60);
        boolean boolean62 = asyncQueryRunner61.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement63 = null;
        java.lang.Object obj64 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray65 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner61.fillStatementWithBean(preparedStatement63, obj64, propertyDescriptorArray65);
        asyncQueryRunner53.fillStatementWithBean(preparedStatement56, (java.lang.Object) 0, propertyDescriptorArray65);
        asyncQueryRunner20.fillStatement(preparedStatement49, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner14.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner7.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray65);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement4, (java.lang.Object[]) propertyDescriptorArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertNull(dataSource8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource26);
        org.junit.Assert.assertNull(dataSource27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(dataSource35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray45, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(dataSource55);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray65);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray65, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration19 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.queryTimeout(duration19);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder26.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration31 = builder26.build();
        java.lang.Integer int32 = statementConfiguration31.getFetchDirection();
        java.time.Duration duration37 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration38 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration37);
        boolean boolean39 = statementConfiguration38.isMaxFieldSizeSet();
        boolean boolean40 = statementConfiguration38.isMaxFieldSizeSet();
        boolean boolean41 = statementConfiguration38.isMaxRowsSet();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = builder42.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder42.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder42.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder42.maxFieldSize((java.lang.Integer) 100);
        java.lang.Object[] objArray51 = new java.lang.Object[] { builder20, (short) 10, statementConfiguration31, statementConfiguration38, builder50 };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatement(preparedStatement10, parameterMetaData11, objArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.setObject(int, Object)\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(statementConfiguration31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(objArray51);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.lang.Object obj11 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray12 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner8.fillStatementWithBean(preparedStatement10, obj11, propertyDescriptorArray12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner8.getDataSource();
        javax.sql.DataSource dataSource15 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.sql.ParameterMetaData parameterMetaData17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement31 = null;
        java.lang.Object obj32 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement31, obj32, propertyDescriptorArray33);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement24, (java.lang.Object) 0, propertyDescriptorArray33);
        asyncQueryRunner8.fillStatement(preparedStatement16, parameterMetaData17, (java.lang.Object[]) propertyDescriptorArray33);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) 100, propertyDescriptorArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray12);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray12, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray33, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration11 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean12 = statementConfiguration5.isFetchSizeSet();
        boolean boolean13 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = asyncQueryRunner3.getParameterMetaData(preparedStatement22);
        java.sql.PreparedStatement preparedStatement24 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder33.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration36 = builder33.build();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "", "", "hi!", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement24, (java.lang.Object) builder33, strArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration$Builder ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(parameterMetaData23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(statementConfiguration36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertArrayEquals(strArray42, new java.lang.String[] { "", "", "", "hi!", "" });
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        boolean boolean7 = statementConfiguration5.isMaxFieldSizeSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.time.Duration duration27 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration28 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration27);
        boolean boolean29 = statementConfiguration28.isMaxFieldSizeSet();
        java.lang.Integer int30 = statementConfiguration28.getMaxFieldSize();
        java.time.Duration duration31 = statementConfiguration28.getQueryTimeoutDuration();
        boolean boolean32 = statementConfiguration28.isQueryTimeoutSet();
        java.lang.Object[] objArray34 = new java.lang.Object[] { statementConfiguration28, 1.0f };
        java.lang.Object[][] objArray35 = new java.lang.Object[][] { objArray34 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture36 = asyncQueryRunner3.batch("hi!", objArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray35);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        boolean boolean8 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = asyncQueryRunner3.getParameterMetaData(preparedStatement22);
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, false, executorService27);
        java.sql.ResultSet resultSet29 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator30 = new org.apache.commons.dbutils.ResultSetIterator(resultSet29);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.maxRows((java.lang.Integer) 10);
        java.time.Duration duration38 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder35.queryTimeout(duration38);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder35.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder41.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder48.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = builder50.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder50.fetchSize((java.lang.Integer) 10);
        java.lang.Object[] objArray55 = new java.lang.Object[] { executorService27, resultSet29, builder43, builder50 };
        java.lang.Object[][] objArray56 = new java.lang.Object[][] { objArray55 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture57 = asyncQueryRunner3.batch("", objArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(parameterMetaData23);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(objArray56);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.PreparedStatement preparedStatement12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, false, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.sql.ParameterMetaData parameterMetaData26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner23.fillStatement(preparedStatement25, parameterMetaData26, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner16.fillStatement(preparedStatement18, parameterMetaData19, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement12, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.Connection connection39 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        javax.sql.DataSource dataSource46 = asyncQueryRunner44.getDataSource();
        java.sql.PreparedStatement preparedStatement47 = null;
        java.sql.ParameterMetaData parameterMetaData48 = asyncQueryRunner44.getParameterMetaData(preparedStatement47);
        java.lang.Object[] objArray49 = new java.lang.Object[] { asyncQueryRunner44 };
        java.lang.Object[][] objArray50 = new java.lang.Object[][] { objArray49 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture51 = asyncQueryRunner3.batch(connection39, "", objArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(dataSource46);
        org.junit.Assert.assertNull(parameterMetaData48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray50);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatement(preparedStatement6, parameterMetaData7, (java.lang.Object[]) propertyDescriptorArray15);
        java.sql.Connection connection18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture20 = asyncQueryRunner3.update(connection18, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        boolean boolean42 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.sql.ParameterMetaData parameterMetaData44 = asyncQueryRunner3.getParameterMetaData(preparedStatement43);
        java.sql.Connection connection45 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder49 = builder47.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = builder47.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder47.fetchSize((java.lang.Integer) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture54 = asyncQueryRunner3.update(connection45, "hi!", (java.lang.Object) builder53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(parameterMetaData44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean21 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        java.sql.ParameterMetaData parameterMetaData30 = asyncQueryRunner26.getParameterMetaData(preparedStatement29);
        boolean boolean31 = asyncQueryRunner26.isPmdKnownBroken();
        boolean boolean32 = asyncQueryRunner26.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture33 = asyncQueryRunner3.update("", (java.lang.Object) boolean32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertNull(parameterMetaData30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture23 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.Connection connection39 = null;
        java.lang.Object obj41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture42 = asyncQueryRunner3.update(connection39, "", obj41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner2.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture8 = asyncQueryRunner2.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture8 = asyncQueryRunner2.update(connection6, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, duration4);
        java.lang.Integer int6 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder16.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder16.maxRows((java.lang.Integer) (-1));
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, false, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.sql.ParameterMetaData parameterMetaData29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, true, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement35 = null;
        java.sql.ParameterMetaData parameterMetaData36 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner33.fillStatement(preparedStatement35, parameterMetaData36, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner26.fillStatement(preparedStatement28, parameterMetaData29, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) (-1), propertyDescriptorArray44);
        java.sql.Connection connection49 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        javax.sql.DataSource dataSource56 = asyncQueryRunner54.getDataSource();
        javax.sql.DataSource dataSource57 = asyncQueryRunner54.getDataSource();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.time.Duration duration63 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration64 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration63);
        boolean boolean65 = statementConfiguration64.isMaxFieldSizeSet();
        java.time.Duration duration66 = statementConfiguration64.getQueryTimeoutDuration();
        boolean boolean67 = statementConfiguration64.isFetchSizeSet();
        boolean boolean68 = statementConfiguration64.isMaxFieldSizeSet();
        boolean boolean69 = statementConfiguration64.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService71 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner72 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService71);
        java.sql.PreparedStatement preparedStatement73 = null;
        javax.sql.DataSource dataSource74 = null;
        java.util.concurrent.ExecutorService executorService76 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner77 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource74, true, executorService76);
        boolean boolean78 = asyncQueryRunner77.isPmdKnownBroken();
        javax.sql.DataSource dataSource79 = asyncQueryRunner77.getDataSource();
        java.sql.PreparedStatement preparedStatement80 = null;
        javax.sql.DataSource dataSource82 = null;
        java.util.concurrent.ExecutorService executorService84 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner85 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource82, true, executorService84);
        boolean boolean86 = asyncQueryRunner85.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement87 = null;
        java.lang.Object obj88 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray89 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner85.fillStatementWithBean(preparedStatement87, obj88, propertyDescriptorArray89);
        asyncQueryRunner77.fillStatementWithBean(preparedStatement80, (java.lang.Object) 0, propertyDescriptorArray89);
        asyncQueryRunner72.fillStatement(preparedStatement73, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner54.fillStatementWithBean(preparedStatement58, (java.lang.Object) statementConfiguration64, propertyDescriptorArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture94 = asyncQueryRunner2.update(connection49, "", (java.lang.Object[]) propertyDescriptorArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(dataSource56);
        org.junit.Assert.assertNull(dataSource57);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(dataSource79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray89);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray89, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, executorService23);
        javax.sql.DataSource dataSource25 = asyncQueryRunner24.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.sql.ParameterMetaData parameterMetaData27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        java.sql.PreparedStatement preparedStatement32 = null;
        java.sql.ParameterMetaData parameterMetaData33 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement39 = null;
        java.lang.Object obj40 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner37.fillStatementWithBean(preparedStatement39, obj40, propertyDescriptorArray41);
        javax.sql.DataSource dataSource43 = asyncQueryRunner37.getDataSource();
        javax.sql.DataSource dataSource44 = asyncQueryRunner37.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.sql.ParameterMetaData parameterMetaData46 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        javax.sql.DataSource dataSource52 = asyncQueryRunner50.getDataSource();
        java.sql.PreparedStatement preparedStatement53 = null;
        javax.sql.DataSource dataSource55 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner58 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource55, true, executorService57);
        boolean boolean59 = asyncQueryRunner58.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.lang.Object obj61 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner58.fillStatementWithBean(preparedStatement60, obj61, propertyDescriptorArray62);
        asyncQueryRunner50.fillStatementWithBean(preparedStatement53, (java.lang.Object) 0, propertyDescriptorArray62);
        asyncQueryRunner37.fillStatement(preparedStatement45, parameterMetaData46, (java.lang.Object[]) propertyDescriptorArray62);
        java.sql.PreparedStatement preparedStatement66 = null;
        javax.sql.DataSource dataSource67 = null;
        java.util.concurrent.ExecutorService executorService69 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner70 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource67, true, executorService69);
        boolean boolean71 = asyncQueryRunner70.isPmdKnownBroken();
        javax.sql.DataSource dataSource72 = asyncQueryRunner70.getDataSource();
        java.sql.PreparedStatement preparedStatement73 = null;
        javax.sql.DataSource dataSource75 = null;
        java.util.concurrent.ExecutorService executorService77 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner78 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource75, true, executorService77);
        boolean boolean79 = asyncQueryRunner78.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement80 = null;
        java.lang.Object obj81 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray82 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner78.fillStatementWithBean(preparedStatement80, obj81, propertyDescriptorArray82);
        asyncQueryRunner70.fillStatementWithBean(preparedStatement73, (java.lang.Object) 0, propertyDescriptorArray82);
        asyncQueryRunner37.fillStatement(preparedStatement66, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner31.fillStatement(preparedStatement32, parameterMetaData33, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner24.fillStatement(preparedStatement26, parameterMetaData27, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner3.fillStatement(preparedStatement21, (java.lang.Object[]) propertyDescriptorArray82);
        java.lang.Object[] objArray90 = new java.lang.Object[] {};
        java.lang.Object[] objArray91 = new java.lang.Object[] {};
        java.lang.Object[] objArray92 = new java.lang.Object[] {};
        java.lang.Object[][] objArray93 = new java.lang.Object[][] { objArray90, objArray91, objArray92 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture94 = asyncQueryRunner3.batch("hi!", objArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray41, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource43);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray62, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(dataSource72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray82);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray82, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertArrayEquals(objArray90, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertArrayEquals(objArray91, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertArrayEquals(objArray92, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray93);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.lang.Object[][] objArray13 = new java.lang.Object[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture14 = asyncQueryRunner3.batch("hi!", objArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertArrayEquals(objArray13, new java.lang.Object[][] {});
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.lang.Object obj19 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner16.fillStatementWithBean(preparedStatement18, obj19, propertyDescriptorArray20);
        javax.sql.DataSource dataSource22 = asyncQueryRunner16.getDataSource();
        javax.sql.DataSource dataSource23 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        java.sql.ParameterMetaData parameterMetaData25 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        javax.sql.DataSource dataSource31 = asyncQueryRunner29.getDataSource();
        java.sql.PreparedStatement preparedStatement32 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement39 = null;
        java.lang.Object obj40 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner37.fillStatementWithBean(preparedStatement39, obj40, propertyDescriptorArray41);
        asyncQueryRunner29.fillStatementWithBean(preparedStatement32, (java.lang.Object) 0, propertyDescriptorArray41);
        asyncQueryRunner16.fillStatement(preparedStatement24, parameterMetaData25, (java.lang.Object[]) propertyDescriptorArray41);
        asyncQueryRunner10.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray41);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement6, (java.lang.Object[]) propertyDescriptorArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray20, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(dataSource31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray41, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder12.maxRows((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.maxFieldSize((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 1);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 100, (java.lang.Integer) 0);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = asyncQueryRunner3.getParameterMetaData(preparedStatement19);
        java.sql.Connection connection21 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.sql.ParameterMetaData parameterMetaData29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, true, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement35 = null;
        java.lang.Object obj36 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner33.fillStatementWithBean(preparedStatement35, obj36, propertyDescriptorArray37);
        asyncQueryRunner26.fillStatement(preparedStatement28, parameterMetaData29, (java.lang.Object[]) propertyDescriptorArray37);
        java.sql.PreparedStatement preparedStatement40 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        javax.sql.DataSource dataSource46 = asyncQueryRunner44.getDataSource();
        java.sql.PreparedStatement preparedStatement47 = null;
        javax.sql.DataSource dataSource49 = null;
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource49, true, executorService51);
        boolean boolean53 = asyncQueryRunner52.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement54 = null;
        java.lang.Object obj55 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner52.fillStatementWithBean(preparedStatement54, obj55, propertyDescriptorArray56);
        asyncQueryRunner44.fillStatementWithBean(preparedStatement47, (java.lang.Object) 0, propertyDescriptorArray56);
        asyncQueryRunner26.fillStatement(preparedStatement40, (java.lang.Object[]) propertyDescriptorArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture60 = asyncQueryRunner3.update(connection21, "hi!", (java.lang.Object[]) propertyDescriptorArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(parameterMetaData20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray37, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(dataSource46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray56, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration1 = builder0.build();
        java.lang.Class<?> wildcardClass2 = statementConfiguration1.getClass();
        org.junit.Assert.assertNotNull(statementConfiguration1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        javax.sql.DataSource dataSource43 = asyncQueryRunner3.getDataSource();
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService46);
        java.sql.PreparedStatement preparedStatement48 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder49 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = builder49.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder49.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder55 = builder53.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder57 = builder55.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder59 = builder55.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration60 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder61 = builder59.queryTimeout(duration60);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder63 = builder61.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder65 = builder61.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder67 = builder61.maxRows((java.lang.Integer) (-1));
        javax.sql.DataSource dataSource68 = null;
        java.util.concurrent.ExecutorService executorService70 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner71 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource68, false, executorService70);
        boolean boolean72 = asyncQueryRunner71.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement73 = null;
        java.sql.ParameterMetaData parameterMetaData74 = null;
        javax.sql.DataSource dataSource75 = null;
        java.util.concurrent.ExecutorService executorService77 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner78 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource75, true, executorService77);
        boolean boolean79 = asyncQueryRunner78.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement80 = null;
        java.sql.ParameterMetaData parameterMetaData81 = null;
        javax.sql.DataSource dataSource82 = null;
        java.util.concurrent.ExecutorService executorService84 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner85 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource82, true, executorService84);
        boolean boolean86 = asyncQueryRunner85.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement87 = null;
        java.lang.Object obj88 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray89 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner85.fillStatementWithBean(preparedStatement87, obj88, propertyDescriptorArray89);
        asyncQueryRunner78.fillStatement(preparedStatement80, parameterMetaData81, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner71.fillStatement(preparedStatement73, parameterMetaData74, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner47.fillStatementWithBean(preparedStatement48, (java.lang.Object) (-1), propertyDescriptorArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture94 = asyncQueryRunner3.update("hi!", (java.lang.Object[]) propertyDescriptorArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource43);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray89);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray89, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray21);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray21);
        java.sql.PreparedStatement preparedStatement25 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.maxRows((java.lang.Integer) 10);
        java.time.Duration duration33 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder30.queryTimeout(duration33);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.maxFieldSize((java.lang.Integer) 10);
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, false, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.sql.ParameterMetaData parameterMetaData43 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.sql.ParameterMetaData parameterMetaData50 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement56 = null;
        java.lang.Object obj57 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner54.fillStatementWithBean(preparedStatement56, obj57, propertyDescriptorArray58);
        asyncQueryRunner47.fillStatement(preparedStatement49, parameterMetaData50, (java.lang.Object[]) propertyDescriptorArray58);
        asyncQueryRunner40.fillStatement(preparedStatement42, parameterMetaData43, (java.lang.Object[]) propertyDescriptorArray58);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement25, (java.lang.Object) builder36, propertyDescriptorArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray58, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean6 = asyncQueryRunner2.isPmdKnownBroken();
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.lang.Integer int15 = statementConfiguration13.getMaxFieldSize();
        java.lang.Integer int16 = statementConfiguration13.getMaxFieldSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture17 = asyncQueryRunner2.update("hi!", (java.lang.Object) statementConfiguration13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        boolean boolean7 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        boolean boolean11 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean12 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int13 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int14 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchSize((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection5 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        javax.sql.DataSource dataSource12 = asyncQueryRunner10.getDataSource();
        java.sql.PreparedStatement preparedStatement13 = null;
        javax.sql.DataSource dataSource15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource15, true, executorService17);
        boolean boolean19 = asyncQueryRunner18.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.lang.Object obj21 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray22 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner18.fillStatementWithBean(preparedStatement20, obj21, propertyDescriptorArray22);
        asyncQueryRunner10.fillStatementWithBean(preparedStatement13, (java.lang.Object) 0, propertyDescriptorArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture25 = asyncQueryRunner3.update(connection5, "", (java.lang.Object[]) propertyDescriptorArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(dataSource12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray22);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray22, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration12 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration11);
        boolean boolean13 = statementConfiguration12.isMaxFieldSizeSet();
        java.lang.Integer int14 = statementConfiguration12.getMaxFieldSize();
        boolean boolean15 = statementConfiguration12.isFetchSizeSet();
        java.lang.Integer int16 = statementConfiguration12.getFetchDirection();
        boolean boolean17 = statementConfiguration12.isQueryTimeoutSet();
        boolean boolean18 = statementConfiguration12.isFetchSizeSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture19 = asyncQueryRunner3.update("", (java.lang.Object) boolean18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int8 = statementConfiguration5.getMaxFieldSize();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(duration9);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        boolean boolean11 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean12 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int13 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int14 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean7 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean8 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int9 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int10 = statementConfiguration5.getFetchDirection();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder12.maxRows((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.maxFieldSize((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder11.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder11.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration16 = builder15.build();
        java.time.Duration duration17 = statementConfiguration16.getQueryTimeoutDuration();
        java.lang.Object[] objArray18 = new java.lang.Object[] { statementConfiguration16 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder19.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder19.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder23.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder23.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration28 = builder27.build();
        java.time.Duration duration29 = statementConfiguration28.getQueryTimeoutDuration();
        java.lang.Object[] objArray30 = new java.lang.Object[] { statementConfiguration28 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder35.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration40 = builder39.build();
        java.time.Duration duration41 = statementConfiguration40.getQueryTimeoutDuration();
        java.lang.Object[] objArray42 = new java.lang.Object[] { statementConfiguration40 };
        java.lang.Object[][] objArray43 = new java.lang.Object[][] { objArray18, objArray30, objArray42 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture44 = asyncQueryRunner3.batch("", objArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(statementConfiguration16);
        org.junit.Assert.assertNull(duration17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(statementConfiguration28);
        org.junit.Assert.assertNull(duration29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(statementConfiguration40);
        org.junit.Assert.assertNull(duration41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray43);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration27 = builder26.build();
        java.lang.Integer int28 = statementConfiguration27.getMaxRows();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "hi!", "", "hi!", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement21, (java.lang.Object) statementConfiguration27, strArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(statementConfiguration27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertArrayEquals(strArray35, new java.lang.String[] { "", "", "hi!", "", "hi!", "hi!" });
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder0.fetchSize((java.lang.Integer) 0);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder6.build();
        java.lang.Integer int10 = statementConfiguration9.getFetchDirection();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration12 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration11);
        boolean boolean13 = statementConfiguration12.isQueryTimeoutSet();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) boolean13, strArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class java.lang.Boolean hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertArrayEquals(strArray20, new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "" });
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder4.build();
        java.lang.Integer int10 = statementConfiguration9.getFetchDirection();
        java.lang.Integer int11 = statementConfiguration9.getMaxRows();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.lang.Class<?> wildcardClass4 = asyncQueryRunner2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        boolean boolean8 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.sql.ParameterMetaData parameterMetaData4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService12);
        java.sql.PreparedStatement preparedStatement14 = null;
        javax.sql.DataSource dataSource15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource15, true, executorService17);
        boolean boolean19 = asyncQueryRunner18.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner18.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        asyncQueryRunner18.fillStatementWithBean(preparedStatement21, (java.lang.Object) 0, propertyDescriptorArray30);
        asyncQueryRunner13.fillStatement(preparedStatement14, (java.lang.Object[]) propertyDescriptorArray30);
        asyncQueryRunner7.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray30);
        asyncQueryRunner2.fillStatement(preparedStatement3, parameterMetaData4, (java.lang.Object[]) propertyDescriptorArray30);
        java.sql.PreparedStatement preparedStatement36 = null;
        java.time.Duration duration41 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration42 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration41);
        boolean boolean43 = statementConfiguration42.isMaxFieldSizeSet();
        java.lang.Integer int44 = statementConfiguration42.getMaxFieldSize();
        java.time.Duration duration45 = statementConfiguration42.getQueryTimeoutDuration();
        java.lang.Integer int46 = statementConfiguration42.getFetchSize();
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        javax.sql.DataSource dataSource52 = asyncQueryRunner50.getDataSource();
        javax.sql.DataSource dataSource53 = asyncQueryRunner50.getDataSource();
        javax.sql.DataSource dataSource54 = asyncQueryRunner50.getDataSource();
        java.sql.PreparedStatement preparedStatement55 = null;
        java.time.Duration duration60 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration61 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration60);
        java.lang.String[] strArray62 = new java.lang.String[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement55, (java.lang.Object) 10, strArray62);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement36, (java.lang.Object) statementConfiguration42, strArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertNull(dataSource53);
        org.junit.Assert.assertNull(dataSource54);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertArrayEquals(strArray62, new java.lang.String[] {});
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        boolean boolean11 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int12 = statementConfiguration5.getQueryTimeout();
        boolean boolean13 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int14 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder16.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder16.maxRows((java.lang.Integer) (-1));
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, false, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.sql.ParameterMetaData parameterMetaData29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, true, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement35 = null;
        java.sql.ParameterMetaData parameterMetaData36 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner33.fillStatement(preparedStatement35, parameterMetaData36, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner26.fillStatement(preparedStatement28, parameterMetaData29, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner2.fillStatementWithBean(preparedStatement3, (java.lang.Object) (-1), propertyDescriptorArray44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture50 = asyncQueryRunner2.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int9 = statementConfiguration5.getMaxRows();
        java.time.Duration duration10 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(duration10);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.time.Duration duration9 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration9);
        boolean boolean11 = statementConfiguration10.isMaxFieldSizeSet();
        java.lang.Integer int12 = statementConfiguration10.getMaxFieldSize();
        boolean boolean13 = statementConfiguration10.isFetchSizeSet();
        java.time.Duration duration14 = statementConfiguration10.getQueryTimeoutDuration();
        boolean boolean15 = statementConfiguration10.isQueryTimeoutSet();
        java.lang.Integer int16 = statementConfiguration10.getFetchDirection();
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = null;
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        boolean boolean28 = asyncQueryRunner27.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement29 = null;
        java.lang.Object obj30 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner27.fillStatementWithBean(preparedStatement29, obj30, propertyDescriptorArray31);
        asyncQueryRunner20.fillStatement(preparedStatement22, parameterMetaData23, (java.lang.Object[]) propertyDescriptorArray31);
        java.sql.PreparedStatement preparedStatement34 = null;
        javax.sql.DataSource dataSource35 = null;
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource35, true, executorService37);
        boolean boolean39 = asyncQueryRunner38.isPmdKnownBroken();
        javax.sql.DataSource dataSource40 = asyncQueryRunner38.getDataSource();
        java.sql.PreparedStatement preparedStatement41 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement48 = null;
        java.lang.Object obj49 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner46.fillStatementWithBean(preparedStatement48, obj49, propertyDescriptorArray50);
        asyncQueryRunner38.fillStatementWithBean(preparedStatement41, (java.lang.Object) 0, propertyDescriptorArray50);
        asyncQueryRunner20.fillStatement(preparedStatement34, (java.lang.Object[]) propertyDescriptorArray50);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement4, (java.lang.Object) int16, propertyDescriptorArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray31, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(dataSource40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray50, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxFieldSize((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass11 = builder10.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        boolean boolean8 = statementConfiguration5.isMaxRowsSet();
        java.lang.Class<?> wildcardClass9 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.Connection connection4 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, executorService7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, false, executorService14);
        java.sql.PreparedStatement preparedStatement16 = null;
        java.sql.ParameterMetaData parameterMetaData17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        javax.sql.DataSource dataSource24 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.time.Duration duration30 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration31 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration30);
        boolean boolean32 = statementConfiguration31.isMaxFieldSizeSet();
        java.time.Duration duration33 = statementConfiguration31.getQueryTimeoutDuration();
        boolean boolean34 = statementConfiguration31.isFetchSizeSet();
        boolean boolean35 = statementConfiguration31.isMaxFieldSizeSet();
        boolean boolean36 = statementConfiguration31.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService38);
        java.sql.PreparedStatement preparedStatement40 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        javax.sql.DataSource dataSource46 = asyncQueryRunner44.getDataSource();
        java.sql.PreparedStatement preparedStatement47 = null;
        javax.sql.DataSource dataSource49 = null;
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource49, true, executorService51);
        boolean boolean53 = asyncQueryRunner52.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement54 = null;
        java.lang.Object obj55 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner52.fillStatementWithBean(preparedStatement54, obj55, propertyDescriptorArray56);
        asyncQueryRunner44.fillStatementWithBean(preparedStatement47, (java.lang.Object) 0, propertyDescriptorArray56);
        asyncQueryRunner39.fillStatement(preparedStatement40, (java.lang.Object[]) propertyDescriptorArray56);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement25, (java.lang.Object) statementConfiguration31, propertyDescriptorArray56);
        asyncQueryRunner15.fillStatement(preparedStatement16, parameterMetaData17, (java.lang.Object[]) propertyDescriptorArray56);
        asyncQueryRunner8.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture63 = asyncQueryRunner3.update(connection4, "hi!", (java.lang.Object[]) propertyDescriptorArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(dataSource46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray56, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource19 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.lang.Object obj21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService24 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner25 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, true, executorService24);
        boolean boolean26 = asyncQueryRunner25.isPmdKnownBroken();
        javax.sql.DataSource dataSource27 = asyncQueryRunner25.getDataSource();
        javax.sql.DataSource dataSource28 = asyncQueryRunner25.getDataSource();
        javax.sql.DataSource dataSource29 = asyncQueryRunner25.getDataSource();
        java.sql.PreparedStatement preparedStatement30 = null;
        java.time.Duration duration35 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration36 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration35);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        asyncQueryRunner25.fillStatementWithBean(preparedStatement30, (java.lang.Object) 10, strArray37);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement20, obj21, strArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(dataSource27);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertNull(dataSource29);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertArrayEquals(strArray37, new java.lang.String[] {});
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 10, (java.lang.Integer) 1);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        boolean boolean43 = statementConfiguration13.isQueryTimeoutSet();
        boolean boolean44 = statementConfiguration13.isFetchDirectionSet();
        boolean boolean45 = statementConfiguration13.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = builder6.build();
        java.lang.Integer int12 = statementConfiguration11.getMaxFieldSize();
        java.lang.Integer int13 = statementConfiguration11.getMaxRows();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(statementConfiguration11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.queryTimeout((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass11 = builder8.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 100, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass6 = statementConfiguration5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Object obj40 = new java.lang.Object();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture41 = asyncQueryRunner3.update("", obj40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource7 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection8 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.maxRows((java.lang.Integer) 10);
        java.time.Duration duration17 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.queryTimeout(duration17);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = builder20.fetchDirection((java.lang.Integer) (-1));
        java.lang.Object[] objArray23 = new java.lang.Object[] { builder20 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.maxRows((java.lang.Integer) 10);
        java.time.Duration duration31 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.queryTimeout(duration31);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder32.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.fetchDirection((java.lang.Integer) (-1));
        java.lang.Object[] objArray37 = new java.lang.Object[] { builder34 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder38 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = builder38.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder38.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = builder42.maxRows((java.lang.Integer) 10);
        java.time.Duration duration45 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.queryTimeout(duration45);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder46.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder48.fetchDirection((java.lang.Integer) (-1));
        java.lang.Object[] objArray51 = new java.lang.Object[] { builder48 };
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder52.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = builder52.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder58 = builder56.maxRows((java.lang.Integer) 10);
        java.time.Duration duration59 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder60 = builder58.queryTimeout(duration59);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder62 = builder60.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder64 = builder62.fetchDirection((java.lang.Integer) (-1));
        java.lang.Object[] objArray65 = new java.lang.Object[] { builder62 };
        java.lang.Object[][] objArray66 = new java.lang.Object[][] { objArray23, objArray37, objArray51, objArray65 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture67 = asyncQueryRunner3.batch(connection8, "hi!", objArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertNull(dataSource7);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray66);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.lang.Object[] objArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture41 = asyncQueryRunner3.update("", objArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, false, executorService8);
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        javax.sql.DataSource dataSource17 = asyncQueryRunner15.getDataSource();
        javax.sql.DataSource dataSource18 = asyncQueryRunner15.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.time.Duration duration24 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration25 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration24);
        boolean boolean26 = statementConfiguration25.isMaxFieldSizeSet();
        java.time.Duration duration27 = statementConfiguration25.getQueryTimeoutDuration();
        boolean boolean28 = statementConfiguration25.isFetchSizeSet();
        boolean boolean29 = statementConfiguration25.isMaxFieldSizeSet();
        boolean boolean30 = statementConfiguration25.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService32);
        java.sql.PreparedStatement preparedStatement34 = null;
        javax.sql.DataSource dataSource35 = null;
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource35, true, executorService37);
        boolean boolean39 = asyncQueryRunner38.isPmdKnownBroken();
        javax.sql.DataSource dataSource40 = asyncQueryRunner38.getDataSource();
        java.sql.PreparedStatement preparedStatement41 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement48 = null;
        java.lang.Object obj49 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner46.fillStatementWithBean(preparedStatement48, obj49, propertyDescriptorArray50);
        asyncQueryRunner38.fillStatementWithBean(preparedStatement41, (java.lang.Object) 0, propertyDescriptorArray50);
        asyncQueryRunner33.fillStatement(preparedStatement34, (java.lang.Object[]) propertyDescriptorArray50);
        asyncQueryRunner15.fillStatementWithBean(preparedStatement19, (java.lang.Object) statementConfiguration25, propertyDescriptorArray50);
        asyncQueryRunner9.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray50);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray50);
        java.sql.Connection connection57 = null;
        java.lang.Object[][] objArray59 = new java.lang.Object[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture60 = asyncQueryRunner2.batch(connection57, "", objArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(dataSource40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray50, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertArrayEquals(objArray59, new java.lang.Object[][] {});
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture11 = asyncQueryRunner3.update(connection9, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        boolean boolean32 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection33 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder35.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder39.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder39.fetchSize((java.lang.Integer) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner3.update(connection33, "hi!", (java.lang.Object) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.maxRows((java.lang.Integer) 10);
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder9.queryTimeout(duration12);
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        javax.sql.DataSource dataSource19 = asyncQueryRunner17.getDataSource();
        javax.sql.DataSource dataSource20 = asyncQueryRunner17.getDataSource();
        javax.sql.DataSource dataSource21 = asyncQueryRunner17.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.time.Duration duration27 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration28 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration27);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement22, (java.lang.Object) 10, strArray29);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, (java.lang.Object) duration12, strArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertArrayEquals(strArray29, new java.lang.String[] {});
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Class<?> wildcardClass7 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 10);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, executorService12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        java.sql.PreparedStatement preparedStatement21 = null;
        java.sql.ParameterMetaData parameterMetaData22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        javax.sql.DataSource dataSource32 = asyncQueryRunner26.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.sql.ParameterMetaData parameterMetaData35 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        javax.sql.DataSource dataSource41 = asyncQueryRunner39.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.lang.Object obj50 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner47.fillStatementWithBean(preparedStatement49, obj50, propertyDescriptorArray51);
        asyncQueryRunner39.fillStatementWithBean(preparedStatement42, (java.lang.Object) 0, propertyDescriptorArray51);
        asyncQueryRunner26.fillStatement(preparedStatement34, parameterMetaData35, (java.lang.Object[]) propertyDescriptorArray51);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner26.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner20.fillStatement(preparedStatement21, parameterMetaData22, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner13.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement10, (java.lang.Object[]) propertyDescriptorArray71);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder79 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder81 = builder79.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder83 = builder79.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder85 = builder83.maxRows((java.lang.Integer) 10);
        java.time.Duration duration86 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder87 = builder85.queryTimeout(duration86);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder89 = builder87.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration90 = builder89.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder92 = builder89.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder94 = builder89.queryTimeout((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture95 = asyncQueryRunner3.update("hi!", (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray51, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(statementConfiguration90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        boolean boolean11 = statementConfiguration5.isFetchSizeSet();
        java.lang.Class<?> wildcardClass12 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection22 = null;
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        java.sql.PreparedStatement preparedStatement28 = null;
        java.sql.ParameterMetaData parameterMetaData29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, true, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement35 = null;
        java.lang.Object obj36 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray37 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner33.fillStatementWithBean(preparedStatement35, obj36, propertyDescriptorArray37);
        javax.sql.DataSource dataSource39 = asyncQueryRunner33.getDataSource();
        javax.sql.DataSource dataSource40 = asyncQueryRunner33.getDataSource();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.sql.ParameterMetaData parameterMetaData42 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        javax.sql.DataSource dataSource48 = asyncQueryRunner46.getDataSource();
        java.sql.PreparedStatement preparedStatement49 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement56 = null;
        java.lang.Object obj57 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner54.fillStatementWithBean(preparedStatement56, obj57, propertyDescriptorArray58);
        asyncQueryRunner46.fillStatementWithBean(preparedStatement49, (java.lang.Object) 0, propertyDescriptorArray58);
        asyncQueryRunner33.fillStatement(preparedStatement41, parameterMetaData42, (java.lang.Object[]) propertyDescriptorArray58);
        asyncQueryRunner27.fillStatement(preparedStatement28, parameterMetaData29, (java.lang.Object[]) propertyDescriptorArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture63 = asyncQueryRunner3.update(connection22, "hi!", (java.lang.Object[]) propertyDescriptorArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray37);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray37, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource39);
        org.junit.Assert.assertNull(dataSource40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(dataSource48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray58, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, true, executorService12);
        boolean boolean14 = asyncQueryRunner13.isPmdKnownBroken();
        javax.sql.DataSource dataSource15 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.lang.Object obj24 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner21.fillStatementWithBean(preparedStatement23, obj24, propertyDescriptorArray25);
        asyncQueryRunner13.fillStatementWithBean(preparedStatement16, (java.lang.Object) 0, propertyDescriptorArray25);
        asyncQueryRunner8.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray25);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray25);
        java.sql.Connection connection30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture32 = asyncQueryRunner2.update(connection30, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray25, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner1 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0);
        javax.sql.DataSource dataSource2 = asyncQueryRunner1.getDataSource();
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, false, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture9 = asyncQueryRunner1.update("", (java.lang.Object) asyncQueryRunner7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.maxFieldSize((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        javax.sql.DataSource dataSource10 = asyncQueryRunner8.getDataSource();
        javax.sql.DataSource dataSource11 = asyncQueryRunner8.getDataSource();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, (java.lang.Object) asyncQueryRunner8, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.AsyncQueryRunner ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertArrayEquals(strArray14, new java.lang.String[] { "", "" });
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        java.lang.Integer int8 = statementConfiguration5.getMaxRows();
        java.lang.Integer int9 = statementConfiguration5.getMaxFieldSize();
        java.lang.Integer int10 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean7 = statementConfiguration5.isFetchSizeSet();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        java.sql.PreparedStatement preparedStatement32 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        javax.sql.DataSource dataSource38 = asyncQueryRunner36.getDataSource();
        java.sql.PreparedStatement preparedStatement39 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement46 = null;
        java.lang.Object obj47 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner44.fillStatementWithBean(preparedStatement46, obj47, propertyDescriptorArray48);
        asyncQueryRunner36.fillStatementWithBean(preparedStatement39, (java.lang.Object) 0, propertyDescriptorArray48);
        asyncQueryRunner3.fillStatement(preparedStatement32, (java.lang.Object[]) propertyDescriptorArray48);
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService54 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner55 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, executorService54);
        boolean boolean56 = asyncQueryRunner55.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement57 = null;
        java.sql.ParameterMetaData parameterMetaData58 = null;
        java.util.concurrent.ExecutorService executorService60 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner61 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService60);
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource63 = null;
        java.util.concurrent.ExecutorService executorService65 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner66 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource63, true, executorService65);
        boolean boolean67 = asyncQueryRunner66.isPmdKnownBroken();
        javax.sql.DataSource dataSource68 = asyncQueryRunner66.getDataSource();
        java.sql.PreparedStatement preparedStatement69 = null;
        javax.sql.DataSource dataSource71 = null;
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource71, true, executorService73);
        boolean boolean75 = asyncQueryRunner74.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement76 = null;
        java.lang.Object obj77 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray78 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner74.fillStatementWithBean(preparedStatement76, obj77, propertyDescriptorArray78);
        asyncQueryRunner66.fillStatementWithBean(preparedStatement69, (java.lang.Object) 0, propertyDescriptorArray78);
        asyncQueryRunner61.fillStatement(preparedStatement62, (java.lang.Object[]) propertyDescriptorArray78);
        asyncQueryRunner55.fillStatement(preparedStatement57, parameterMetaData58, (java.lang.Object[]) propertyDescriptorArray78);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture83 = asyncQueryRunner3.update("", (java.lang.Object[]) propertyDescriptorArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(dataSource38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray48, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(dataSource68);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray78);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray78, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        boolean boolean43 = statementConfiguration13.isFetchDirectionSet();
        boolean boolean44 = statementConfiguration13.isFetchDirectionSet();
        java.lang.Class<?> wildcardClass45 = statementConfiguration13.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        javax.sql.DataSource dataSource17 = asyncQueryRunner11.getDataSource();
        javax.sql.DataSource dataSource18 = asyncQueryRunner11.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        javax.sql.DataSource dataSource26 = asyncQueryRunner24.getDataSource();
        java.sql.PreparedStatement preparedStatement27 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.lang.Object obj35 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner32.fillStatementWithBean(preparedStatement34, obj35, propertyDescriptorArray36);
        asyncQueryRunner24.fillStatementWithBean(preparedStatement27, (java.lang.Object) 0, propertyDescriptorArray36);
        asyncQueryRunner11.fillStatement(preparedStatement19, parameterMetaData20, (java.lang.Object[]) propertyDescriptorArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture40 = asyncQueryRunner2.update(connection6, "hi!", (java.lang.Object[]) propertyDescriptorArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(dataSource26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray36, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, executorService23);
        javax.sql.DataSource dataSource25 = asyncQueryRunner24.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.sql.ParameterMetaData parameterMetaData27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        java.sql.PreparedStatement preparedStatement32 = null;
        java.sql.ParameterMetaData parameterMetaData33 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement39 = null;
        java.lang.Object obj40 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner37.fillStatementWithBean(preparedStatement39, obj40, propertyDescriptorArray41);
        javax.sql.DataSource dataSource43 = asyncQueryRunner37.getDataSource();
        javax.sql.DataSource dataSource44 = asyncQueryRunner37.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.sql.ParameterMetaData parameterMetaData46 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        javax.sql.DataSource dataSource52 = asyncQueryRunner50.getDataSource();
        java.sql.PreparedStatement preparedStatement53 = null;
        javax.sql.DataSource dataSource55 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner58 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource55, true, executorService57);
        boolean boolean59 = asyncQueryRunner58.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.lang.Object obj61 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner58.fillStatementWithBean(preparedStatement60, obj61, propertyDescriptorArray62);
        asyncQueryRunner50.fillStatementWithBean(preparedStatement53, (java.lang.Object) 0, propertyDescriptorArray62);
        asyncQueryRunner37.fillStatement(preparedStatement45, parameterMetaData46, (java.lang.Object[]) propertyDescriptorArray62);
        java.sql.PreparedStatement preparedStatement66 = null;
        javax.sql.DataSource dataSource67 = null;
        java.util.concurrent.ExecutorService executorService69 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner70 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource67, true, executorService69);
        boolean boolean71 = asyncQueryRunner70.isPmdKnownBroken();
        javax.sql.DataSource dataSource72 = asyncQueryRunner70.getDataSource();
        java.sql.PreparedStatement preparedStatement73 = null;
        javax.sql.DataSource dataSource75 = null;
        java.util.concurrent.ExecutorService executorService77 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner78 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource75, true, executorService77);
        boolean boolean79 = asyncQueryRunner78.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement80 = null;
        java.lang.Object obj81 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray82 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner78.fillStatementWithBean(preparedStatement80, obj81, propertyDescriptorArray82);
        asyncQueryRunner70.fillStatementWithBean(preparedStatement73, (java.lang.Object) 0, propertyDescriptorArray82);
        asyncQueryRunner37.fillStatement(preparedStatement66, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner31.fillStatement(preparedStatement32, parameterMetaData33, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner24.fillStatement(preparedStatement26, parameterMetaData27, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner3.fillStatement(preparedStatement21, (java.lang.Object[]) propertyDescriptorArray82);
        java.sql.PreparedStatement preparedStatement89 = null;
        java.lang.Object obj90 = null;
        java.lang.String[] strArray95 = new java.lang.String[] { "", "", "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement89, obj90, strArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray41, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource43);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray62, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(dataSource72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray82);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray82, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertArrayEquals(strArray95, new java.lang.String[] { "", "", "", "hi!" });
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Class<?> wildcardClass7 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        java.lang.Class<?> wildcardClass43 = propertyDescriptorArray38.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder5 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder5.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder5.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder5.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder5.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.fetchSize((java.lang.Integer) 100);
        javax.sql.DataSource dataSource16 = null;
        java.util.concurrent.ExecutorService executorService18 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner19 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource16, true, executorService18);
        boolean boolean20 = asyncQueryRunner19.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement21 = null;
        java.lang.Object obj22 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray23 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner19.fillStatementWithBean(preparedStatement21, obj22, propertyDescriptorArray23);
        javax.sql.DataSource dataSource25 = asyncQueryRunner19.getDataSource();
        javax.sql.DataSource dataSource26 = asyncQueryRunner19.getDataSource();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.sql.ParameterMetaData parameterMetaData28 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        javax.sql.DataSource dataSource34 = asyncQueryRunner32.getDataSource();
        java.sql.PreparedStatement preparedStatement35 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner32.fillStatementWithBean(preparedStatement35, (java.lang.Object) 0, propertyDescriptorArray44);
        asyncQueryRunner19.fillStatement(preparedStatement27, parameterMetaData28, (java.lang.Object[]) propertyDescriptorArray44);
        java.sql.PreparedStatement preparedStatement48 = null;
        javax.sql.DataSource dataSource49 = null;
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource49, true, executorService51);
        boolean boolean53 = asyncQueryRunner52.isPmdKnownBroken();
        javax.sql.DataSource dataSource54 = asyncQueryRunner52.getDataSource();
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource57 = null;
        java.util.concurrent.ExecutorService executorService59 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner60 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource57, true, executorService59);
        boolean boolean61 = asyncQueryRunner60.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement62 = null;
        java.lang.Object obj63 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray64 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner60.fillStatementWithBean(preparedStatement62, obj63, propertyDescriptorArray64);
        asyncQueryRunner52.fillStatementWithBean(preparedStatement55, (java.lang.Object) 0, propertyDescriptorArray64);
        asyncQueryRunner19.fillStatement(preparedStatement48, (java.lang.Object[]) propertyDescriptorArray64);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, (java.lang.Object) builder15, propertyDescriptorArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray23);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray23, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertNull(dataSource26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(dataSource34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(dataSource54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray64);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray64, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        asyncQueryRunner2.fillStatement(preparedStatement3, (java.lang.Object[]) propertyDescriptorArray19);
        javax.sql.DataSource dataSource23 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection24 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        javax.sql.DataSource dataSource31 = asyncQueryRunner29.getDataSource();
        javax.sql.DataSource dataSource32 = asyncQueryRunner29.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner29.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.time.Duration duration39 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration40 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration39);
        java.lang.String[] strArray41 = new java.lang.String[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement34, (java.lang.Object) 10, strArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture43 = asyncQueryRunner2.update(connection24, "", (java.lang.Object[]) strArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(dataSource31);
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertArrayEquals(strArray41, new java.lang.String[] {});
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture11 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection19 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService22);
        java.sql.PreparedStatement preparedStatement24 = null;
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, true, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource30 = asyncQueryRunner28.getDataSource();
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.lang.Object obj39 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner36.fillStatementWithBean(preparedStatement38, obj39, propertyDescriptorArray40);
        asyncQueryRunner28.fillStatementWithBean(preparedStatement31, (java.lang.Object) 0, propertyDescriptorArray40);
        asyncQueryRunner23.fillStatement(preparedStatement24, (java.lang.Object[]) propertyDescriptorArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner3.update(connection19, "hi!", (java.lang.Object[]) propertyDescriptorArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray40, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration10);
        boolean boolean12 = statementConfiguration11.isMaxFieldSizeSet();
        java.lang.Integer int13 = statementConfiguration11.getMaxFieldSize();
        boolean boolean14 = statementConfiguration11.isFetchSizeSet();
        boolean boolean15 = statementConfiguration11.isMaxFieldSizeSet();
        java.lang.Integer int16 = statementConfiguration11.getMaxFieldSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture17 = asyncQueryRunner3.update("", (java.lang.Object) statementConfiguration11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, executorService12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        java.sql.PreparedStatement preparedStatement21 = null;
        java.sql.ParameterMetaData parameterMetaData22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        javax.sql.DataSource dataSource32 = asyncQueryRunner26.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.sql.ParameterMetaData parameterMetaData35 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        javax.sql.DataSource dataSource41 = asyncQueryRunner39.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.lang.Object obj50 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner47.fillStatementWithBean(preparedStatement49, obj50, propertyDescriptorArray51);
        asyncQueryRunner39.fillStatementWithBean(preparedStatement42, (java.lang.Object) 0, propertyDescriptorArray51);
        asyncQueryRunner26.fillStatement(preparedStatement34, parameterMetaData35, (java.lang.Object[]) propertyDescriptorArray51);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner26.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner20.fillStatement(preparedStatement21, parameterMetaData22, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner13.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement10, (java.lang.Object[]) propertyDescriptorArray71);
        java.time.Duration duration83 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration84 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration83);
        boolean boolean85 = statementConfiguration84.isMaxFieldSizeSet();
        java.time.Duration duration86 = statementConfiguration84.getQueryTimeoutDuration();
        boolean boolean87 = statementConfiguration84.isFetchSizeSet();
        boolean boolean88 = statementConfiguration84.isMaxFieldSizeSet();
        boolean boolean89 = statementConfiguration84.isFetchDirectionSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture90 = asyncQueryRunner3.update("hi!", (java.lang.Object) boolean89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray51, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder13.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder17.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration20 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder19.queryTimeout(duration20);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration22 = builder21.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder21.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder21.queryTimeout((java.lang.Integer) (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture27 = asyncQueryRunner3.update(connection11, "hi!", (java.lang.Object) builder21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(statementConfiguration22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, true, executorService12);
        boolean boolean14 = asyncQueryRunner13.isPmdKnownBroken();
        javax.sql.DataSource dataSource15 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.lang.Object obj24 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner21.fillStatementWithBean(preparedStatement23, obj24, propertyDescriptorArray25);
        asyncQueryRunner13.fillStatementWithBean(preparedStatement16, (java.lang.Object) 0, propertyDescriptorArray25);
        asyncQueryRunner8.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray25);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray25);
        java.sql.Connection connection30 = null;
        java.lang.Object[] objArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture33 = asyncQueryRunner2.update(connection30, "", objArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray25, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = asyncQueryRunner3.getParameterMetaData(preparedStatement22);
        boolean boolean24 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection25 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder27.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder27.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.maxRows((java.lang.Integer) 10);
        java.time.Duration duration34 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.queryTimeout(duration34);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder37.maxRows((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder39.maxRows((java.lang.Integer) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture42 = asyncQueryRunner3.update(connection25, "", (java.lang.Object) builder39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(parameterMetaData23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, executorService12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        java.sql.PreparedStatement preparedStatement21 = null;
        java.sql.ParameterMetaData parameterMetaData22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        javax.sql.DataSource dataSource32 = asyncQueryRunner26.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.sql.ParameterMetaData parameterMetaData35 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        javax.sql.DataSource dataSource41 = asyncQueryRunner39.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.lang.Object obj50 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner47.fillStatementWithBean(preparedStatement49, obj50, propertyDescriptorArray51);
        asyncQueryRunner39.fillStatementWithBean(preparedStatement42, (java.lang.Object) 0, propertyDescriptorArray51);
        asyncQueryRunner26.fillStatement(preparedStatement34, parameterMetaData35, (java.lang.Object[]) propertyDescriptorArray51);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner26.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner20.fillStatement(preparedStatement21, parameterMetaData22, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner13.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement10, (java.lang.Object[]) propertyDescriptorArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture79 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray51, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.time.Duration duration9 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration9);
        java.lang.Integer int11 = statementConfiguration10.getFetchDirection();
        java.lang.Integer int12 = statementConfiguration10.getMaxRows();
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, false, executorService15);
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        javax.sql.DataSource dataSource25 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.time.Duration duration31 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration32 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration31);
        boolean boolean33 = statementConfiguration32.isMaxFieldSizeSet();
        java.time.Duration duration34 = statementConfiguration32.getQueryTimeoutDuration();
        boolean boolean35 = statementConfiguration32.isFetchSizeSet();
        boolean boolean36 = statementConfiguration32.isMaxFieldSizeSet();
        boolean boolean37 = statementConfiguration32.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService39);
        java.sql.PreparedStatement preparedStatement41 = null;
        javax.sql.DataSource dataSource42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource42, true, executorService44);
        boolean boolean46 = asyncQueryRunner45.isPmdKnownBroken();
        javax.sql.DataSource dataSource47 = asyncQueryRunner45.getDataSource();
        java.sql.PreparedStatement preparedStatement48 = null;
        javax.sql.DataSource dataSource50 = null;
        java.util.concurrent.ExecutorService executorService52 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner53 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource50, true, executorService52);
        boolean boolean54 = asyncQueryRunner53.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement55 = null;
        java.lang.Object obj56 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner53.fillStatementWithBean(preparedStatement55, obj56, propertyDescriptorArray57);
        asyncQueryRunner45.fillStatementWithBean(preparedStatement48, (java.lang.Object) 0, propertyDescriptorArray57);
        asyncQueryRunner40.fillStatement(preparedStatement41, (java.lang.Object[]) propertyDescriptorArray57);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement26, (java.lang.Object) statementConfiguration32, propertyDescriptorArray57);
        asyncQueryRunner16.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray57);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, (java.lang.Object) int12, propertyDescriptorArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(dataSource47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray57, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder12.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder12.maxRows((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        javax.sql.DataSource dataSource17 = asyncQueryRunner11.getDataSource();
        javax.sql.DataSource dataSource18 = asyncQueryRunner11.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        javax.sql.DataSource dataSource26 = asyncQueryRunner24.getDataSource();
        java.sql.PreparedStatement preparedStatement27 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.lang.Object obj35 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner32.fillStatementWithBean(preparedStatement34, obj35, propertyDescriptorArray36);
        asyncQueryRunner24.fillStatementWithBean(preparedStatement27, (java.lang.Object) 0, propertyDescriptorArray36);
        asyncQueryRunner11.fillStatement(preparedStatement19, parameterMetaData20, (java.lang.Object[]) propertyDescriptorArray36);
        boolean boolean40 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.sql.ParameterMetaData parameterMetaData42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService44);
        java.sql.PreparedStatement preparedStatement46 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        javax.sql.DataSource dataSource52 = asyncQueryRunner50.getDataSource();
        java.sql.PreparedStatement preparedStatement53 = null;
        javax.sql.DataSource dataSource55 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner58 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource55, true, executorService57);
        boolean boolean59 = asyncQueryRunner58.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.lang.Object obj61 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner58.fillStatementWithBean(preparedStatement60, obj61, propertyDescriptorArray62);
        asyncQueryRunner50.fillStatementWithBean(preparedStatement53, (java.lang.Object) 0, propertyDescriptorArray62);
        asyncQueryRunner45.fillStatement(preparedStatement46, (java.lang.Object[]) propertyDescriptorArray62);
        asyncQueryRunner11.fillStatement(preparedStatement41, parameterMetaData42, (java.lang.Object[]) propertyDescriptorArray62);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture67 = asyncQueryRunner2.update(connection6, "", (java.lang.Object[]) propertyDescriptorArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(dataSource26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray36, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray62, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) (-1));
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder8.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder8.maxRows((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.Connection connection39 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement46 = null;
        java.lang.Object obj47 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner44.fillStatementWithBean(preparedStatement46, obj47, propertyDescriptorArray48);
        javax.sql.DataSource dataSource50 = asyncQueryRunner44.getDataSource();
        javax.sql.DataSource dataSource51 = asyncQueryRunner44.getDataSource();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.sql.ParameterMetaData parameterMetaData53 = null;
        javax.sql.DataSource dataSource54 = null;
        java.util.concurrent.ExecutorService executorService56 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner57 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource54, true, executorService56);
        boolean boolean58 = asyncQueryRunner57.isPmdKnownBroken();
        javax.sql.DataSource dataSource59 = asyncQueryRunner57.getDataSource();
        java.sql.PreparedStatement preparedStatement60 = null;
        javax.sql.DataSource dataSource62 = null;
        java.util.concurrent.ExecutorService executorService64 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner65 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource62, true, executorService64);
        boolean boolean66 = asyncQueryRunner65.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement67 = null;
        java.lang.Object obj68 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray69 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner65.fillStatementWithBean(preparedStatement67, obj68, propertyDescriptorArray69);
        asyncQueryRunner57.fillStatementWithBean(preparedStatement60, (java.lang.Object) 0, propertyDescriptorArray69);
        asyncQueryRunner44.fillStatement(preparedStatement52, parameterMetaData53, (java.lang.Object[]) propertyDescriptorArray69);
        java.sql.PreparedStatement preparedStatement73 = null;
        javax.sql.DataSource dataSource74 = null;
        java.util.concurrent.ExecutorService executorService76 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner77 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource74, true, executorService76);
        boolean boolean78 = asyncQueryRunner77.isPmdKnownBroken();
        javax.sql.DataSource dataSource79 = asyncQueryRunner77.getDataSource();
        java.sql.PreparedStatement preparedStatement80 = null;
        javax.sql.DataSource dataSource82 = null;
        java.util.concurrent.ExecutorService executorService84 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner85 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource82, true, executorService84);
        boolean boolean86 = asyncQueryRunner85.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement87 = null;
        java.lang.Object obj88 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray89 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner85.fillStatementWithBean(preparedStatement87, obj88, propertyDescriptorArray89);
        asyncQueryRunner77.fillStatementWithBean(preparedStatement80, (java.lang.Object) 0, propertyDescriptorArray89);
        asyncQueryRunner44.fillStatement(preparedStatement73, (java.lang.Object[]) propertyDescriptorArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture93 = asyncQueryRunner3.update(connection39, "hi!", (java.lang.Object[]) propertyDescriptorArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray48, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource50);
        org.junit.Assert.assertNull(dataSource51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(dataSource59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray69);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray69, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(dataSource79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray89);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray89, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        java.lang.Integer int8 = statementConfiguration5.getFetchSize();
        java.lang.Integer int9 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int10 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.Connection connection4 = null;
        java.time.Duration duration10 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) (-1), (java.lang.Integer) (-1), (java.lang.Integer) (-1), duration10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture12 = asyncQueryRunner3.update(connection4, "hi!", (java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration17 = builder12.build();
        java.time.Duration duration18 = statementConfiguration17.getQueryTimeoutDuration();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(statementConfiguration17);
        org.junit.Assert.assertNull(duration18);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        boolean boolean11 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        boolean boolean42 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement43 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder48.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = builder50.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder50.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration55 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = builder54.queryTimeout(duration55);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration57 = builder56.build();
        boolean boolean58 = statementConfiguration57.isMaxRowsSet();
        boolean boolean59 = statementConfiguration57.isFetchSizeSet();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement43, (java.lang.Object) statementConfiguration57, strArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(statementConfiguration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertArrayEquals(strArray61, new java.lang.String[] { "" });
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int8 = statementConfiguration5.getMaxFieldSize();
        boolean boolean9 = statementConfiguration5.isMaxRowsSet();
        java.time.Duration duration10 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(duration10);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        asyncQueryRunner2.fillStatement(preparedStatement3, (java.lang.Object[]) propertyDescriptorArray19);
        javax.sql.DataSource dataSource23 = asyncQueryRunner2.getDataSource();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration36 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.queryTimeout(duration36);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder35.maxRows((java.lang.Integer) 10);
        java.time.Duration duration40 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder39.queryTimeout(duration40);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration42 = builder39.build();
        java.lang.Integer int43 = statementConfiguration42.getQueryTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner2.update("hi!", (java.lang.Object) statementConfiguration42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(statementConfiguration42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        java.lang.Integer int11 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int12 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection5 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder11.maxRows((java.lang.Integer) 10);
        java.time.Duration duration14 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.queryTimeout(duration14);
        java.lang.Class<?> wildcardClass16 = builder13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture17 = asyncQueryRunner2.update(connection5, "", (java.lang.Object) wildcardClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = builder6.build();
        java.lang.Integer int12 = statementConfiguration11.getMaxFieldSize();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(statementConfiguration11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) (-1), duration4);
        java.time.Duration duration6 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean7 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Class<?> wildcardClass7 = statementConfiguration5.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner9.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture60 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.fetchDirection((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.maxFieldSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder12.queryTimeout((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        java.sql.PreparedStatement preparedStatement32 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        javax.sql.DataSource dataSource38 = asyncQueryRunner36.getDataSource();
        java.sql.PreparedStatement preparedStatement39 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement46 = null;
        java.lang.Object obj47 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray48 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner44.fillStatementWithBean(preparedStatement46, obj47, propertyDescriptorArray48);
        asyncQueryRunner36.fillStatementWithBean(preparedStatement39, (java.lang.Object) 0, propertyDescriptorArray48);
        asyncQueryRunner3.fillStatement(preparedStatement32, (java.lang.Object[]) propertyDescriptorArray48);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder55 = builder53.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder57 = builder53.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder59 = builder57.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder61 = builder59.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder63 = builder59.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration64 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder65 = builder63.queryTimeout(duration64);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder67 = builder65.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder69 = builder65.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder71 = builder65.maxRows((java.lang.Integer) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture72 = asyncQueryRunner3.update("hi!", (java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(dataSource38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray48);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray48, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        boolean boolean32 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture34 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        java.sql.PreparedStatement preparedStatement43 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder48.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = builder50.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder50.fetchDirection((java.lang.Integer) 100);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement43, (java.lang.Object) builder50, strArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration$Builder ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertArrayEquals(strArray57, new java.lang.String[] { "", "hi!" });
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner1 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0);
        java.sql.Connection connection2 = null;
        java.time.Duration duration8 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration8);
        boolean boolean10 = statementConfiguration9.isMaxFieldSizeSet();
        java.lang.Integer int11 = statementConfiguration9.getMaxFieldSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture12 = asyncQueryRunner1.update(connection2, "", (java.lang.Object) int11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        java.sql.PreparedStatement preparedStatement18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, executorService20);
        javax.sql.DataSource dataSource22 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.sql.ParameterMetaData parameterMetaData24 = null;
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, false, executorService27);
        java.sql.PreparedStatement preparedStatement29 = null;
        java.sql.ParameterMetaData parameterMetaData30 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        javax.sql.DataSource dataSource36 = asyncQueryRunner34.getDataSource();
        javax.sql.DataSource dataSource37 = asyncQueryRunner34.getDataSource();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.time.Duration duration43 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration44 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration43);
        boolean boolean45 = statementConfiguration44.isMaxFieldSizeSet();
        java.time.Duration duration46 = statementConfiguration44.getQueryTimeoutDuration();
        boolean boolean47 = statementConfiguration44.isFetchSizeSet();
        boolean boolean48 = statementConfiguration44.isMaxFieldSizeSet();
        boolean boolean49 = statementConfiguration44.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService51);
        java.sql.PreparedStatement preparedStatement53 = null;
        javax.sql.DataSource dataSource54 = null;
        java.util.concurrent.ExecutorService executorService56 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner57 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource54, true, executorService56);
        boolean boolean58 = asyncQueryRunner57.isPmdKnownBroken();
        javax.sql.DataSource dataSource59 = asyncQueryRunner57.getDataSource();
        java.sql.PreparedStatement preparedStatement60 = null;
        javax.sql.DataSource dataSource62 = null;
        java.util.concurrent.ExecutorService executorService64 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner65 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource62, true, executorService64);
        boolean boolean66 = asyncQueryRunner65.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement67 = null;
        java.lang.Object obj68 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray69 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner65.fillStatementWithBean(preparedStatement67, obj68, propertyDescriptorArray69);
        asyncQueryRunner57.fillStatementWithBean(preparedStatement60, (java.lang.Object) 0, propertyDescriptorArray69);
        asyncQueryRunner52.fillStatement(preparedStatement53, (java.lang.Object[]) propertyDescriptorArray69);
        asyncQueryRunner34.fillStatementWithBean(preparedStatement38, (java.lang.Object) statementConfiguration44, propertyDescriptorArray69);
        asyncQueryRunner28.fillStatement(preparedStatement29, parameterMetaData30, (java.lang.Object[]) propertyDescriptorArray69);
        asyncQueryRunner21.fillStatement(preparedStatement23, parameterMetaData24, (java.lang.Object[]) propertyDescriptorArray69);
        asyncQueryRunner3.fillStatement(preparedStatement18, (java.lang.Object[]) propertyDescriptorArray69);
        javax.sql.DataSource dataSource77 = asyncQueryRunner3.getDataSource();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(dataSource36);
        org.junit.Assert.assertNull(dataSource37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(dataSource59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray69);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray69, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource77);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture13 = asyncQueryRunner3.update(connection11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        java.sql.Connection connection41 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement48 = null;
        java.lang.Object obj49 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner46.fillStatementWithBean(preparedStatement48, obj49, propertyDescriptorArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture52 = asyncQueryRunner3.update(connection41, "", (java.lang.Object[]) propertyDescriptorArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray50, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = asyncQueryRunner3.getParameterMetaData(preparedStatement19);
        java.sql.Connection connection21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture23 = asyncQueryRunner3.update(connection21, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(parameterMetaData20);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.fetchDirection((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int9 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        javax.sql.DataSource dataSource21 = asyncQueryRunner15.getDataSource();
        javax.sql.DataSource dataSource22 = asyncQueryRunner15.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.sql.ParameterMetaData parameterMetaData24 = null;
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, true, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource30 = asyncQueryRunner28.getDataSource();
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.lang.Object obj39 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner36.fillStatementWithBean(preparedStatement38, obj39, propertyDescriptorArray40);
        asyncQueryRunner28.fillStatementWithBean(preparedStatement31, (java.lang.Object) 0, propertyDescriptorArray40);
        asyncQueryRunner15.fillStatement(preparedStatement23, parameterMetaData24, (java.lang.Object[]) propertyDescriptorArray40);
        java.sql.PreparedStatement preparedStatement44 = null;
        javax.sql.DataSource dataSource45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource45, true, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        javax.sql.DataSource dataSource50 = asyncQueryRunner48.getDataSource();
        java.sql.PreparedStatement preparedStatement51 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService55 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner56 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, true, executorService55);
        boolean boolean57 = asyncQueryRunner56.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.lang.Object obj59 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner56.fillStatementWithBean(preparedStatement58, obj59, propertyDescriptorArray60);
        asyncQueryRunner48.fillStatementWithBean(preparedStatement51, (java.lang.Object) 0, propertyDescriptorArray60);
        asyncQueryRunner15.fillStatement(preparedStatement44, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner9.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray60);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder67 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder69 = builder67.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder71 = builder67.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder73 = builder71.maxRows((java.lang.Integer) 10);
        java.time.Duration duration74 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder75 = builder73.queryTimeout(duration74);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder77 = builder75.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder79 = builder77.fetchDirection((java.lang.Integer) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture80 = asyncQueryRunner2.update("", (java.lang.Object) builder77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray40, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(dataSource50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray60, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder12.build();
        java.lang.Integer int14 = statementConfiguration13.getFetchSize();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder4.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration16 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration17 = statementConfiguration16.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder10.queryTimeout(duration17);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) (-1), duration17);
        boolean boolean20 = statementConfiguration19.isFetchSizeSet();
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        boolean boolean7 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int8 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.maxRows((java.lang.Integer) 10);
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = builder18.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder18.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder22 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder22.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder32.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration40 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration41 = statementConfiguration40.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder34.queryTimeout(duration41);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder21.queryTimeout(duration41);
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement7, (java.lang.Object) duration41, propertyDescriptorArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"properties\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(statementConfiguration19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        java.sql.PreparedStatement preparedStatement32 = null;
        java.sql.ParameterMetaData parameterMetaData33 = asyncQueryRunner3.getParameterMetaData(preparedStatement32);
        java.sql.PreparedStatement preparedStatement34 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration40 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int41 = statementConfiguration40.getFetchDirection();
        java.lang.Integer int42 = statementConfiguration40.getFetchDirection();
        java.lang.String[] strArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement34, (java.lang.Object) int42, strArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"propertyNames\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(parameterMetaData33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int9 = statementConfiguration5.getMaxRows();
        java.lang.Integer int10 = statementConfiguration5.getMaxFieldSize();
        boolean boolean11 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int12 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int8 = statementConfiguration5.getMaxFieldSize();
        boolean boolean9 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        java.lang.Integer int11 = statementConfiguration5.getMaxRows();
        java.time.Duration duration12 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(duration12);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.Connection connection12 = null;
        java.time.Duration duration18 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration18);
        boolean boolean20 = statementConfiguration19.isMaxFieldSizeSet();
        boolean boolean21 = statementConfiguration19.isFetchSizeSet();
        java.lang.Integer int22 = statementConfiguration19.getFetchDirection();
        java.lang.Integer int23 = statementConfiguration19.getFetchSize();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder30.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration35 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.queryTimeout(duration35);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder38 = builder36.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = builder36.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder36.maxRows((java.lang.Integer) 0);
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        javax.sql.DataSource dataSource48 = asyncQueryRunner46.getDataSource();
        javax.sql.DataSource dataSource49 = asyncQueryRunner46.getDataSource();
        java.sql.PreparedStatement preparedStatement50 = null;
        java.time.Duration duration55 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration56 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration55);
        boolean boolean57 = statementConfiguration56.isMaxFieldSizeSet();
        java.time.Duration duration58 = statementConfiguration56.getQueryTimeoutDuration();
        boolean boolean59 = statementConfiguration56.isFetchSizeSet();
        boolean boolean60 = statementConfiguration56.isMaxFieldSizeSet();
        boolean boolean61 = statementConfiguration56.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService63 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner64 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService63);
        java.sql.PreparedStatement preparedStatement65 = null;
        javax.sql.DataSource dataSource66 = null;
        java.util.concurrent.ExecutorService executorService68 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner69 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource66, true, executorService68);
        boolean boolean70 = asyncQueryRunner69.isPmdKnownBroken();
        javax.sql.DataSource dataSource71 = asyncQueryRunner69.getDataSource();
        java.sql.PreparedStatement preparedStatement72 = null;
        javax.sql.DataSource dataSource74 = null;
        java.util.concurrent.ExecutorService executorService76 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner77 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource74, true, executorService76);
        boolean boolean78 = asyncQueryRunner77.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement79 = null;
        java.lang.Object obj80 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray81 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner77.fillStatementWithBean(preparedStatement79, obj80, propertyDescriptorArray81);
        asyncQueryRunner69.fillStatementWithBean(preparedStatement72, (java.lang.Object) 0, propertyDescriptorArray81);
        asyncQueryRunner64.fillStatement(preparedStatement65, (java.lang.Object[]) propertyDescriptorArray81);
        asyncQueryRunner46.fillStatementWithBean(preparedStatement50, (java.lang.Object) statementConfiguration56, propertyDescriptorArray81);
        boolean boolean86 = statementConfiguration56.isFetchDirectionSet();
        java.lang.Object[] objArray87 = new java.lang.Object[] { statementConfiguration19, builder36, statementConfiguration56 };
        java.lang.Object[][] objArray88 = new java.lang.Object[][] { objArray87 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture89 = asyncQueryRunner3.batch(connection12, "", objArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(dataSource48);
        org.junit.Assert.assertNull(dataSource49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(dataSource71);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray81);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray81, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNotNull(objArray88);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray14);
        java.lang.Class<?> wildcardClass17 = asyncQueryRunner3.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean6 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData8 = asyncQueryRunner2.getParameterMetaData(preparedStatement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        javax.sql.DataSource dataSource4 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        java.sql.ParameterMetaData parameterMetaData17 = asyncQueryRunner9.getParameterMetaData(preparedStatement16);
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, executorService40);
        javax.sql.DataSource dataSource42 = asyncQueryRunner41.getDataSource();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.sql.ParameterMetaData parameterMetaData44 = null;
        javax.sql.DataSource dataSource45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource45, false, executorService47);
        java.sql.PreparedStatement preparedStatement49 = null;
        java.sql.ParameterMetaData parameterMetaData50 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        javax.sql.DataSource dataSource56 = asyncQueryRunner54.getDataSource();
        javax.sql.DataSource dataSource57 = asyncQueryRunner54.getDataSource();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.time.Duration duration63 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration64 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration63);
        boolean boolean65 = statementConfiguration64.isMaxFieldSizeSet();
        java.time.Duration duration66 = statementConfiguration64.getQueryTimeoutDuration();
        boolean boolean67 = statementConfiguration64.isFetchSizeSet();
        boolean boolean68 = statementConfiguration64.isMaxFieldSizeSet();
        boolean boolean69 = statementConfiguration64.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService71 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner72 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService71);
        java.sql.PreparedStatement preparedStatement73 = null;
        javax.sql.DataSource dataSource74 = null;
        java.util.concurrent.ExecutorService executorService76 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner77 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource74, true, executorService76);
        boolean boolean78 = asyncQueryRunner77.isPmdKnownBroken();
        javax.sql.DataSource dataSource79 = asyncQueryRunner77.getDataSource();
        java.sql.PreparedStatement preparedStatement80 = null;
        javax.sql.DataSource dataSource82 = null;
        java.util.concurrent.ExecutorService executorService84 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner85 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource82, true, executorService84);
        boolean boolean86 = asyncQueryRunner85.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement87 = null;
        java.lang.Object obj88 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray89 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner85.fillStatementWithBean(preparedStatement87, obj88, propertyDescriptorArray89);
        asyncQueryRunner77.fillStatementWithBean(preparedStatement80, (java.lang.Object) 0, propertyDescriptorArray89);
        asyncQueryRunner72.fillStatement(preparedStatement73, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner54.fillStatementWithBean(preparedStatement58, (java.lang.Object) statementConfiguration64, propertyDescriptorArray89);
        asyncQueryRunner48.fillStatement(preparedStatement49, parameterMetaData50, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner41.fillStatement(preparedStatement43, parameterMetaData44, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner23.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray89);
        asyncQueryRunner9.fillStatement(preparedStatement18, parameterMetaData19, (java.lang.Object[]) propertyDescriptorArray89);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatement(preparedStatement5, (java.lang.Object[]) propertyDescriptorArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(parameterMetaData17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource42);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(dataSource56);
        org.junit.Assert.assertNull(dataSource57);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(dataSource79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray89);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray89, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource7 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection8 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, false, executorService12);
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        javax.sql.DataSource dataSource16 = null;
        java.util.concurrent.ExecutorService executorService18 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner19 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource16, true, executorService18);
        boolean boolean20 = asyncQueryRunner19.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner19.getDataSource();
        javax.sql.DataSource dataSource22 = asyncQueryRunner19.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.time.Duration duration28 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration29 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration28);
        boolean boolean30 = statementConfiguration29.isMaxFieldSizeSet();
        java.time.Duration duration31 = statementConfiguration29.getQueryTimeoutDuration();
        boolean boolean32 = statementConfiguration29.isFetchSizeSet();
        boolean boolean33 = statementConfiguration29.isMaxFieldSizeSet();
        boolean boolean34 = statementConfiguration29.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService36);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner37.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner19.fillStatementWithBean(preparedStatement23, (java.lang.Object) statementConfiguration29, propertyDescriptorArray54);
        asyncQueryRunner13.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture60 = asyncQueryRunner3.update(connection8, "", (java.lang.Object) preparedStatement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertNull(dataSource7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean21 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture23 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder4.fetchDirection((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture10 = asyncQueryRunner2.update(connection7, "hi!", (java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        java.lang.Integer int6 = statementConfiguration5.getMaxRows();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        boolean boolean8 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        java.lang.Integer int8 = statementConfiguration5.getFetchSize();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.queryTimeout((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource19 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture22 = asyncQueryRunner3.update(connection20, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(dataSource19);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        java.time.Duration duration8 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
        org.junit.Assert.assertNull(duration8);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        boolean boolean32 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.sql.ParameterMetaData parameterMetaData34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService36);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner37.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner3.fillStatement(preparedStatement33, parameterMetaData34, (java.lang.Object[]) propertyDescriptorArray54);
        javax.sql.DataSource dataSource59 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection60 = null;
        java.lang.Object[][] objArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture63 = asyncQueryRunner3.batch(connection60, "hi!", objArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource59);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection20 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService24 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner25 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, true, executorService24);
        boolean boolean26 = asyncQueryRunner25.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.lang.Object obj28 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner25.fillStatementWithBean(preparedStatement27, obj28, propertyDescriptorArray29);
        javax.sql.DataSource dataSource31 = asyncQueryRunner25.getDataSource();
        javax.sql.DataSource dataSource32 = asyncQueryRunner25.getDataSource();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.sql.ParameterMetaData parameterMetaData34 = null;
        javax.sql.DataSource dataSource35 = null;
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource35, true, executorService37);
        boolean boolean39 = asyncQueryRunner38.isPmdKnownBroken();
        javax.sql.DataSource dataSource40 = asyncQueryRunner38.getDataSource();
        java.sql.PreparedStatement preparedStatement41 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement48 = null;
        java.lang.Object obj49 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray50 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner46.fillStatementWithBean(preparedStatement48, obj49, propertyDescriptorArray50);
        asyncQueryRunner38.fillStatementWithBean(preparedStatement41, (java.lang.Object) 0, propertyDescriptorArray50);
        asyncQueryRunner25.fillStatement(preparedStatement33, parameterMetaData34, (java.lang.Object[]) propertyDescriptorArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture54 = asyncQueryRunner3.update(connection20, "hi!", (java.lang.Object[]) propertyDescriptorArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray29, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource31);
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(dataSource40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray50);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray50, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection5 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration12 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration13 = statementConfiguration12.getQueryTimeoutDuration();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture14 = asyncQueryRunner2.update(connection5, "", (java.lang.Object) duration13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = builder8.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder8.fetchDirection((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(statementConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        javax.sql.DataSource dataSource9 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource9, true, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        javax.sql.DataSource dataSource14 = asyncQueryRunner12.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = asyncQueryRunner12.getParameterMetaData(preparedStatement15);
        boolean boolean17 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.time.Duration duration23 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration24 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration23);
        javax.sql.DataSource dataSource25 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource25, true, executorService27);
        boolean boolean29 = asyncQueryRunner28.isPmdKnownBroken();
        javax.sql.DataSource dataSource30 = asyncQueryRunner28.getDataSource();
        java.sql.PreparedStatement preparedStatement31 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, true, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.lang.Object obj39 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray40 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner36.fillStatementWithBean(preparedStatement38, obj39, propertyDescriptorArray40);
        asyncQueryRunner28.fillStatementWithBean(preparedStatement31, (java.lang.Object) 0, propertyDescriptorArray40);
        boolean boolean43 = asyncQueryRunner28.isPmdKnownBroken();
        boolean boolean44 = asyncQueryRunner28.isPmdKnownBroken();
        boolean boolean45 = asyncQueryRunner28.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement46 = null;
        java.sql.ParameterMetaData parameterMetaData47 = null;
        java.util.concurrent.ExecutorService executorService48 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService48, queryRunner49);
        java.sql.PreparedStatement preparedStatement51 = null;
        java.sql.ParameterMetaData parameterMetaData52 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService54 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner55 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, executorService54);
        boolean boolean56 = asyncQueryRunner55.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement57 = null;
        java.sql.ParameterMetaData parameterMetaData58 = null;
        java.util.concurrent.ExecutorService executorService60 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner61 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService60);
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource63 = null;
        java.util.concurrent.ExecutorService executorService65 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner66 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource63, true, executorService65);
        boolean boolean67 = asyncQueryRunner66.isPmdKnownBroken();
        javax.sql.DataSource dataSource68 = asyncQueryRunner66.getDataSource();
        java.sql.PreparedStatement preparedStatement69 = null;
        javax.sql.DataSource dataSource71 = null;
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource71, true, executorService73);
        boolean boolean75 = asyncQueryRunner74.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement76 = null;
        java.lang.Object obj77 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray78 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner74.fillStatementWithBean(preparedStatement76, obj77, propertyDescriptorArray78);
        asyncQueryRunner66.fillStatementWithBean(preparedStatement69, (java.lang.Object) 0, propertyDescriptorArray78);
        asyncQueryRunner61.fillStatement(preparedStatement62, (java.lang.Object[]) propertyDescriptorArray78);
        asyncQueryRunner55.fillStatement(preparedStatement57, parameterMetaData58, (java.lang.Object[]) propertyDescriptorArray78);
        asyncQueryRunner50.fillStatement(preparedStatement51, parameterMetaData52, (java.lang.Object[]) propertyDescriptorArray78);
        asyncQueryRunner28.fillStatement(preparedStatement46, parameterMetaData47, (java.lang.Object[]) propertyDescriptorArray78);
        asyncQueryRunner12.fillStatementWithBean(preparedStatement18, (java.lang.Object) 1, propertyDescriptorArray78);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement7, (java.lang.Object) builder8, propertyDescriptorArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertNull(parameterMetaData16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(dataSource30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray40);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray40, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(dataSource68);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray78);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray78, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        java.time.Duration duration6 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = builder4.queryTimeout(duration6);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder4.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.maxFieldSize((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.lang.Integer int9 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int10 = statementConfiguration5.getQueryTimeout();
        java.lang.Integer int11 = statementConfiguration5.getFetchDirection();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement9 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration15 = builder14.build();
        java.time.Duration duration16 = statementConfiguration15.getQueryTimeoutDuration();
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        boolean boolean21 = asyncQueryRunner20.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.lang.Object obj23 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray24 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner20.fillStatementWithBean(preparedStatement22, obj23, propertyDescriptorArray24);
        javax.sql.DataSource dataSource26 = asyncQueryRunner20.getDataSource();
        javax.sql.DataSource dataSource27 = asyncQueryRunner20.getDataSource();
        java.sql.PreparedStatement preparedStatement28 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration34 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 100);
        javax.sql.DataSource dataSource35 = null;
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource35, true, executorService37);
        boolean boolean39 = asyncQueryRunner38.isPmdKnownBroken();
        javax.sql.DataSource dataSource40 = asyncQueryRunner38.getDataSource();
        javax.sql.DataSource dataSource41 = asyncQueryRunner38.getDataSource();
        javax.sql.DataSource dataSource42 = asyncQueryRunner38.getDataSource();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.time.Duration duration48 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration49 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration48);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        asyncQueryRunner38.fillStatementWithBean(preparedStatement43, (java.lang.Object) 10, strArray50);
        asyncQueryRunner20.fillStatementWithBean(preparedStatement28, (java.lang.Object) statementConfiguration34, strArray50);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement9, (java.lang.Object) statementConfiguration15, strArray50);
        java.sql.Connection connection54 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder57 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder59 = builder57.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder61 = builder57.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder63 = builder61.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder65 = builder61.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder67 = builder65.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder69 = builder65.fetchDirection((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass70 = builder65.getClass();
        javax.sql.DataSource dataSource71 = null;
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource71, true, executorService73);
        boolean boolean75 = asyncQueryRunner74.isPmdKnownBroken();
        javax.sql.DataSource dataSource76 = asyncQueryRunner74.getDataSource();
        javax.sql.DataSource dataSource77 = asyncQueryRunner74.getDataSource();
        javax.sql.DataSource dataSource78 = asyncQueryRunner74.getDataSource();
        java.sql.PreparedStatement preparedStatement79 = null;
        java.time.Duration duration84 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration85 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration84);
        java.lang.String[] strArray86 = new java.lang.String[] {};
        asyncQueryRunner74.fillStatementWithBean(preparedStatement79, (java.lang.Object) 10, strArray86);
        java.lang.Object[] objArray88 = new java.lang.Object[] { (-1.0f), builder65, preparedStatement79 };
        java.lang.Object[][] objArray89 = new java.lang.Object[][] { objArray88 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture90 = asyncQueryRunner3.batch(connection54, "", objArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(statementConfiguration15);
        org.junit.Assert.assertNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray24);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray24, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource26);
        org.junit.Assert.assertNull(dataSource27);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(dataSource40);
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertNull(dataSource42);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertArrayEquals(strArray50, new java.lang.String[] {});
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(dataSource76);
        org.junit.Assert.assertNull(dataSource77);
        org.junit.Assert.assertNull(dataSource78);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertArrayEquals(strArray86, new java.lang.String[] {});
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(objArray89);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) (-1));
        java.time.Duration duration6 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        java.sql.PreparedStatement preparedStatement25 = null;
        java.sql.ParameterMetaData parameterMetaData26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        javax.sql.DataSource dataSource36 = asyncQueryRunner30.getDataSource();
        javax.sql.DataSource dataSource37 = asyncQueryRunner30.getDataSource();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.sql.ParameterMetaData parameterMetaData39 = null;
        javax.sql.DataSource dataSource40 = null;
        java.util.concurrent.ExecutorService executorService42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource40, true, executorService42);
        boolean boolean44 = asyncQueryRunner43.isPmdKnownBroken();
        javax.sql.DataSource dataSource45 = asyncQueryRunner43.getDataSource();
        java.sql.PreparedStatement preparedStatement46 = null;
        javax.sql.DataSource dataSource48 = null;
        java.util.concurrent.ExecutorService executorService50 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner51 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource48, true, executorService50);
        boolean boolean52 = asyncQueryRunner51.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement53 = null;
        java.lang.Object obj54 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray55 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner51.fillStatementWithBean(preparedStatement53, obj54, propertyDescriptorArray55);
        asyncQueryRunner43.fillStatementWithBean(preparedStatement46, (java.lang.Object) 0, propertyDescriptorArray55);
        asyncQueryRunner30.fillStatement(preparedStatement38, parameterMetaData39, (java.lang.Object[]) propertyDescriptorArray55);
        asyncQueryRunner24.fillStatement(preparedStatement25, parameterMetaData26, (java.lang.Object[]) propertyDescriptorArray55);
        java.sql.PreparedStatement preparedStatement60 = null;
        java.sql.ParameterMetaData parameterMetaData61 = null;
        java.util.concurrent.ExecutorService executorService62 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner63 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner64 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService62, queryRunner63);
        java.sql.PreparedStatement preparedStatement65 = null;
        java.sql.ParameterMetaData parameterMetaData66 = null;
        javax.sql.DataSource dataSource67 = null;
        java.util.concurrent.ExecutorService executorService68 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner69 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource67, executorService68);
        boolean boolean70 = asyncQueryRunner69.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement71 = null;
        java.sql.ParameterMetaData parameterMetaData72 = null;
        java.util.concurrent.ExecutorService executorService74 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner75 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService74);
        java.sql.PreparedStatement preparedStatement76 = null;
        javax.sql.DataSource dataSource77 = null;
        java.util.concurrent.ExecutorService executorService79 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner80 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource77, true, executorService79);
        boolean boolean81 = asyncQueryRunner80.isPmdKnownBroken();
        javax.sql.DataSource dataSource82 = asyncQueryRunner80.getDataSource();
        java.sql.PreparedStatement preparedStatement83 = null;
        javax.sql.DataSource dataSource85 = null;
        java.util.concurrent.ExecutorService executorService87 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner88 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource85, true, executorService87);
        boolean boolean89 = asyncQueryRunner88.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement90 = null;
        java.lang.Object obj91 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray92 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner88.fillStatementWithBean(preparedStatement90, obj91, propertyDescriptorArray92);
        asyncQueryRunner80.fillStatementWithBean(preparedStatement83, (java.lang.Object) 0, propertyDescriptorArray92);
        asyncQueryRunner75.fillStatement(preparedStatement76, (java.lang.Object[]) propertyDescriptorArray92);
        asyncQueryRunner69.fillStatement(preparedStatement71, parameterMetaData72, (java.lang.Object[]) propertyDescriptorArray92);
        asyncQueryRunner64.fillStatement(preparedStatement65, parameterMetaData66, (java.lang.Object[]) propertyDescriptorArray92);
        asyncQueryRunner24.fillStatement(preparedStatement60, parameterMetaData61, (java.lang.Object[]) propertyDescriptorArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture99 = asyncQueryRunner3.update("", (java.lang.Object[]) propertyDescriptorArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource36);
        org.junit.Assert.assertNull(dataSource37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(dataSource45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray55);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray55, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(dataSource82);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray92);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray92, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner2.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        java.lang.Integer int10 = statementConfiguration9.getQueryTimeout();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isQueryTimeoutSet();
        boolean boolean11 = statementConfiguration5.isMaxRowsSet();
        boolean boolean12 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration13 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(duration13);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.queryTimeout((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        javax.sql.DataSource dataSource17 = asyncQueryRunner11.getDataSource();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = asyncQueryRunner11.getParameterMetaData(preparedStatement18);
        java.sql.PreparedStatement preparedStatement20 = null;
        java.sql.ParameterMetaData parameterMetaData21 = asyncQueryRunner11.getParameterMetaData(preparedStatement20);
        java.sql.ResultSet resultSet22 = null;
        org.apache.commons.dbutils.ResultSetIterator resultSetIterator23 = new org.apache.commons.dbutils.ResultSetIterator(resultSet22);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.maxFieldSize((java.lang.Integer) 100);
        java.lang.Object[] objArray31 = new java.lang.Object[] { parameterMetaData21, resultSetIterator23, 100 };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatement(preparedStatement7, objArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.setNull(int, int)\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertNull(parameterMetaData19);
        org.junit.Assert.assertNull(parameterMetaData21);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(objArray31);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int9 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = asyncQueryRunner3.getParameterMetaData(preparedStatement22);
        java.sql.Connection connection24 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.maxRows((java.lang.Integer) 10);
        java.time.Duration duration33 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder32.queryTimeout(duration33);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration37 = builder36.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder36.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder36.queryTimeout((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = builder42.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder42.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder46.maxRows((java.lang.Integer) 10);
        java.time.Duration duration49 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder48.queryTimeout(duration49);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration56 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration57 = statementConfiguration56.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder58 = builder50.queryTimeout(duration57);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder59 = builder41.queryTimeout(duration57);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture60 = asyncQueryRunner3.update(connection24, "", (java.lang.Object) builder41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(parameterMetaData23);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(statementConfiguration37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration10 = builder8.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder8.maxFieldSize((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNotNull(statementConfiguration10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        asyncQueryRunner2.fillStatement(preparedStatement3, (java.lang.Object[]) propertyDescriptorArray19);
        java.sql.Connection connection23 = null;
        java.lang.Object[][] objArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture26 = asyncQueryRunner2.batch(connection23, "", objArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray14);
        java.sql.PreparedStatement preparedStatement17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement31 = null;
        java.lang.Object obj32 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement31, obj32, propertyDescriptorArray33);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement24, (java.lang.Object) 0, propertyDescriptorArray33);
        asyncQueryRunner3.fillStatement(preparedStatement17, (java.lang.Object[]) propertyDescriptorArray33);
        java.sql.Connection connection37 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.sql.ParameterMetaData parameterMetaData46 = asyncQueryRunner42.getParameterMetaData(preparedStatement45);
        boolean boolean47 = asyncQueryRunner42.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement48 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder49 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = builder49.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder51.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration54 = builder53.build();
        java.time.Duration duration55 = statementConfiguration54.getQueryTimeoutDuration();
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement61 = null;
        java.lang.Object obj62 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray63 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner59.fillStatementWithBean(preparedStatement61, obj62, propertyDescriptorArray63);
        javax.sql.DataSource dataSource65 = asyncQueryRunner59.getDataSource();
        javax.sql.DataSource dataSource66 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement67 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration73 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 100);
        javax.sql.DataSource dataSource74 = null;
        java.util.concurrent.ExecutorService executorService76 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner77 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource74, true, executorService76);
        boolean boolean78 = asyncQueryRunner77.isPmdKnownBroken();
        javax.sql.DataSource dataSource79 = asyncQueryRunner77.getDataSource();
        javax.sql.DataSource dataSource80 = asyncQueryRunner77.getDataSource();
        javax.sql.DataSource dataSource81 = asyncQueryRunner77.getDataSource();
        java.sql.PreparedStatement preparedStatement82 = null;
        java.time.Duration duration87 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration88 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration87);
        java.lang.String[] strArray89 = new java.lang.String[] {};
        asyncQueryRunner77.fillStatementWithBean(preparedStatement82, (java.lang.Object) 10, strArray89);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement67, (java.lang.Object) statementConfiguration73, strArray89);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement48, (java.lang.Object) statementConfiguration54, strArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture93 = asyncQueryRunner3.update(connection37, "hi!", (java.lang.Object[]) strArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray33, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertNull(parameterMetaData46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(statementConfiguration54);
        org.junit.Assert.assertNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray63);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray63, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource65);
        org.junit.Assert.assertNull(dataSource66);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(dataSource79);
        org.junit.Assert.assertNull(dataSource80);
        org.junit.Assert.assertNull(dataSource81);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertArrayEquals(strArray89, new java.lang.String[] {});
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        asyncQueryRunner2.fillStatement(preparedStatement3, (java.lang.Object[]) propertyDescriptorArray19);
        javax.sql.DataSource dataSource23 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture26 = asyncQueryRunner2.update(connection24, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource23);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.lang.Class<?> wildcardClass5 = asyncQueryRunner3.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = asyncQueryRunner3.getParameterMetaData(preparedStatement22);
        boolean boolean24 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture27 = asyncQueryRunner3.update(connection25, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(parameterMetaData23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.fetchDirection((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder12.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.time.Duration duration25 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration26 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) (-1), duration25);
        boolean boolean27 = statementConfiguration26.isMaxRowsSet();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration33 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 100, (java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder34.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder38 = builder36.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration39 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = builder36.queryTimeout(duration39);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder40.maxFieldSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration43 = builder42.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder42.queryTimeout((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder46.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder46.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = builder50.maxRows((java.lang.Integer) 10);
        java.time.Duration duration53 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder52.queryTimeout(duration53);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = builder52.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder58 = builder56.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder59 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder61 = builder59.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder63 = builder59.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder65 = builder63.maxRows((java.lang.Integer) 10);
        java.time.Duration duration66 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder67 = builder65.queryTimeout(duration66);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration73 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration74 = statementConfiguration73.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder75 = builder67.queryTimeout(duration74);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder76 = builder58.queryTimeout(duration74);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder77 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder79 = builder77.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder81 = builder77.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder83 = builder81.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder85 = builder83.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder87 = builder83.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration88 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder89 = builder87.queryTimeout(duration88);
        java.lang.Object[] objArray90 = new java.lang.Object[] { boolean27, 0, 100, builder58, duration88 };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatement(preparedStatement20, objArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.setObject(int, Object)\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(statementConfiguration43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(objArray90);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder11.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder15.fetchSize((java.lang.Integer) 0);
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement31 = null;
        java.lang.Object obj32 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement31, obj32, propertyDescriptorArray33);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement24, (java.lang.Object) 0, propertyDescriptorArray33);
        java.sql.PreparedStatement preparedStatement36 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, executorService38);
        javax.sql.DataSource dataSource40 = asyncQueryRunner39.getDataSource();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.sql.ParameterMetaData parameterMetaData42 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, false, executorService45);
        java.sql.PreparedStatement preparedStatement47 = null;
        java.sql.ParameterMetaData parameterMetaData48 = null;
        javax.sql.DataSource dataSource49 = null;
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource49, true, executorService51);
        boolean boolean53 = asyncQueryRunner52.isPmdKnownBroken();
        javax.sql.DataSource dataSource54 = asyncQueryRunner52.getDataSource();
        javax.sql.DataSource dataSource55 = asyncQueryRunner52.getDataSource();
        java.sql.PreparedStatement preparedStatement56 = null;
        java.time.Duration duration61 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration62 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration61);
        boolean boolean63 = statementConfiguration62.isMaxFieldSizeSet();
        java.time.Duration duration64 = statementConfiguration62.getQueryTimeoutDuration();
        boolean boolean65 = statementConfiguration62.isFetchSizeSet();
        boolean boolean66 = statementConfiguration62.isMaxFieldSizeSet();
        boolean boolean67 = statementConfiguration62.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService69 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner70 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService69);
        java.sql.PreparedStatement preparedStatement71 = null;
        javax.sql.DataSource dataSource72 = null;
        java.util.concurrent.ExecutorService executorService74 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner75 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource72, true, executorService74);
        boolean boolean76 = asyncQueryRunner75.isPmdKnownBroken();
        javax.sql.DataSource dataSource77 = asyncQueryRunner75.getDataSource();
        java.sql.PreparedStatement preparedStatement78 = null;
        javax.sql.DataSource dataSource80 = null;
        java.util.concurrent.ExecutorService executorService82 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner83 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource80, true, executorService82);
        boolean boolean84 = asyncQueryRunner83.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement85 = null;
        java.lang.Object obj86 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray87 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner83.fillStatementWithBean(preparedStatement85, obj86, propertyDescriptorArray87);
        asyncQueryRunner75.fillStatementWithBean(preparedStatement78, (java.lang.Object) 0, propertyDescriptorArray87);
        asyncQueryRunner70.fillStatement(preparedStatement71, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner52.fillStatementWithBean(preparedStatement56, (java.lang.Object) statementConfiguration62, propertyDescriptorArray87);
        asyncQueryRunner46.fillStatement(preparedStatement47, parameterMetaData48, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner39.fillStatement(preparedStatement41, parameterMetaData42, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner21.fillStatement(preparedStatement36, (java.lang.Object[]) propertyDescriptorArray87);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement6, (java.lang.Object) builder17, propertyDescriptorArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray33, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource40);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(dataSource54);
        org.junit.Assert.assertNull(dataSource55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(dataSource77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray87);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray87, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner2.update(connection4, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder0.maxRows((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        java.lang.Integer int8 = statementConfiguration5.getFetchSize();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder8.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder8.queryTimeout((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass14 = builder13.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        java.time.Duration duration9 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.queryTimeout(duration9);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder12.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        javax.sql.DataSource dataSource11 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement12 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner9.fillStatementWithBean(preparedStatement12, (java.lang.Object) 0, propertyDescriptorArray21);
        boolean boolean24 = asyncQueryRunner9.isPmdKnownBroken();
        boolean boolean25 = asyncQueryRunner9.isPmdKnownBroken();
        boolean boolean26 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.sql.ParameterMetaData parameterMetaData28 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService29, queryRunner30);
        java.sql.PreparedStatement preparedStatement32 = null;
        java.sql.ParameterMetaData parameterMetaData33 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner36 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, executorService35);
        boolean boolean37 = asyncQueryRunner36.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement38 = null;
        java.sql.ParameterMetaData parameterMetaData39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService41);
        java.sql.PreparedStatement preparedStatement43 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        javax.sql.DataSource dataSource49 = asyncQueryRunner47.getDataSource();
        java.sql.PreparedStatement preparedStatement50 = null;
        javax.sql.DataSource dataSource52 = null;
        java.util.concurrent.ExecutorService executorService54 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner55 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource52, true, executorService54);
        boolean boolean56 = asyncQueryRunner55.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement57 = null;
        java.lang.Object obj58 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray59 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner55.fillStatementWithBean(preparedStatement57, obj58, propertyDescriptorArray59);
        asyncQueryRunner47.fillStatementWithBean(preparedStatement50, (java.lang.Object) 0, propertyDescriptorArray59);
        asyncQueryRunner42.fillStatement(preparedStatement43, (java.lang.Object[]) propertyDescriptorArray59);
        asyncQueryRunner36.fillStatement(preparedStatement38, parameterMetaData39, (java.lang.Object[]) propertyDescriptorArray59);
        asyncQueryRunner31.fillStatement(preparedStatement32, parameterMetaData33, (java.lang.Object[]) propertyDescriptorArray59);
        asyncQueryRunner9.fillStatement(preparedStatement27, parameterMetaData28, (java.lang.Object[]) propertyDescriptorArray59);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement5, (java.lang.Object[]) propertyDescriptorArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(dataSource49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray59);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray59, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        java.lang.Integer int6 = statementConfiguration5.getMaxFieldSize();
        boolean boolean7 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        boolean boolean7 = statementConfiguration5.isFetchDirectionSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        javax.sql.DataSource dataSource11 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource12 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.time.Duration duration18 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration18);
        boolean boolean20 = statementConfiguration19.isMaxFieldSizeSet();
        java.time.Duration duration21 = statementConfiguration19.getQueryTimeoutDuration();
        boolean boolean22 = statementConfiguration19.isFetchSizeSet();
        boolean boolean23 = statementConfiguration19.isMaxFieldSizeSet();
        boolean boolean24 = statementConfiguration19.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService26);
        java.sql.PreparedStatement preparedStatement28 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        javax.sql.DataSource dataSource34 = asyncQueryRunner32.getDataSource();
        java.sql.PreparedStatement preparedStatement35 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner32.fillStatementWithBean(preparedStatement35, (java.lang.Object) 0, propertyDescriptorArray44);
        asyncQueryRunner27.fillStatement(preparedStatement28, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner9.fillStatementWithBean(preparedStatement13, (java.lang.Object) statementConfiguration19, propertyDescriptorArray44);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray44);
        java.sql.Connection connection50 = null;
        java.time.Duration duration56 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration57 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration56);
        java.lang.Integer int58 = statementConfiguration57.getFetchSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture59 = asyncQueryRunner3.update(connection50, "hi!", (java.lang.Object) int58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertNull(dataSource12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(dataSource34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.queryTimeout((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder8.maxFieldSize((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray21);
        asyncQueryRunner2.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray21);
        java.sql.PreparedStatement preparedStatement25 = null;
        java.sql.ParameterMetaData parameterMetaData26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        javax.sql.DataSource dataSource32 = asyncQueryRunner30.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner30.getDataSource();
        javax.sql.DataSource dataSource34 = asyncQueryRunner30.getDataSource();
        java.sql.PreparedStatement preparedStatement35 = null;
        java.time.Duration duration40 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration41 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration40);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement35, (java.lang.Object) 10, strArray42);
        boolean boolean44 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.sql.ParameterMetaData parameterMetaData46 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, false, executorService49);
        java.sql.PreparedStatement preparedStatement51 = null;
        java.sql.ParameterMetaData parameterMetaData52 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService55 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner56 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, true, executorService55);
        boolean boolean57 = asyncQueryRunner56.isPmdKnownBroken();
        javax.sql.DataSource dataSource58 = asyncQueryRunner56.getDataSource();
        javax.sql.DataSource dataSource59 = asyncQueryRunner56.getDataSource();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.time.Duration duration65 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration66 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration65);
        boolean boolean67 = statementConfiguration66.isMaxFieldSizeSet();
        java.time.Duration duration68 = statementConfiguration66.getQueryTimeoutDuration();
        boolean boolean69 = statementConfiguration66.isFetchSizeSet();
        boolean boolean70 = statementConfiguration66.isMaxFieldSizeSet();
        boolean boolean71 = statementConfiguration66.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService73);
        java.sql.PreparedStatement preparedStatement75 = null;
        javax.sql.DataSource dataSource76 = null;
        java.util.concurrent.ExecutorService executorService78 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner79 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource76, true, executorService78);
        boolean boolean80 = asyncQueryRunner79.isPmdKnownBroken();
        javax.sql.DataSource dataSource81 = asyncQueryRunner79.getDataSource();
        java.sql.PreparedStatement preparedStatement82 = null;
        javax.sql.DataSource dataSource84 = null;
        java.util.concurrent.ExecutorService executorService86 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner87 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource84, true, executorService86);
        boolean boolean88 = asyncQueryRunner87.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement89 = null;
        java.lang.Object obj90 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray91 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner87.fillStatementWithBean(preparedStatement89, obj90, propertyDescriptorArray91);
        asyncQueryRunner79.fillStatementWithBean(preparedStatement82, (java.lang.Object) 0, propertyDescriptorArray91);
        asyncQueryRunner74.fillStatement(preparedStatement75, (java.lang.Object[]) propertyDescriptorArray91);
        asyncQueryRunner56.fillStatementWithBean(preparedStatement60, (java.lang.Object) statementConfiguration66, propertyDescriptorArray91);
        asyncQueryRunner50.fillStatement(preparedStatement51, parameterMetaData52, (java.lang.Object[]) propertyDescriptorArray91);
        asyncQueryRunner30.fillStatement(preparedStatement45, parameterMetaData46, (java.lang.Object[]) propertyDescriptorArray91);
        asyncQueryRunner2.fillStatement(preparedStatement25, parameterMetaData26, (java.lang.Object[]) propertyDescriptorArray91);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertNull(dataSource34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertArrayEquals(strArray42, new java.lang.String[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(dataSource58);
        org.junit.Assert.assertNull(dataSource59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(dataSource81);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray91);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray91, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder12.maxRows((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.queryTimeout((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        javax.sql.DataSource dataSource19 = asyncQueryRunner17.getDataSource();
        java.sql.PreparedStatement preparedStatement20 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService24 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner25 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, true, executorService24);
        boolean boolean26 = asyncQueryRunner25.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.lang.Object obj28 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray29 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner25.fillStatementWithBean(preparedStatement27, obj28, propertyDescriptorArray29);
        asyncQueryRunner17.fillStatementWithBean(preparedStatement20, (java.lang.Object) 0, propertyDescriptorArray29);
        java.sql.PreparedStatement preparedStatement32 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, executorService34);
        javax.sql.DataSource dataSource36 = asyncQueryRunner35.getDataSource();
        java.sql.PreparedStatement preparedStatement37 = null;
        java.sql.ParameterMetaData parameterMetaData38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, false, executorService41);
        java.sql.PreparedStatement preparedStatement43 = null;
        java.sql.ParameterMetaData parameterMetaData44 = null;
        javax.sql.DataSource dataSource45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource45, true, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        javax.sql.DataSource dataSource50 = asyncQueryRunner48.getDataSource();
        javax.sql.DataSource dataSource51 = asyncQueryRunner48.getDataSource();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.time.Duration duration57 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration58 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration57);
        boolean boolean59 = statementConfiguration58.isMaxFieldSizeSet();
        java.time.Duration duration60 = statementConfiguration58.getQueryTimeoutDuration();
        boolean boolean61 = statementConfiguration58.isFetchSizeSet();
        boolean boolean62 = statementConfiguration58.isMaxFieldSizeSet();
        boolean boolean63 = statementConfiguration58.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService65 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner66 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService65);
        java.sql.PreparedStatement preparedStatement67 = null;
        javax.sql.DataSource dataSource68 = null;
        java.util.concurrent.ExecutorService executorService70 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner71 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource68, true, executorService70);
        boolean boolean72 = asyncQueryRunner71.isPmdKnownBroken();
        javax.sql.DataSource dataSource73 = asyncQueryRunner71.getDataSource();
        java.sql.PreparedStatement preparedStatement74 = null;
        javax.sql.DataSource dataSource76 = null;
        java.util.concurrent.ExecutorService executorService78 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner79 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource76, true, executorService78);
        boolean boolean80 = asyncQueryRunner79.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement81 = null;
        java.lang.Object obj82 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray83 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner79.fillStatementWithBean(preparedStatement81, obj82, propertyDescriptorArray83);
        asyncQueryRunner71.fillStatementWithBean(preparedStatement74, (java.lang.Object) 0, propertyDescriptorArray83);
        asyncQueryRunner66.fillStatement(preparedStatement67, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner48.fillStatementWithBean(preparedStatement52, (java.lang.Object) statementConfiguration58, propertyDescriptorArray83);
        asyncQueryRunner42.fillStatement(preparedStatement43, parameterMetaData44, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner35.fillStatement(preparedStatement37, parameterMetaData38, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner17.fillStatement(preparedStatement32, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner3.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture93 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray29);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray29, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource36);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(dataSource50);
        org.junit.Assert.assertNull(dataSource51);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(dataSource73);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray83);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray83, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) (-1), duration4);
        java.lang.Class<?> wildcardClass6 = statementConfiguration5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        java.time.Duration duration5 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder2.queryTimeout(duration5);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxFieldSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder8.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder8.maxRows((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 10);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder12.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder12.maxFieldSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration16 = builder12.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(statementConfiguration16);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray14);
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        java.sql.ParameterMetaData parameterMetaData25 = asyncQueryRunner21.getParameterMetaData(preparedStatement24);
        boolean boolean26 = asyncQueryRunner21.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.time.Duration duration32 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration33 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration32);
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        javax.sql.DataSource dataSource39 = asyncQueryRunner37.getDataSource();
        java.sql.PreparedStatement preparedStatement40 = null;
        javax.sql.DataSource dataSource42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource42, true, executorService44);
        boolean boolean46 = asyncQueryRunner45.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement47 = null;
        java.lang.Object obj48 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner45.fillStatementWithBean(preparedStatement47, obj48, propertyDescriptorArray49);
        asyncQueryRunner37.fillStatementWithBean(preparedStatement40, (java.lang.Object) 0, propertyDescriptorArray49);
        boolean boolean52 = asyncQueryRunner37.isPmdKnownBroken();
        boolean boolean53 = asyncQueryRunner37.isPmdKnownBroken();
        boolean boolean54 = asyncQueryRunner37.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement55 = null;
        java.sql.ParameterMetaData parameterMetaData56 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService57, queryRunner58);
        java.sql.PreparedStatement preparedStatement60 = null;
        java.sql.ParameterMetaData parameterMetaData61 = null;
        javax.sql.DataSource dataSource62 = null;
        java.util.concurrent.ExecutorService executorService63 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner64 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource62, executorService63);
        boolean boolean65 = asyncQueryRunner64.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement66 = null;
        java.sql.ParameterMetaData parameterMetaData67 = null;
        java.util.concurrent.ExecutorService executorService69 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner70 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService69);
        java.sql.PreparedStatement preparedStatement71 = null;
        javax.sql.DataSource dataSource72 = null;
        java.util.concurrent.ExecutorService executorService74 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner75 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource72, true, executorService74);
        boolean boolean76 = asyncQueryRunner75.isPmdKnownBroken();
        javax.sql.DataSource dataSource77 = asyncQueryRunner75.getDataSource();
        java.sql.PreparedStatement preparedStatement78 = null;
        javax.sql.DataSource dataSource80 = null;
        java.util.concurrent.ExecutorService executorService82 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner83 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource80, true, executorService82);
        boolean boolean84 = asyncQueryRunner83.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement85 = null;
        java.lang.Object obj86 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray87 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner83.fillStatementWithBean(preparedStatement85, obj86, propertyDescriptorArray87);
        asyncQueryRunner75.fillStatementWithBean(preparedStatement78, (java.lang.Object) 0, propertyDescriptorArray87);
        asyncQueryRunner70.fillStatement(preparedStatement71, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner64.fillStatement(preparedStatement66, parameterMetaData67, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner59.fillStatement(preparedStatement60, parameterMetaData61, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner37.fillStatement(preparedStatement55, parameterMetaData56, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement27, (java.lang.Object) 1, propertyDescriptorArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture95 = asyncQueryRunner3.update("hi!", (java.lang.Object[]) propertyDescriptorArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertNull(parameterMetaData25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(dataSource39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray49, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(dataSource77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray87);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray87, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean10 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int11 = statementConfiguration5.getFetchDirection();
        java.time.Duration duration12 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int13 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int14 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(duration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = asyncQueryRunner3.getParameterMetaData(preparedStatement12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource16 = null;
        java.util.concurrent.ExecutorService executorService18 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner19 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource16, true, executorService18);
        boolean boolean20 = asyncQueryRunner19.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner19.getDataSource();
        javax.sql.DataSource dataSource22 = asyncQueryRunner19.getDataSource();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.time.Duration duration28 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration29 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration28);
        boolean boolean30 = statementConfiguration29.isMaxFieldSizeSet();
        java.time.Duration duration31 = statementConfiguration29.getQueryTimeoutDuration();
        boolean boolean32 = statementConfiguration29.isFetchSizeSet();
        boolean boolean33 = statementConfiguration29.isMaxFieldSizeSet();
        boolean boolean34 = statementConfiguration29.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService36);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner37.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner19.fillStatementWithBean(preparedStatement23, (java.lang.Object) statementConfiguration29, propertyDescriptorArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture59 = asyncQueryRunner3.update("", (java.lang.Object[]) propertyDescriptorArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertNull(parameterMetaData13);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        asyncQueryRunner2.fillStatement(preparedStatement3, (java.lang.Object[]) propertyDescriptorArray19);
        javax.sql.DataSource dataSource23 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection24 = null;
        java.util.concurrent.ExecutorService executorService27 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner28 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService27);
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource30, true, executorService32);
        boolean boolean34 = asyncQueryRunner33.isPmdKnownBroken();
        javax.sql.DataSource dataSource35 = asyncQueryRunner33.getDataSource();
        java.sql.PreparedStatement preparedStatement36 = null;
        javax.sql.DataSource dataSource38 = null;
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource38, true, executorService40);
        boolean boolean42 = asyncQueryRunner41.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.lang.Object obj44 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray45 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner41.fillStatementWithBean(preparedStatement43, obj44, propertyDescriptorArray45);
        asyncQueryRunner33.fillStatementWithBean(preparedStatement36, (java.lang.Object) 0, propertyDescriptorArray45);
        asyncQueryRunner28.fillStatement(preparedStatement29, (java.lang.Object[]) propertyDescriptorArray45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture49 = asyncQueryRunner2.update(connection24, "hi!", (java.lang.Object[]) propertyDescriptorArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(dataSource35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray45);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray45, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchDirection((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder9.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder9.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder15.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder17.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder19.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration27 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration28 = statementConfiguration27.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder21.queryTimeout(duration28);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder8.queryTimeout(duration28);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        java.lang.Integer int6 = statementConfiguration5.getMaxFieldSize();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        java.time.Duration duration9 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.queryTimeout(duration9);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder8.queryTimeout((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass15 = builder8.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder7 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder9 = builder7.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder11 = builder7.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = builder7.fetchSize((java.lang.Integer) 0);
        java.time.Duration duration14 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.queryTimeout(duration14);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration16 = builder13.build();
        java.lang.Integer int17 = statementConfiguration16.getQueryTimeout();
        boolean boolean18 = statementConfiguration16.isQueryTimeoutSet();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "" };
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) statementConfiguration16, strArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Couldn't find bean property: class org.apache.commons.dbutils.StatementConfiguration hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(statementConfiguration16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertArrayEquals(strArray23, new java.lang.String[] { "hi!", "", "hi!", "" });
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        boolean boolean11 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int12 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, executorService12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        java.sql.PreparedStatement preparedStatement21 = null;
        java.sql.ParameterMetaData parameterMetaData22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        javax.sql.DataSource dataSource32 = asyncQueryRunner26.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.sql.ParameterMetaData parameterMetaData35 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        javax.sql.DataSource dataSource41 = asyncQueryRunner39.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.lang.Object obj50 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner47.fillStatementWithBean(preparedStatement49, obj50, propertyDescriptorArray51);
        asyncQueryRunner39.fillStatementWithBean(preparedStatement42, (java.lang.Object) 0, propertyDescriptorArray51);
        asyncQueryRunner26.fillStatement(preparedStatement34, parameterMetaData35, (java.lang.Object[]) propertyDescriptorArray51);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner26.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner20.fillStatement(preparedStatement21, parameterMetaData22, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner13.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement10, (java.lang.Object[]) propertyDescriptorArray71);
        java.sql.Connection connection78 = null;
        java.time.Duration duration84 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration85 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration84);
        boolean boolean86 = statementConfiguration85.isMaxRowsSet();
        java.lang.Integer int87 = statementConfiguration85.getQueryTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture88 = asyncQueryRunner3.update(connection78, "", (java.lang.Object) int87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray51, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(int87);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        boolean boolean8 = statementConfiguration5.isMaxRowsSet();
        boolean boolean9 = statementConfiguration5.isFetchSizeSet();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        java.lang.Integer int8 = statementConfiguration5.getMaxFieldSize();
        boolean boolean9 = statementConfiguration5.isMaxRowsSet();
        java.time.Duration duration10 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int11 = statementConfiguration5.getQueryTimeout();
        java.time.Duration duration12 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int13 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(duration10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(duration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        java.sql.PreparedStatement preparedStatement32 = null;
        javax.sql.DataSource dataSource33 = null;
        java.util.concurrent.ExecutorService executorService34 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner35 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource33, executorService34);
        boolean boolean36 = asyncQueryRunner35.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement37 = null;
        java.sql.ParameterMetaData parameterMetaData38 = null;
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService40);
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource43 = null;
        java.util.concurrent.ExecutorService executorService45 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner46 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource43, true, executorService45);
        boolean boolean47 = asyncQueryRunner46.isPmdKnownBroken();
        javax.sql.DataSource dataSource48 = asyncQueryRunner46.getDataSource();
        java.sql.PreparedStatement preparedStatement49 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement56 = null;
        java.lang.Object obj57 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray58 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner54.fillStatementWithBean(preparedStatement56, obj57, propertyDescriptorArray58);
        asyncQueryRunner46.fillStatementWithBean(preparedStatement49, (java.lang.Object) 0, propertyDescriptorArray58);
        asyncQueryRunner41.fillStatement(preparedStatement42, (java.lang.Object[]) propertyDescriptorArray58);
        asyncQueryRunner35.fillStatement(preparedStatement37, parameterMetaData38, (java.lang.Object[]) propertyDescriptorArray58);
        asyncQueryRunner26.fillStatement(preparedStatement32, (java.lang.Object[]) propertyDescriptorArray58);
        asyncQueryRunner3.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray58);
        java.lang.Object[][] objArray66 = new java.lang.Object[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture67 = asyncQueryRunner3.batch("", objArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(dataSource48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray58);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray58, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertArrayEquals(objArray66, new java.lang.Object[][] {});
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean7 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int8 = statementConfiguration5.getMaxRows();
        java.lang.Integer int9 = statementConfiguration5.getFetchSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        javax.sql.DataSource dataSource11 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource12 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.time.Duration duration18 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration19 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration18);
        boolean boolean20 = statementConfiguration19.isMaxFieldSizeSet();
        java.time.Duration duration21 = statementConfiguration19.getQueryTimeoutDuration();
        boolean boolean22 = statementConfiguration19.isFetchSizeSet();
        boolean boolean23 = statementConfiguration19.isMaxFieldSizeSet();
        boolean boolean24 = statementConfiguration19.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService26);
        java.sql.PreparedStatement preparedStatement28 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        javax.sql.DataSource dataSource34 = asyncQueryRunner32.getDataSource();
        java.sql.PreparedStatement preparedStatement35 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement42 = null;
        java.lang.Object obj43 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray44 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner40.fillStatementWithBean(preparedStatement42, obj43, propertyDescriptorArray44);
        asyncQueryRunner32.fillStatementWithBean(preparedStatement35, (java.lang.Object) 0, propertyDescriptorArray44);
        asyncQueryRunner27.fillStatement(preparedStatement28, (java.lang.Object[]) propertyDescriptorArray44);
        asyncQueryRunner9.fillStatementWithBean(preparedStatement13, (java.lang.Object) statementConfiguration19, propertyDescriptorArray44);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture51 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertNull(dataSource12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(dataSource34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray44);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray44, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        boolean boolean11 = statementConfiguration5.isMaxRowsSet();
        boolean boolean12 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) (-1), (java.lang.Integer) 10);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean7 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, executorService12);
        javax.sql.DataSource dataSource14 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.sql.ParameterMetaData parameterMetaData16 = null;
        javax.sql.DataSource dataSource17 = null;
        java.util.concurrent.ExecutorService executorService19 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner20 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource17, true, executorService19);
        java.sql.PreparedStatement preparedStatement21 = null;
        java.sql.ParameterMetaData parameterMetaData22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement28 = null;
        java.lang.Object obj29 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray30 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner26.fillStatementWithBean(preparedStatement28, obj29, propertyDescriptorArray30);
        javax.sql.DataSource dataSource32 = asyncQueryRunner26.getDataSource();
        javax.sql.DataSource dataSource33 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.sql.ParameterMetaData parameterMetaData35 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        javax.sql.DataSource dataSource41 = asyncQueryRunner39.getDataSource();
        java.sql.PreparedStatement preparedStatement42 = null;
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, true, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.lang.Object obj50 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray51 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner47.fillStatementWithBean(preparedStatement49, obj50, propertyDescriptorArray51);
        asyncQueryRunner39.fillStatementWithBean(preparedStatement42, (java.lang.Object) 0, propertyDescriptorArray51);
        asyncQueryRunner26.fillStatement(preparedStatement34, parameterMetaData35, (java.lang.Object[]) propertyDescriptorArray51);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner26.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner20.fillStatement(preparedStatement21, parameterMetaData22, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner13.fillStatement(preparedStatement15, parameterMetaData16, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement10, (java.lang.Object[]) propertyDescriptorArray71);
        javax.sql.DataSource dataSource78 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource79 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource80 = asyncQueryRunner3.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture82 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray30);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray30, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray51);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray51, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource78);
        org.junit.Assert.assertNull(dataSource79);
        org.junit.Assert.assertNull(dataSource80);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray21);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray21);
        boolean boolean25 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.time.Duration duration31 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration32 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration31);
        boolean boolean33 = statementConfiguration32.isMaxFieldSizeSet();
        java.lang.Integer int34 = statementConfiguration32.getMaxFieldSize();
        boolean boolean35 = statementConfiguration32.isFetchSizeSet();
        java.time.Duration duration36 = statementConfiguration32.getQueryTimeoutDuration();
        boolean boolean37 = statementConfiguration32.isQueryTimeoutSet();
        boolean boolean38 = statementConfiguration32.isFetchDirectionSet();
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService40 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner41 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, executorService40);
        boolean boolean42 = asyncQueryRunner41.isPmdKnownBroken();
        boolean boolean43 = asyncQueryRunner41.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement44 = null;
        java.sql.ParameterMetaData parameterMetaData45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService48 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner49 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, true, executorService48);
        boolean boolean50 = asyncQueryRunner49.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement51 = null;
        java.sql.ParameterMetaData parameterMetaData52 = null;
        javax.sql.DataSource dataSource53 = null;
        java.util.concurrent.ExecutorService executorService55 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner56 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource53, true, executorService55);
        boolean boolean57 = asyncQueryRunner56.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement58 = null;
        java.lang.Object obj59 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray60 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner56.fillStatementWithBean(preparedStatement58, obj59, propertyDescriptorArray60);
        asyncQueryRunner49.fillStatement(preparedStatement51, parameterMetaData52, (java.lang.Object[]) propertyDescriptorArray60);
        asyncQueryRunner41.fillStatement(preparedStatement44, parameterMetaData45, (java.lang.Object[]) propertyDescriptorArray60);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement26, (java.lang.Object) boolean38, propertyDescriptorArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray60);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray60, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 1, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        java.lang.Integer int6 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, (java.lang.Integer) (-1));
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration9 = builder6.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(statementConfiguration9);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.PreparedStatement preparedStatement12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, false, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.sql.ParameterMetaData parameterMetaData26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner23.fillStatement(preparedStatement25, parameterMetaData26, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner16.fillStatement(preparedStatement18, parameterMetaData19, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement12, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement39 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder40.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = builder40.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.maxRows((java.lang.Integer) 10);
        java.time.Duration duration47 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder44.queryTimeout(duration47);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder44.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder52 = builder50.fetchDirection((java.lang.Integer) 10);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement39, (java.lang.Object) 10, strArray53);
        java.lang.Object[] objArray56 = new java.lang.Object[] {};
        java.lang.Object[] objArray57 = new java.lang.Object[] {};
        java.lang.Object[] objArray58 = new java.lang.Object[] {};
        java.lang.Object[][] objArray59 = new java.lang.Object[][] { objArray56, objArray57, objArray58 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture60 = asyncQueryRunner3.batch("hi!", objArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertArrayEquals(strArray53, new java.lang.String[] {});
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertArrayEquals(objArray56, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertArrayEquals(objArray57, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertArrayEquals(objArray58, new java.lang.Object[] {});
        org.junit.Assert.assertNotNull(objArray59);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = builder4.build();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration6 = builder4.build();
        java.lang.Integer int7 = statementConfiguration6.getMaxRows();
        boolean boolean8 = statementConfiguration6.isFetchDirectionSet();
        boolean boolean9 = statementConfiguration6.isQueryTimeoutSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(statementConfiguration5);
        org.junit.Assert.assertNotNull(statementConfiguration6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture23 = asyncQueryRunner3.update(connection21, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.lang.Object obj4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture5 = asyncQueryRunner2.update("hi!", obj4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, executorService23);
        javax.sql.DataSource dataSource25 = asyncQueryRunner24.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.sql.ParameterMetaData parameterMetaData27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        java.sql.PreparedStatement preparedStatement32 = null;
        java.sql.ParameterMetaData parameterMetaData33 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement39 = null;
        java.lang.Object obj40 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner37.fillStatementWithBean(preparedStatement39, obj40, propertyDescriptorArray41);
        javax.sql.DataSource dataSource43 = asyncQueryRunner37.getDataSource();
        javax.sql.DataSource dataSource44 = asyncQueryRunner37.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        java.sql.ParameterMetaData parameterMetaData46 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        javax.sql.DataSource dataSource52 = asyncQueryRunner50.getDataSource();
        java.sql.PreparedStatement preparedStatement53 = null;
        javax.sql.DataSource dataSource55 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner58 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource55, true, executorService57);
        boolean boolean59 = asyncQueryRunner58.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.lang.Object obj61 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner58.fillStatementWithBean(preparedStatement60, obj61, propertyDescriptorArray62);
        asyncQueryRunner50.fillStatementWithBean(preparedStatement53, (java.lang.Object) 0, propertyDescriptorArray62);
        asyncQueryRunner37.fillStatement(preparedStatement45, parameterMetaData46, (java.lang.Object[]) propertyDescriptorArray62);
        java.sql.PreparedStatement preparedStatement66 = null;
        javax.sql.DataSource dataSource67 = null;
        java.util.concurrent.ExecutorService executorService69 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner70 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource67, true, executorService69);
        boolean boolean71 = asyncQueryRunner70.isPmdKnownBroken();
        javax.sql.DataSource dataSource72 = asyncQueryRunner70.getDataSource();
        java.sql.PreparedStatement preparedStatement73 = null;
        javax.sql.DataSource dataSource75 = null;
        java.util.concurrent.ExecutorService executorService77 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner78 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource75, true, executorService77);
        boolean boolean79 = asyncQueryRunner78.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement80 = null;
        java.lang.Object obj81 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray82 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner78.fillStatementWithBean(preparedStatement80, obj81, propertyDescriptorArray82);
        asyncQueryRunner70.fillStatementWithBean(preparedStatement73, (java.lang.Object) 0, propertyDescriptorArray82);
        asyncQueryRunner37.fillStatement(preparedStatement66, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner31.fillStatement(preparedStatement32, parameterMetaData33, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner24.fillStatement(preparedStatement26, parameterMetaData27, (java.lang.Object[]) propertyDescriptorArray82);
        asyncQueryRunner3.fillStatement(preparedStatement21, (java.lang.Object[]) propertyDescriptorArray82);
        boolean boolean89 = asyncQueryRunner3.isPmdKnownBroken();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray41, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource43);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray62, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(dataSource72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray82);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray82, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.queryTimeout((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        boolean boolean43 = statementConfiguration13.isQueryTimeoutSet();
        boolean boolean44 = statementConfiguration13.isFetchDirectionSet();
        java.lang.Class<?> wildcardClass45 = statementConfiguration13.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 100, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean9 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int10 = statementConfiguration5.getQueryTimeout();
        boolean boolean11 = statementConfiguration5.isFetchDirectionSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean10 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int11 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int12 = statementConfiguration5.getFetchSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray21);
        asyncQueryRunner2.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray21);
        java.sql.PreparedStatement preparedStatement25 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder30.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration35 = builder34.build();
        java.time.Duration duration36 = statementConfiguration35.getQueryTimeoutDuration();
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService39 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner40 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, true, executorService39);
        boolean boolean41 = asyncQueryRunner40.isPmdKnownBroken();
        javax.sql.DataSource dataSource42 = asyncQueryRunner40.getDataSource();
        java.sql.PreparedStatement preparedStatement43 = null;
        java.sql.ParameterMetaData parameterMetaData44 = asyncQueryRunner40.getParameterMetaData(preparedStatement43);
        boolean boolean45 = asyncQueryRunner40.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement46 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder49 = builder47.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = builder49.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration52 = builder51.build();
        java.time.Duration duration53 = statementConfiguration52.getQueryTimeoutDuration();
        javax.sql.DataSource dataSource54 = null;
        java.util.concurrent.ExecutorService executorService56 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner57 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource54, true, executorService56);
        boolean boolean58 = asyncQueryRunner57.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement59 = null;
        java.lang.Object obj60 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner57.fillStatementWithBean(preparedStatement59, obj60, propertyDescriptorArray61);
        javax.sql.DataSource dataSource63 = asyncQueryRunner57.getDataSource();
        javax.sql.DataSource dataSource64 = asyncQueryRunner57.getDataSource();
        java.sql.PreparedStatement preparedStatement65 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration71 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 100);
        javax.sql.DataSource dataSource72 = null;
        java.util.concurrent.ExecutorService executorService74 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner75 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource72, true, executorService74);
        boolean boolean76 = asyncQueryRunner75.isPmdKnownBroken();
        javax.sql.DataSource dataSource77 = asyncQueryRunner75.getDataSource();
        javax.sql.DataSource dataSource78 = asyncQueryRunner75.getDataSource();
        javax.sql.DataSource dataSource79 = asyncQueryRunner75.getDataSource();
        java.sql.PreparedStatement preparedStatement80 = null;
        java.time.Duration duration85 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration86 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration85);
        java.lang.String[] strArray87 = new java.lang.String[] {};
        asyncQueryRunner75.fillStatementWithBean(preparedStatement80, (java.lang.Object) 10, strArray87);
        asyncQueryRunner57.fillStatementWithBean(preparedStatement65, (java.lang.Object) statementConfiguration71, strArray87);
        asyncQueryRunner40.fillStatementWithBean(preparedStatement46, (java.lang.Object) statementConfiguration52, strArray87);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement25, (java.lang.Object) statementConfiguration35, strArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(statementConfiguration35);
        org.junit.Assert.assertNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(dataSource42);
        org.junit.Assert.assertNull(parameterMetaData44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(statementConfiguration52);
        org.junit.Assert.assertNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray61, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource63);
        org.junit.Assert.assertNull(dataSource64);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(dataSource77);
        org.junit.Assert.assertNull(dataSource78);
        org.junit.Assert.assertNull(dataSource79);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertArrayEquals(strArray87, new java.lang.String[] {});
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture21 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection4 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.maxRows((java.lang.Integer) 10);
        java.time.Duration duration17 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.queryTimeout(duration17);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration21 = builder20.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder20.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder20.queryTimeout((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder26.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder30.maxRows((java.lang.Integer) 10);
        java.time.Duration duration33 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder32.queryTimeout(duration33);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration40 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration41 = statementConfiguration40.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder34.queryTimeout(duration41);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder25.queryTimeout(duration41);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration44 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 100, duration41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture45 = asyncQueryRunner2.update(connection4, "", (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(statementConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement39 = null;
        java.sql.ParameterMetaData parameterMetaData40 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService41, queryRunner42);
        java.sql.PreparedStatement preparedStatement44 = null;
        java.sql.ParameterMetaData parameterMetaData45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement50 = null;
        java.sql.ParameterMetaData parameterMetaData51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService53);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner54.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner48.fillStatement(preparedStatement50, parameterMetaData51, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner43.fillStatement(preparedStatement44, parameterMetaData45, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement39, parameterMetaData40, (java.lang.Object[]) propertyDescriptorArray71);
        java.sql.PreparedStatement preparedStatement78 = null;
        java.sql.ParameterMetaData parameterMetaData79 = asyncQueryRunner3.getParameterMetaData(preparedStatement78);
        java.sql.Connection connection80 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder82 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder84 = builder82.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder86 = builder82.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder88 = builder86.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder90 = builder86.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration91 = builder86.build();
        boolean boolean92 = statementConfiguration91.isMaxFieldSizeSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture93 = asyncQueryRunner3.update(connection80, "", (java.lang.Object) statementConfiguration91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(parameterMetaData79);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(statementConfiguration91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration1 = builder0.build();
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration2 = builder0.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass5 = builder0.getClass();
        org.junit.Assert.assertNotNull(statementConfiguration1);
        org.junit.Assert.assertNotNull(statementConfiguration2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean10 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean11 = statementConfiguration5.isFetchDirectionSet();
        java.time.Duration duration12 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean13 = statementConfiguration5.isMaxFieldSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration7 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean8 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        javax.sql.DataSource dataSource43 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement44 = null;
        java.time.Duration duration49 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration50 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration49);
        java.lang.Integer int51 = statementConfiguration50.getQueryTimeout();
        javax.sql.DataSource dataSource52 = null;
        java.util.concurrent.ExecutorService executorService54 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner55 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource52, true, executorService54);
        boolean boolean56 = asyncQueryRunner55.isPmdKnownBroken();
        javax.sql.DataSource dataSource57 = asyncQueryRunner55.getDataSource();
        javax.sql.DataSource dataSource58 = asyncQueryRunner55.getDataSource();
        javax.sql.DataSource dataSource59 = asyncQueryRunner55.getDataSource();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.time.Duration duration65 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration66 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration65);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        asyncQueryRunner55.fillStatementWithBean(preparedStatement60, (java.lang.Object) 10, strArray67);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner3.fillStatementWithBean(preparedStatement44, (java.lang.Object) int51, strArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"bean\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource43);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(dataSource57);
        org.junit.Assert.assertNull(dataSource58);
        org.junit.Assert.assertNull(dataSource59);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertArrayEquals(strArray67, new java.lang.String[] {});
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        javax.sql.DataSource dataSource18 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource21 = null;
        java.util.concurrent.ExecutorService executorService23 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner24 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource21, true, executorService23);
        boolean boolean25 = asyncQueryRunner24.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.lang.Object obj27 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray28 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner24.fillStatementWithBean(preparedStatement26, obj27, propertyDescriptorArray28);
        asyncQueryRunner16.fillStatementWithBean(preparedStatement19, (java.lang.Object) 0, propertyDescriptorArray28);
        asyncQueryRunner3.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray28);
        java.sql.Connection connection32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture34 = asyncQueryRunner3.update(connection32, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(dataSource18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray28);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray28, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean7 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int8 = statementConfiguration5.getMaxRows();
        java.lang.Integer int9 = statementConfiguration5.getFetchSize();
        boolean boolean10 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean11 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int12 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource19 = asyncQueryRunner3.getDataSource();
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService22);
        java.sql.PreparedStatement preparedStatement24 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration36 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.queryTimeout(duration36);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder37.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder37.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder37.maxRows((java.lang.Integer) (-1));
        javax.sql.DataSource dataSource44 = null;
        java.util.concurrent.ExecutorService executorService46 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner47 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource44, false, executorService46);
        boolean boolean48 = asyncQueryRunner47.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement49 = null;
        java.sql.ParameterMetaData parameterMetaData50 = null;
        javax.sql.DataSource dataSource51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource51, true, executorService53);
        boolean boolean55 = asyncQueryRunner54.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement56 = null;
        java.sql.ParameterMetaData parameterMetaData57 = null;
        javax.sql.DataSource dataSource58 = null;
        java.util.concurrent.ExecutorService executorService60 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner61 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource58, true, executorService60);
        boolean boolean62 = asyncQueryRunner61.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement63 = null;
        java.lang.Object obj64 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray65 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner61.fillStatementWithBean(preparedStatement63, obj64, propertyDescriptorArray65);
        asyncQueryRunner54.fillStatement(preparedStatement56, parameterMetaData57, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner47.fillStatement(preparedStatement49, parameterMetaData50, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement24, (java.lang.Object) (-1), propertyDescriptorArray65);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture70 = asyncQueryRunner3.update("hi!", (java.lang.Object[]) propertyDescriptorArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray65);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray65, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        javax.sql.DataSource dataSource4 = asyncQueryRunner3.getDataSource();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture6 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource4);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray21);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray21);
        java.sql.PreparedStatement preparedStatement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData26 = asyncQueryRunner3.getParameterMetaData(preparedStatement25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 10);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = null;
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        asyncQueryRunner10.fillStatement(preparedStatement12, parameterMetaData13, (java.lang.Object[]) propertyDescriptorArray21);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray21);
        boolean boolean25 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement26 = null;
        java.sql.ParameterMetaData parameterMetaData27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        javax.sql.DataSource dataSource33 = asyncQueryRunner31.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.lang.Object obj42 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner39.fillStatementWithBean(preparedStatement41, obj42, propertyDescriptorArray43);
        asyncQueryRunner31.fillStatementWithBean(preparedStatement34, (java.lang.Object) 0, propertyDescriptorArray43);
        asyncQueryRunner3.fillStatement(preparedStatement26, parameterMetaData27, (java.lang.Object[]) propertyDescriptorArray43);
        java.sql.PreparedStatement preparedStatement47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData48 = asyncQueryRunner3.getParameterMetaData(preparedStatement47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray43, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = asyncQueryRunner3.getParameterMetaData(preparedStatement5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture8 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(parameterMetaData6);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        boolean boolean8 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean9 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource10 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = asyncQueryRunner3.getParameterMetaData(preparedStatement11);
        javax.sql.DataSource dataSource14 = null;
        java.util.concurrent.ExecutorService executorService16 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner17 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource14, true, executorService16);
        boolean boolean18 = asyncQueryRunner17.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.lang.Object obj20 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray21 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner17.fillStatementWithBean(preparedStatement19, obj20, propertyDescriptorArray21);
        javax.sql.DataSource dataSource23 = asyncQueryRunner17.getDataSource();
        javax.sql.DataSource dataSource24 = asyncQueryRunner17.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.sql.ParameterMetaData parameterMetaData26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        javax.sql.DataSource dataSource32 = asyncQueryRunner30.getDataSource();
        java.sql.PreparedStatement preparedStatement33 = null;
        javax.sql.DataSource dataSource35 = null;
        java.util.concurrent.ExecutorService executorService37 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner38 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource35, true, executorService37);
        boolean boolean39 = asyncQueryRunner38.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement40 = null;
        java.lang.Object obj41 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray42 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner38.fillStatementWithBean(preparedStatement40, obj41, propertyDescriptorArray42);
        asyncQueryRunner30.fillStatementWithBean(preparedStatement33, (java.lang.Object) 0, propertyDescriptorArray42);
        asyncQueryRunner17.fillStatement(preparedStatement25, parameterMetaData26, (java.lang.Object[]) propertyDescriptorArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture46 = asyncQueryRunner3.update("", (java.lang.Object[]) propertyDescriptorArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertNull(parameterMetaData12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray21);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray21, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(dataSource32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray42);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray42, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder12.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder12.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration21 = builder20.build();
        boolean boolean22 = statementConfiguration21.isMaxRowsSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(statementConfiguration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource19 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.sql.ParameterMetaData parameterMetaData21 = null;
        java.lang.Object[] objArray22 = null;
        asyncQueryRunner3.fillStatement(preparedStatement20, parameterMetaData21, objArray22);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder27.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder29.fetchDirection((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture34 = asyncQueryRunner3.update("", (java.lang.Object) builder29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 10);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder8.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder8.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder16.maxFieldSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.maxRows((java.lang.Integer) 10);
        java.time.Duration duration32 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder29.queryTimeout(duration32);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder29.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder40 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder42 = builder40.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = builder40.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.maxRows((java.lang.Integer) 10);
        java.time.Duration duration47 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder46.queryTimeout(duration47);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder48.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration51 = builder50.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder50.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder55 = builder50.queryTimeout((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder58 = builder56.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder60 = builder56.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder62 = builder60.maxRows((java.lang.Integer) 10);
        java.time.Duration duration63 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder64 = builder62.queryTimeout(duration63);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration70 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration71 = statementConfiguration70.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder72 = builder64.queryTimeout(duration71);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder73 = builder55.queryTimeout(duration71);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration74 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 0, duration71);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder75 = builder29.queryTimeout(duration71);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration76 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0, duration71);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder77 = builder20.queryTimeout(duration71);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration78 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) (-1), (java.lang.Integer) 0, (java.lang.Integer) (-1), duration71);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(statementConfiguration51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, false, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.sql.ParameterMetaData parameterMetaData6 = asyncQueryRunner3.getParameterMetaData(preparedStatement5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean10 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration11 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int12 = statementConfiguration5.getFetchDirection();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 10, (java.lang.Integer) 0, (java.lang.Integer) 10);
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        boolean boolean8 = statementConfiguration5.isQueryTimeoutSet();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 0, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) (-1));
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean21 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection22 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder24 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder26 = builder24.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder24.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder24.fetchSize((java.lang.Integer) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture31 = asyncQueryRunner3.update(connection22, "hi!", (java.lang.Object) builder30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean21 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.Connection connection22 = null;
        java.lang.Object[][] objArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<int[]> intArrayFuture25 = asyncQueryRunner3.batch(connection22, "hi!", objArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement39 = null;
        java.sql.ParameterMetaData parameterMetaData40 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService41, queryRunner42);
        java.sql.PreparedStatement preparedStatement44 = null;
        java.sql.ParameterMetaData parameterMetaData45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement50 = null;
        java.sql.ParameterMetaData parameterMetaData51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService53);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner54.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner48.fillStatement(preparedStatement50, parameterMetaData51, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner43.fillStatement(preparedStatement44, parameterMetaData45, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement39, parameterMetaData40, (java.lang.Object[]) propertyDescriptorArray71);
        java.sql.Connection connection78 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration85 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration86 = statementConfiguration85.getQueryTimeoutDuration();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture87 = asyncQueryRunner3.update(connection78, "hi!", (java.lang.Object) statementConfiguration85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(duration86);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, true, executorService12);
        boolean boolean14 = asyncQueryRunner13.isPmdKnownBroken();
        javax.sql.DataSource dataSource15 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement16 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.lang.Object obj24 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray25 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner21.fillStatementWithBean(preparedStatement23, obj24, propertyDescriptorArray25);
        asyncQueryRunner13.fillStatementWithBean(preparedStatement16, (java.lang.Object) 0, propertyDescriptorArray25);
        asyncQueryRunner8.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray25);
        asyncQueryRunner2.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray25);
        java.sql.PreparedStatement preparedStatement30 = null;
        java.util.concurrent.ExecutorService executorService32 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner33 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService32);
        java.sql.PreparedStatement preparedStatement34 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder35.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder39.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder41.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder41.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration46 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = builder45.queryTimeout(duration46);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder49 = builder47.fetchSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder51 = builder47.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder47.maxRows((java.lang.Integer) (-1));
        javax.sql.DataSource dataSource54 = null;
        java.util.concurrent.ExecutorService executorService56 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner57 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource54, false, executorService56);
        boolean boolean58 = asyncQueryRunner57.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement59 = null;
        java.sql.ParameterMetaData parameterMetaData60 = null;
        javax.sql.DataSource dataSource61 = null;
        java.util.concurrent.ExecutorService executorService63 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner64 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource61, true, executorService63);
        boolean boolean65 = asyncQueryRunner64.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement66 = null;
        java.sql.ParameterMetaData parameterMetaData67 = null;
        javax.sql.DataSource dataSource68 = null;
        java.util.concurrent.ExecutorService executorService70 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner71 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource68, true, executorService70);
        boolean boolean72 = asyncQueryRunner71.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement73 = null;
        java.lang.Object obj74 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray75 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner71.fillStatementWithBean(preparedStatement73, obj74, propertyDescriptorArray75);
        asyncQueryRunner64.fillStatement(preparedStatement66, parameterMetaData67, (java.lang.Object[]) propertyDescriptorArray75);
        asyncQueryRunner57.fillStatement(preparedStatement59, parameterMetaData60, (java.lang.Object[]) propertyDescriptorArray75);
        asyncQueryRunner33.fillStatementWithBean(preparedStatement34, (java.lang.Object) (-1), propertyDescriptorArray75);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement30, (java.lang.Object[]) propertyDescriptorArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray25);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray25, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray75);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray75, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection42 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder44 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder46 = builder44.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder44.fetchDirection((java.lang.Integer) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture49 = asyncQueryRunner3.update(connection42, "", (java.lang.Object) builder44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture10 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = asyncQueryRunner3.getParameterMetaData(preparedStatement19);
        java.sql.PreparedStatement preparedStatement21 = null;
        javax.sql.DataSource dataSource22 = null;
        java.util.concurrent.ExecutorService executorService24 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner25 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource22, true, executorService24);
        boolean boolean26 = asyncQueryRunner25.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement27 = null;
        java.sql.ParameterMetaData parameterMetaData28 = null;
        javax.sql.DataSource dataSource29 = null;
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource29, true, executorService31);
        boolean boolean33 = asyncQueryRunner32.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement34 = null;
        java.lang.Object obj35 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray36 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner32.fillStatementWithBean(preparedStatement34, obj35, propertyDescriptorArray36);
        javax.sql.DataSource dataSource38 = asyncQueryRunner32.getDataSource();
        javax.sql.DataSource dataSource39 = asyncQueryRunner32.getDataSource();
        java.sql.PreparedStatement preparedStatement40 = null;
        java.sql.ParameterMetaData parameterMetaData41 = null;
        javax.sql.DataSource dataSource42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource42, true, executorService44);
        boolean boolean46 = asyncQueryRunner45.isPmdKnownBroken();
        javax.sql.DataSource dataSource47 = asyncQueryRunner45.getDataSource();
        java.sql.PreparedStatement preparedStatement48 = null;
        javax.sql.DataSource dataSource50 = null;
        java.util.concurrent.ExecutorService executorService52 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner53 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource50, true, executorService52);
        boolean boolean54 = asyncQueryRunner53.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement55 = null;
        java.lang.Object obj56 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray57 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner53.fillStatementWithBean(preparedStatement55, obj56, propertyDescriptorArray57);
        asyncQueryRunner45.fillStatementWithBean(preparedStatement48, (java.lang.Object) 0, propertyDescriptorArray57);
        asyncQueryRunner32.fillStatement(preparedStatement40, parameterMetaData41, (java.lang.Object[]) propertyDescriptorArray57);
        boolean boolean61 = asyncQueryRunner32.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement62 = null;
        java.sql.ParameterMetaData parameterMetaData63 = null;
        java.util.concurrent.ExecutorService executorService65 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner66 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService65);
        java.sql.PreparedStatement preparedStatement67 = null;
        javax.sql.DataSource dataSource68 = null;
        java.util.concurrent.ExecutorService executorService70 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner71 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource68, true, executorService70);
        boolean boolean72 = asyncQueryRunner71.isPmdKnownBroken();
        javax.sql.DataSource dataSource73 = asyncQueryRunner71.getDataSource();
        java.sql.PreparedStatement preparedStatement74 = null;
        javax.sql.DataSource dataSource76 = null;
        java.util.concurrent.ExecutorService executorService78 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner79 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource76, true, executorService78);
        boolean boolean80 = asyncQueryRunner79.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement81 = null;
        java.lang.Object obj82 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray83 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner79.fillStatementWithBean(preparedStatement81, obj82, propertyDescriptorArray83);
        asyncQueryRunner71.fillStatementWithBean(preparedStatement74, (java.lang.Object) 0, propertyDescriptorArray83);
        asyncQueryRunner66.fillStatement(preparedStatement67, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner32.fillStatement(preparedStatement62, parameterMetaData63, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner25.fillStatement(preparedStatement27, parameterMetaData28, (java.lang.Object[]) propertyDescriptorArray83);
        asyncQueryRunner3.fillStatement(preparedStatement21, (java.lang.Object[]) propertyDescriptorArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture91 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(parameterMetaData20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray36);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray36, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource38);
        org.junit.Assert.assertNull(dataSource39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(dataSource47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray57);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray57, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(dataSource73);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray83);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray83, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        boolean boolean5 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection6 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration12);
        boolean boolean14 = statementConfiguration13.isMaxRowsSet();
        java.lang.Integer int15 = statementConfiguration13.getQueryTimeout();
        java.lang.Integer int16 = statementConfiguration13.getMaxFieldSize();
        boolean boolean17 = statementConfiguration13.isMaxRowsSet();
        java.lang.Integer int18 = statementConfiguration13.getMaxFieldSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture19 = asyncQueryRunner2.update(connection6, "hi!", (java.lang.Object) statementConfiguration13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder2.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxFieldSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        boolean boolean7 = statementConfiguration5.isFetchDirectionSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource4 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement5 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.maxRows((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder14.fetchDirection((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass19 = builder14.getClass();
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        java.sql.PreparedStatement preparedStatement24 = null;
        java.sql.ParameterMetaData parameterMetaData25 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement31 = null;
        java.lang.Object obj32 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray33 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner29.fillStatementWithBean(preparedStatement31, obj32, propertyDescriptorArray33);
        javax.sql.DataSource dataSource35 = asyncQueryRunner29.getDataSource();
        javax.sql.DataSource dataSource36 = asyncQueryRunner29.getDataSource();
        java.sql.PreparedStatement preparedStatement37 = null;
        java.sql.ParameterMetaData parameterMetaData38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner29.fillStatement(preparedStatement37, parameterMetaData38, (java.lang.Object[]) propertyDescriptorArray54);
        asyncQueryRunner23.fillStatement(preparedStatement24, parameterMetaData25, (java.lang.Object[]) propertyDescriptorArray54);
        java.sql.PreparedStatement preparedStatement59 = null;
        java.sql.ParameterMetaData parameterMetaData60 = null;
        java.util.concurrent.ExecutorService executorService61 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner62 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner63 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService61, queryRunner62);
        java.sql.PreparedStatement preparedStatement64 = null;
        java.sql.ParameterMetaData parameterMetaData65 = null;
        javax.sql.DataSource dataSource66 = null;
        java.util.concurrent.ExecutorService executorService67 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner68 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource66, executorService67);
        boolean boolean69 = asyncQueryRunner68.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement70 = null;
        java.sql.ParameterMetaData parameterMetaData71 = null;
        java.util.concurrent.ExecutorService executorService73 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner74 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService73);
        java.sql.PreparedStatement preparedStatement75 = null;
        javax.sql.DataSource dataSource76 = null;
        java.util.concurrent.ExecutorService executorService78 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner79 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource76, true, executorService78);
        boolean boolean80 = asyncQueryRunner79.isPmdKnownBroken();
        javax.sql.DataSource dataSource81 = asyncQueryRunner79.getDataSource();
        java.sql.PreparedStatement preparedStatement82 = null;
        javax.sql.DataSource dataSource84 = null;
        java.util.concurrent.ExecutorService executorService86 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner87 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource84, true, executorService86);
        boolean boolean88 = asyncQueryRunner87.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement89 = null;
        java.lang.Object obj90 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray91 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner87.fillStatementWithBean(preparedStatement89, obj90, propertyDescriptorArray91);
        asyncQueryRunner79.fillStatementWithBean(preparedStatement82, (java.lang.Object) 0, propertyDescriptorArray91);
        asyncQueryRunner74.fillStatement(preparedStatement75, (java.lang.Object[]) propertyDescriptorArray91);
        asyncQueryRunner68.fillStatement(preparedStatement70, parameterMetaData71, (java.lang.Object[]) propertyDescriptorArray91);
        asyncQueryRunner63.fillStatement(preparedStatement64, parameterMetaData65, (java.lang.Object[]) propertyDescriptorArray91);
        asyncQueryRunner23.fillStatement(preparedStatement59, parameterMetaData60, (java.lang.Object[]) propertyDescriptorArray91);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement5, (java.lang.Object) builder14, propertyDescriptorArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(dataSource4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray33);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray33, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource35);
        org.junit.Assert.assertNull(dataSource36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(dataSource81);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray91);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray91, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.maxRows((java.lang.Integer) 10);
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration17 = builder14.build();
        boolean boolean18 = statementConfiguration17.isMaxFieldSizeSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(statementConfiguration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.sql.ParameterMetaData parameterMetaData8 = asyncQueryRunner3.getParameterMetaData(preparedStatement7);
        java.sql.Connection connection9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture11 = asyncQueryRunner3.update(connection9, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertNull(parameterMetaData8);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder15.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder15.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder19.maxRows((java.lang.Integer) 10);
        java.time.Duration duration22 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder21.queryTimeout(duration22);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder23.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration26 = builder25.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = builder25.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder25.queryTimeout((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder33 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = builder31.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.maxRows((java.lang.Integer) 10);
        java.time.Duration duration38 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder37.queryTimeout(duration38);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration45 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration46 = statementConfiguration45.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = builder39.queryTimeout(duration46);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder48 = builder30.queryTimeout(duration46);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration49 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 100, duration46);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder50 = builder10.queryTimeout(duration46);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(statementConfiguration26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.PreparedStatement preparedStatement4 = null;
        java.sql.ParameterMetaData parameterMetaData5 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement4, parameterMetaData5, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement39 = null;
        java.sql.ParameterMetaData parameterMetaData40 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner42 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner43 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService41, queryRunner42);
        java.sql.PreparedStatement preparedStatement44 = null;
        java.sql.ParameterMetaData parameterMetaData45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, executorService47);
        boolean boolean49 = asyncQueryRunner48.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement50 = null;
        java.sql.ParameterMetaData parameterMetaData51 = null;
        java.util.concurrent.ExecutorService executorService53 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner54 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService53);
        java.sql.PreparedStatement preparedStatement55 = null;
        javax.sql.DataSource dataSource56 = null;
        java.util.concurrent.ExecutorService executorService58 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner59 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource56, true, executorService58);
        boolean boolean60 = asyncQueryRunner59.isPmdKnownBroken();
        javax.sql.DataSource dataSource61 = asyncQueryRunner59.getDataSource();
        java.sql.PreparedStatement preparedStatement62 = null;
        javax.sql.DataSource dataSource64 = null;
        java.util.concurrent.ExecutorService executorService66 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner67 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource64, true, executorService66);
        boolean boolean68 = asyncQueryRunner67.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement69 = null;
        java.lang.Object obj70 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray71 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner67.fillStatementWithBean(preparedStatement69, obj70, propertyDescriptorArray71);
        asyncQueryRunner59.fillStatementWithBean(preparedStatement62, (java.lang.Object) 0, propertyDescriptorArray71);
        asyncQueryRunner54.fillStatement(preparedStatement55, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner48.fillStatement(preparedStatement50, parameterMetaData51, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner43.fillStatement(preparedStatement44, parameterMetaData45, (java.lang.Object[]) propertyDescriptorArray71);
        asyncQueryRunner3.fillStatement(preparedStatement39, parameterMetaData40, (java.lang.Object[]) propertyDescriptorArray71);
        boolean boolean78 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean79 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture81 = asyncQueryRunner3.update("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(dataSource61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray71);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray71, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        boolean boolean7 = statementConfiguration5.isFetchSizeSet();
        java.lang.Integer int8 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int9 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.Connection connection4 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        javax.sql.DataSource dataSource15 = asyncQueryRunner9.getDataSource();
        javax.sql.DataSource dataSource16 = asyncQueryRunner9.getDataSource();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.sql.ParameterMetaData parameterMetaData18 = null;
        javax.sql.DataSource dataSource19 = null;
        java.util.concurrent.ExecutorService executorService21 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner22 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource19, true, executorService21);
        boolean boolean23 = asyncQueryRunner22.isPmdKnownBroken();
        javax.sql.DataSource dataSource24 = asyncQueryRunner22.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner22.fillStatementWithBean(preparedStatement25, (java.lang.Object) 0, propertyDescriptorArray34);
        asyncQueryRunner9.fillStatement(preparedStatement17, parameterMetaData18, (java.lang.Object[]) propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement38 = null;
        javax.sql.DataSource dataSource39 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource39, true, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        javax.sql.DataSource dataSource44 = asyncQueryRunner42.getDataSource();
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement52 = null;
        java.lang.Object obj53 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray54 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner50.fillStatementWithBean(preparedStatement52, obj53, propertyDescriptorArray54);
        asyncQueryRunner42.fillStatementWithBean(preparedStatement45, (java.lang.Object) 0, propertyDescriptorArray54);
        asyncQueryRunner9.fillStatement(preparedStatement38, (java.lang.Object[]) propertyDescriptorArray54);
        java.sql.PreparedStatement preparedStatement58 = null;
        javax.sql.DataSource dataSource59 = null;
        java.util.concurrent.ExecutorService executorService61 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner62 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource59, true, executorService61);
        boolean boolean63 = asyncQueryRunner62.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement64 = null;
        java.lang.Object obj65 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray66 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner62.fillStatementWithBean(preparedStatement64, obj65, propertyDescriptorArray66);
        javax.sql.DataSource dataSource68 = asyncQueryRunner62.getDataSource();
        javax.sql.DataSource dataSource69 = asyncQueryRunner62.getDataSource();
        java.sql.PreparedStatement preparedStatement70 = null;
        java.sql.ParameterMetaData parameterMetaData71 = null;
        javax.sql.DataSource dataSource72 = null;
        java.util.concurrent.ExecutorService executorService74 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner75 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource72, true, executorService74);
        boolean boolean76 = asyncQueryRunner75.isPmdKnownBroken();
        javax.sql.DataSource dataSource77 = asyncQueryRunner75.getDataSource();
        java.sql.PreparedStatement preparedStatement78 = null;
        javax.sql.DataSource dataSource80 = null;
        java.util.concurrent.ExecutorService executorService82 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner83 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource80, true, executorService82);
        boolean boolean84 = asyncQueryRunner83.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement85 = null;
        java.lang.Object obj86 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray87 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner83.fillStatementWithBean(preparedStatement85, obj86, propertyDescriptorArray87);
        asyncQueryRunner75.fillStatementWithBean(preparedStatement78, (java.lang.Object) 0, propertyDescriptorArray87);
        asyncQueryRunner62.fillStatement(preparedStatement70, parameterMetaData71, (java.lang.Object[]) propertyDescriptorArray87);
        asyncQueryRunner9.fillStatement(preparedStatement58, (java.lang.Object[]) propertyDescriptorArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture92 = asyncQueryRunner2.update(connection4, "", (java.lang.Object[]) propertyDescriptorArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource15);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(dataSource44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray54);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray54, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray66);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray66, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource68);
        org.junit.Assert.assertNull(dataSource69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(dataSource77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray87);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray87, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement19 = null;
        java.sql.ParameterMetaData parameterMetaData20 = asyncQueryRunner3.getParameterMetaData(preparedStatement19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture22 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(parameterMetaData20);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 0, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 0);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxRows();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean9 = statementConfiguration5.isQueryTimeoutSet();
        java.time.Duration duration10 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int11 = statementConfiguration5.getMaxRows();
        boolean boolean12 = statementConfiguration5.isFetchSizeSet();
        boolean boolean13 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.PreparedStatement preparedStatement12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, false, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.sql.ParameterMetaData parameterMetaData26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        asyncQueryRunner23.fillStatement(preparedStatement25, parameterMetaData26, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner16.fillStatement(preparedStatement18, parameterMetaData19, (java.lang.Object[]) propertyDescriptorArray34);
        asyncQueryRunner3.fillStatement(preparedStatement12, (java.lang.Object[]) propertyDescriptorArray34);
        javax.sql.DataSource dataSource39 = asyncQueryRunner3.getDataSource();
        java.time.Duration duration45 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration46 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration45);
        boolean boolean47 = statementConfiguration46.isMaxFieldSizeSet();
        java.lang.Integer int48 = statementConfiguration46.getMaxRows();
        boolean boolean49 = statementConfiguration46.isFetchDirectionSet();
        boolean boolean50 = statementConfiguration46.isQueryTimeoutSet();
        java.lang.Integer int51 = statementConfiguration46.getQueryTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture52 = asyncQueryRunner3.update("hi!", (java.lang.Object) int51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean20 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource21 = asyncQueryRunner3.getDataSource();
        java.sql.Connection connection22 = null;
        javax.sql.DataSource dataSource24 = null;
        java.util.concurrent.ExecutorService executorService26 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner27 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource24, true, executorService26);
        boolean boolean28 = asyncQueryRunner27.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement29 = null;
        java.lang.Object obj30 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray31 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner27.fillStatementWithBean(preparedStatement29, obj30, propertyDescriptorArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture33 = asyncQueryRunner3.update(connection22, "hi!", (java.lang.Object[]) propertyDescriptorArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(dataSource21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray31);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray31, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        boolean boolean9 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int10 = statementConfiguration5.getMaxFieldSize();
        java.lang.Integer int11 = statementConfiguration5.getFetchSize();
        java.lang.Integer int12 = statementConfiguration5.getMaxFieldSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = builder6.build();
        boolean boolean12 = statementConfiguration11.isQueryTimeoutSet();
        boolean boolean13 = statementConfiguration11.isMaxRowsSet();
        java.time.Duration duration14 = statementConfiguration11.getQueryTimeoutDuration();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(statementConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(duration14);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService1);
        javax.sql.DataSource dataSource4 = null;
        java.util.concurrent.ExecutorService executorService6 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner7 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource4, true, executorService6);
        boolean boolean8 = asyncQueryRunner7.isPmdKnownBroken();
        javax.sql.DataSource dataSource9 = asyncQueryRunner7.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, true, executorService14);
        boolean boolean16 = asyncQueryRunner15.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement17 = null;
        java.lang.Object obj18 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray19 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner15.fillStatementWithBean(preparedStatement17, obj18, propertyDescriptorArray19);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement10, (java.lang.Object) 0, propertyDescriptorArray19);
        boolean boolean22 = asyncQueryRunner7.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement23 = null;
        java.sql.ParameterMetaData parameterMetaData24 = asyncQueryRunner7.getParameterMetaData(preparedStatement23);
        java.sql.PreparedStatement preparedStatement25 = null;
        java.lang.Object obj26 = null;
        javax.sql.DataSource dataSource27 = null;
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner30 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource27, true, executorService29);
        boolean boolean31 = asyncQueryRunner30.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement32 = null;
        java.lang.Object obj33 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray34 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner30.fillStatementWithBean(preparedStatement32, obj33, propertyDescriptorArray34);
        java.sql.PreparedStatement preparedStatement36 = null;
        javax.sql.DataSource dataSource37 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource37, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.sql.ParameterMetaData parameterMetaData42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService44);
        java.sql.PreparedStatement preparedStatement46 = null;
        javax.sql.DataSource dataSource47 = null;
        java.util.concurrent.ExecutorService executorService49 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner50 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource47, true, executorService49);
        boolean boolean51 = asyncQueryRunner50.isPmdKnownBroken();
        javax.sql.DataSource dataSource52 = asyncQueryRunner50.getDataSource();
        java.sql.PreparedStatement preparedStatement53 = null;
        javax.sql.DataSource dataSource55 = null;
        java.util.concurrent.ExecutorService executorService57 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner58 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource55, true, executorService57);
        boolean boolean59 = asyncQueryRunner58.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement60 = null;
        java.lang.Object obj61 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray62 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner58.fillStatementWithBean(preparedStatement60, obj61, propertyDescriptorArray62);
        asyncQueryRunner50.fillStatementWithBean(preparedStatement53, (java.lang.Object) 0, propertyDescriptorArray62);
        asyncQueryRunner45.fillStatement(preparedStatement46, (java.lang.Object[]) propertyDescriptorArray62);
        asyncQueryRunner39.fillStatement(preparedStatement41, parameterMetaData42, (java.lang.Object[]) propertyDescriptorArray62);
        asyncQueryRunner30.fillStatement(preparedStatement36, (java.lang.Object[]) propertyDescriptorArray62);
        asyncQueryRunner7.fillStatementWithBean(preparedStatement25, obj26, propertyDescriptorArray62);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture69 = asyncQueryRunner2.update("", (java.lang.Object[]) propertyDescriptorArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray19);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray19, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(parameterMetaData24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray34);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray34, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(dataSource52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray62);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray62, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = asyncQueryRunner3.getParameterMetaData(preparedStatement10);
        java.sql.PreparedStatement preparedStatement12 = null;
        java.sql.ParameterMetaData parameterMetaData13 = asyncQueryRunner3.getParameterMetaData(preparedStatement12);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder15.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder15.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder19.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder21.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder23.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder25.maxFieldSize((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.fetchDirection((java.lang.Integer) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture32 = asyncQueryRunner3.update("", (java.lang.Object) builder31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertNull(parameterMetaData11);
        org.junit.Assert.assertNull(parameterMetaData13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        java.lang.Integer int11 = statementConfiguration5.getFetchDirection();
        boolean boolean12 = statementConfiguration5.isMaxFieldSizeSet();
        java.time.Duration duration13 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(duration13);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder4.fetchSize((java.lang.Integer) (-1));
        java.time.Duration duration11 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.queryTimeout(duration11);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder13 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder15 = builder13.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder17 = builder13.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder19 = builder17.maxRows((java.lang.Integer) 10);
        java.time.Duration duration20 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = builder17.queryTimeout(duration20);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder17.maxFieldSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder23.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder23.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder28 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder30 = builder28.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder32 = builder28.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder32.maxRows((java.lang.Integer) 10);
        java.time.Duration duration35 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder36 = builder32.queryTimeout(duration35);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder37.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder37.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder41.maxRows((java.lang.Integer) 10);
        java.time.Duration duration44 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder43.queryTimeout(duration44);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration51 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 1, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 10);
        java.time.Duration duration52 = statementConfiguration51.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder53 = builder45.queryTimeout(duration52);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder54 = builder36.queryTimeout(duration52);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder55 = builder23.queryTimeout(duration52);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = builder12.queryTimeout(duration52);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration57 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 1, (java.lang.Integer) 1, (java.lang.Integer) 10, (java.lang.Integer) 100, duration52);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        java.sql.Connection connection4 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, executorService7);
        javax.sql.DataSource dataSource9 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement10 = null;
        java.sql.ParameterMetaData parameterMetaData11 = null;
        javax.sql.DataSource dataSource12 = null;
        java.util.concurrent.ExecutorService executorService14 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner15 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource12, false, executorService14);
        java.sql.PreparedStatement preparedStatement16 = null;
        java.sql.ParameterMetaData parameterMetaData17 = null;
        javax.sql.DataSource dataSource18 = null;
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource18, true, executorService20);
        boolean boolean22 = asyncQueryRunner21.isPmdKnownBroken();
        javax.sql.DataSource dataSource23 = asyncQueryRunner21.getDataSource();
        javax.sql.DataSource dataSource24 = asyncQueryRunner21.getDataSource();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.time.Duration duration30 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration31 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration30);
        boolean boolean32 = statementConfiguration31.isMaxFieldSizeSet();
        java.time.Duration duration33 = statementConfiguration31.getQueryTimeoutDuration();
        boolean boolean34 = statementConfiguration31.isFetchSizeSet();
        boolean boolean35 = statementConfiguration31.isMaxFieldSizeSet();
        boolean boolean36 = statementConfiguration31.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService38);
        java.sql.PreparedStatement preparedStatement40 = null;
        javax.sql.DataSource dataSource41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource41, true, executorService43);
        boolean boolean45 = asyncQueryRunner44.isPmdKnownBroken();
        javax.sql.DataSource dataSource46 = asyncQueryRunner44.getDataSource();
        java.sql.PreparedStatement preparedStatement47 = null;
        javax.sql.DataSource dataSource49 = null;
        java.util.concurrent.ExecutorService executorService51 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner52 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource49, true, executorService51);
        boolean boolean53 = asyncQueryRunner52.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement54 = null;
        java.lang.Object obj55 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray56 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner52.fillStatementWithBean(preparedStatement54, obj55, propertyDescriptorArray56);
        asyncQueryRunner44.fillStatementWithBean(preparedStatement47, (java.lang.Object) 0, propertyDescriptorArray56);
        asyncQueryRunner39.fillStatement(preparedStatement40, (java.lang.Object[]) propertyDescriptorArray56);
        asyncQueryRunner21.fillStatementWithBean(preparedStatement25, (java.lang.Object) statementConfiguration31, propertyDescriptorArray56);
        asyncQueryRunner15.fillStatement(preparedStatement16, parameterMetaData17, (java.lang.Object[]) propertyDescriptorArray56);
        asyncQueryRunner8.fillStatement(preparedStatement10, parameterMetaData11, (java.lang.Object[]) propertyDescriptorArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture63 = asyncQueryRunner3.update(connection4, "hi!", (java.lang.Object[]) propertyDescriptorArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource9);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertNull(dataSource24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(dataSource46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray56);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray56, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder6.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder6.fetchDirection((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration11 = builder6.build();
        java.lang.Integer int12 = statementConfiguration11.getMaxRows();
        boolean boolean13 = statementConfiguration11.isFetchDirectionSet();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(statementConfiguration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int9 = statementConfiguration5.getMaxRows();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService1);
        java.sql.PreparedStatement preparedStatement3 = null;
        java.sql.ParameterMetaData parameterMetaData4 = null;
        javax.sql.DataSource dataSource5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource5, true, executorService7);
        boolean boolean9 = asyncQueryRunner8.isPmdKnownBroken();
        javax.sql.DataSource dataSource10 = asyncQueryRunner8.getDataSource();
        javax.sql.DataSource dataSource11 = asyncQueryRunner8.getDataSource();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.time.Duration duration17 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration18 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration17);
        boolean boolean19 = statementConfiguration18.isMaxFieldSizeSet();
        java.time.Duration duration20 = statementConfiguration18.getQueryTimeoutDuration();
        boolean boolean21 = statementConfiguration18.isFetchSizeSet();
        boolean boolean22 = statementConfiguration18.isMaxFieldSizeSet();
        boolean boolean23 = statementConfiguration18.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService25);
        java.sql.PreparedStatement preparedStatement27 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        javax.sql.DataSource dataSource33 = asyncQueryRunner31.getDataSource();
        java.sql.PreparedStatement preparedStatement34 = null;
        javax.sql.DataSource dataSource36 = null;
        java.util.concurrent.ExecutorService executorService38 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner39 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource36, true, executorService38);
        boolean boolean40 = asyncQueryRunner39.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement41 = null;
        java.lang.Object obj42 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray43 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner39.fillStatementWithBean(preparedStatement41, obj42, propertyDescriptorArray43);
        asyncQueryRunner31.fillStatementWithBean(preparedStatement34, (java.lang.Object) 0, propertyDescriptorArray43);
        asyncQueryRunner26.fillStatement(preparedStatement27, (java.lang.Object[]) propertyDescriptorArray43);
        asyncQueryRunner8.fillStatementWithBean(preparedStatement12, (java.lang.Object) statementConfiguration18, propertyDescriptorArray43);
        asyncQueryRunner2.fillStatement(preparedStatement3, parameterMetaData4, (java.lang.Object[]) propertyDescriptorArray43);
        java.sql.Connection connection49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture51 = asyncQueryRunner2.update(connection49, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(dataSource10);
        org.junit.Assert.assertNull(dataSource11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(dataSource33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray43);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray43, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        boolean boolean4 = asyncQueryRunner2.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        java.sql.PreparedStatement preparedStatement11 = null;
        java.sql.ParameterMetaData parameterMetaData12 = null;
        javax.sql.DataSource dataSource13 = null;
        java.util.concurrent.ExecutorService executorService15 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner16 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource13, true, executorService15);
        boolean boolean17 = asyncQueryRunner16.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.lang.Object obj19 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray20 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner16.fillStatementWithBean(preparedStatement18, obj19, propertyDescriptorArray20);
        javax.sql.DataSource dataSource22 = asyncQueryRunner16.getDataSource();
        javax.sql.DataSource dataSource23 = asyncQueryRunner16.getDataSource();
        java.sql.PreparedStatement preparedStatement24 = null;
        java.sql.ParameterMetaData parameterMetaData25 = null;
        javax.sql.DataSource dataSource26 = null;
        java.util.concurrent.ExecutorService executorService28 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner29 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource26, true, executorService28);
        boolean boolean30 = asyncQueryRunner29.isPmdKnownBroken();
        javax.sql.DataSource dataSource31 = asyncQueryRunner29.getDataSource();
        java.sql.PreparedStatement preparedStatement32 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement39 = null;
        java.lang.Object obj40 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray41 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner37.fillStatementWithBean(preparedStatement39, obj40, propertyDescriptorArray41);
        asyncQueryRunner29.fillStatementWithBean(preparedStatement32, (java.lang.Object) 0, propertyDescriptorArray41);
        asyncQueryRunner16.fillStatement(preparedStatement24, parameterMetaData25, (java.lang.Object[]) propertyDescriptorArray41);
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService48 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner49 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, true, executorService48);
        boolean boolean50 = asyncQueryRunner49.isPmdKnownBroken();
        javax.sql.DataSource dataSource51 = asyncQueryRunner49.getDataSource();
        java.sql.PreparedStatement preparedStatement52 = null;
        javax.sql.DataSource dataSource54 = null;
        java.util.concurrent.ExecutorService executorService56 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner57 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource54, true, executorService56);
        boolean boolean58 = asyncQueryRunner57.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement59 = null;
        java.lang.Object obj60 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner57.fillStatementWithBean(preparedStatement59, obj60, propertyDescriptorArray61);
        asyncQueryRunner49.fillStatementWithBean(preparedStatement52, (java.lang.Object) 0, propertyDescriptorArray61);
        asyncQueryRunner16.fillStatement(preparedStatement45, (java.lang.Object[]) propertyDescriptorArray61);
        asyncQueryRunner10.fillStatement(preparedStatement11, parameterMetaData12, (java.lang.Object[]) propertyDescriptorArray61);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatement(preparedStatement6, (java.lang.Object[]) propertyDescriptorArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray20);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray20, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource22);
        org.junit.Assert.assertNull(dataSource23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(dataSource31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray41);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray41, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(dataSource51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray61, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxRows((java.lang.Integer) 10);
        java.time.Duration duration7 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.queryTimeout(duration7);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder4.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.fetchDirection((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder12.maxFieldSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder14.fetchSize((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchSize();
        boolean boolean8 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int9 = statementConfiguration5.getMaxRows();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        java.time.Duration duration11 = statementConfiguration5.getQueryTimeoutDuration();
        boolean boolean12 = statementConfiguration5.isQueryTimeoutSet();
        boolean boolean13 = statementConfiguration5.isFetchSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.util.concurrent.ExecutorService executorService0 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService0, queryRunner1);
        javax.sql.DataSource dataSource3 = asyncQueryRunner2.getDataSource();
        java.sql.PreparedStatement preparedStatement4 = null;
        java.lang.Object obj5 = null;
        java.util.concurrent.ExecutorService executorService7 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner8 = new org.apache.commons.dbutils.AsyncQueryRunner(false, executorService7);
        java.sql.PreparedStatement preparedStatement9 = null;
        java.sql.ParameterMetaData parameterMetaData10 = null;
        javax.sql.DataSource dataSource11 = null;
        java.util.concurrent.ExecutorService executorService13 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner14 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource11, true, executorService13);
        boolean boolean15 = asyncQueryRunner14.isPmdKnownBroken();
        javax.sql.DataSource dataSource16 = asyncQueryRunner14.getDataSource();
        javax.sql.DataSource dataSource17 = asyncQueryRunner14.getDataSource();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.time.Duration duration23 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration24 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration23);
        boolean boolean25 = statementConfiguration24.isMaxFieldSizeSet();
        java.time.Duration duration26 = statementConfiguration24.getQueryTimeoutDuration();
        boolean boolean27 = statementConfiguration24.isFetchSizeSet();
        boolean boolean28 = statementConfiguration24.isMaxFieldSizeSet();
        boolean boolean29 = statementConfiguration24.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService31 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner32 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService31);
        java.sql.PreparedStatement preparedStatement33 = null;
        javax.sql.DataSource dataSource34 = null;
        java.util.concurrent.ExecutorService executorService36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource34, true, executorService36);
        boolean boolean38 = asyncQueryRunner37.isPmdKnownBroken();
        javax.sql.DataSource dataSource39 = asyncQueryRunner37.getDataSource();
        java.sql.PreparedStatement preparedStatement40 = null;
        javax.sql.DataSource dataSource42 = null;
        java.util.concurrent.ExecutorService executorService44 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner45 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource42, true, executorService44);
        boolean boolean46 = asyncQueryRunner45.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement47 = null;
        java.lang.Object obj48 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray49 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner45.fillStatementWithBean(preparedStatement47, obj48, propertyDescriptorArray49);
        asyncQueryRunner37.fillStatementWithBean(preparedStatement40, (java.lang.Object) 0, propertyDescriptorArray49);
        asyncQueryRunner32.fillStatement(preparedStatement33, (java.lang.Object[]) propertyDescriptorArray49);
        asyncQueryRunner14.fillStatementWithBean(preparedStatement18, (java.lang.Object) statementConfiguration24, propertyDescriptorArray49);
        asyncQueryRunner8.fillStatement(preparedStatement9, parameterMetaData10, (java.lang.Object[]) propertyDescriptorArray49);
        // The following exception was thrown during execution in test generation
        try {
            asyncQueryRunner2.fillStatementWithBean(preparedStatement4, obj5, propertyDescriptorArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.sql.PreparedStatement.getParameterMetaData()\" because \"stmt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(dataSource3);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(dataSource39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray49);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray49, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int8 = statementConfiguration5.getFetchSize();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        java.sql.ParameterMetaData parameterMetaData7 = asyncQueryRunner3.getParameterMetaData(preparedStatement6);
        java.sql.PreparedStatement preparedStatement8 = null;
        java.sql.ParameterMetaData parameterMetaData9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService12 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner13 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, true, executorService12);
        boolean boolean14 = asyncQueryRunner13.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement15 = null;
        java.lang.Object obj16 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray17 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner13.fillStatementWithBean(preparedStatement15, obj16, propertyDescriptorArray17);
        javax.sql.DataSource dataSource19 = asyncQueryRunner13.getDataSource();
        java.sql.PreparedStatement preparedStatement20 = null;
        java.sql.ParameterMetaData parameterMetaData21 = asyncQueryRunner13.getParameterMetaData(preparedStatement20);
        java.sql.PreparedStatement preparedStatement22 = null;
        java.sql.ParameterMetaData parameterMetaData23 = asyncQueryRunner13.getParameterMetaData(preparedStatement22);
        boolean boolean24 = asyncQueryRunner13.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement25 = null;
        java.time.Duration duration30 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration31 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration30);
        boolean boolean32 = statementConfiguration31.isMaxRowsSet();
        java.lang.Integer int33 = statementConfiguration31.getQueryTimeout();
        boolean boolean34 = statementConfiguration31.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService35 = null;
        org.apache.commons.dbutils.QueryRunner queryRunner36 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner37 = new org.apache.commons.dbutils.AsyncQueryRunner(executorService35, queryRunner36);
        java.sql.PreparedStatement preparedStatement38 = null;
        java.sql.ParameterMetaData parameterMetaData39 = null;
        javax.sql.DataSource dataSource40 = null;
        java.util.concurrent.ExecutorService executorService41 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner42 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource40, executorService41);
        boolean boolean43 = asyncQueryRunner42.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement44 = null;
        java.sql.ParameterMetaData parameterMetaData45 = null;
        java.util.concurrent.ExecutorService executorService47 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner48 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService47);
        java.sql.PreparedStatement preparedStatement49 = null;
        javax.sql.DataSource dataSource50 = null;
        java.util.concurrent.ExecutorService executorService52 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner53 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource50, true, executorService52);
        boolean boolean54 = asyncQueryRunner53.isPmdKnownBroken();
        javax.sql.DataSource dataSource55 = asyncQueryRunner53.getDataSource();
        java.sql.PreparedStatement preparedStatement56 = null;
        javax.sql.DataSource dataSource58 = null;
        java.util.concurrent.ExecutorService executorService60 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner61 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource58, true, executorService60);
        boolean boolean62 = asyncQueryRunner61.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement63 = null;
        java.lang.Object obj64 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray65 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner61.fillStatementWithBean(preparedStatement63, obj64, propertyDescriptorArray65);
        asyncQueryRunner53.fillStatementWithBean(preparedStatement56, (java.lang.Object) 0, propertyDescriptorArray65);
        asyncQueryRunner48.fillStatement(preparedStatement49, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner42.fillStatement(preparedStatement44, parameterMetaData45, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner37.fillStatement(preparedStatement38, parameterMetaData39, (java.lang.Object[]) propertyDescriptorArray65);
        asyncQueryRunner13.fillStatementWithBean(preparedStatement25, (java.lang.Object) boolean34, propertyDescriptorArray65);
        asyncQueryRunner3.fillStatement(preparedStatement8, parameterMetaData9, (java.lang.Object[]) propertyDescriptorArray65);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(parameterMetaData7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray17);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray17, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource19);
        org.junit.Assert.assertNull(parameterMetaData21);
        org.junit.Assert.assertNull(parameterMetaData23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(dataSource55);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray65);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray65, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService1 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner2 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, executorService1);
        boolean boolean3 = asyncQueryRunner2.isPmdKnownBroken();
        java.sql.Connection connection4 = null;
        javax.sql.DataSource dataSource6 = null;
        java.util.concurrent.ExecutorService executorService8 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner9 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource6, true, executorService8);
        boolean boolean10 = asyncQueryRunner9.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement11 = null;
        java.lang.Object obj12 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray13 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner9.fillStatementWithBean(preparedStatement11, obj12, propertyDescriptorArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture15 = asyncQueryRunner2.update(connection4, "", (java.lang.Object[]) propertyDescriptorArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray13);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray13, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration4);
        boolean boolean6 = statementConfiguration5.isMaxFieldSizeSet();
        java.lang.Integer int7 = statementConfiguration5.getMaxFieldSize();
        boolean boolean8 = statementConfiguration5.isFetchSizeSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        java.lang.Integer int10 = statementConfiguration5.getFetchSize();
        java.lang.Integer int11 = statementConfiguration5.getFetchSize();
        boolean boolean12 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 100);
        java.lang.Integer int6 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        boolean boolean8 = statementConfiguration5.isMaxRowsSet();
        boolean boolean9 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int10 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration14 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration15 = statementConfiguration14.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder4.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration17 = builder4.build();
        java.lang.Class<?> wildcardClass18 = builder4.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(statementConfiguration17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.lang.Object obj6 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray7 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner3.fillStatementWithBean(preparedStatement5, obj6, propertyDescriptorArray7);
        java.sql.PreparedStatement preparedStatement9 = null;
        javax.sql.DataSource dataSource10 = null;
        java.util.concurrent.ExecutorService executorService11 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner12 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource10, executorService11);
        boolean boolean13 = asyncQueryRunner12.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement14 = null;
        java.sql.ParameterMetaData parameterMetaData15 = null;
        java.util.concurrent.ExecutorService executorService17 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner18 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService17);
        java.sql.PreparedStatement preparedStatement19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner18.fillStatement(preparedStatement19, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner12.fillStatement(preparedStatement14, parameterMetaData15, (java.lang.Object[]) propertyDescriptorArray35);
        asyncQueryRunner3.fillStatement(preparedStatement9, (java.lang.Object[]) propertyDescriptorArray35);
        javax.sql.DataSource dataSource41 = asyncQueryRunner3.getDataSource();
        boolean boolean42 = asyncQueryRunner3.isPmdKnownBroken();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture44 = asyncQueryRunner3.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray7);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray7, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 100, (java.lang.Integer) 0, (java.lang.Integer) 100, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int8 = statementConfiguration5.getMaxRows();
        boolean boolean9 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean10 = statementConfiguration5.isFetchDirectionSet();
        boolean boolean11 = statementConfiguration5.isMaxRowsSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder0 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder2 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = builder0.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.maxFieldSize((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder4.fetchDirection((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder4.fetchDirection((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = builder4.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(statementConfiguration13);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = null;
        javax.sql.DataSource dataSource7 = null;
        java.util.concurrent.ExecutorService executorService9 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner10 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource7, true, executorService9);
        boolean boolean11 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement12 = null;
        java.lang.Object obj13 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray14 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner10.fillStatementWithBean(preparedStatement12, obj13, propertyDescriptorArray14);
        javax.sql.DataSource dataSource16 = asyncQueryRunner10.getDataSource();
        javax.sql.DataSource dataSource17 = asyncQueryRunner10.getDataSource();
        java.sql.PreparedStatement preparedStatement18 = null;
        java.sql.ParameterMetaData parameterMetaData19 = null;
        javax.sql.DataSource dataSource20 = null;
        java.util.concurrent.ExecutorService executorService22 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner23 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource20, true, executorService22);
        boolean boolean24 = asyncQueryRunner23.isPmdKnownBroken();
        javax.sql.DataSource dataSource25 = asyncQueryRunner23.getDataSource();
        java.sql.PreparedStatement preparedStatement26 = null;
        javax.sql.DataSource dataSource28 = null;
        java.util.concurrent.ExecutorService executorService30 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner31 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource28, true, executorService30);
        boolean boolean32 = asyncQueryRunner31.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement33 = null;
        java.lang.Object obj34 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray35 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner31.fillStatementWithBean(preparedStatement33, obj34, propertyDescriptorArray35);
        asyncQueryRunner23.fillStatementWithBean(preparedStatement26, (java.lang.Object) 0, propertyDescriptorArray35);
        asyncQueryRunner10.fillStatement(preparedStatement18, parameterMetaData19, (java.lang.Object[]) propertyDescriptorArray35);
        boolean boolean39 = asyncQueryRunner10.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement40 = null;
        java.sql.ParameterMetaData parameterMetaData41 = null;
        java.util.concurrent.ExecutorService executorService43 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner44 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService43);
        java.sql.PreparedStatement preparedStatement45 = null;
        javax.sql.DataSource dataSource46 = null;
        java.util.concurrent.ExecutorService executorService48 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner49 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource46, true, executorService48);
        boolean boolean50 = asyncQueryRunner49.isPmdKnownBroken();
        javax.sql.DataSource dataSource51 = asyncQueryRunner49.getDataSource();
        java.sql.PreparedStatement preparedStatement52 = null;
        javax.sql.DataSource dataSource54 = null;
        java.util.concurrent.ExecutorService executorService56 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner57 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource54, true, executorService56);
        boolean boolean58 = asyncQueryRunner57.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement59 = null;
        java.lang.Object obj60 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray61 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner57.fillStatementWithBean(preparedStatement59, obj60, propertyDescriptorArray61);
        asyncQueryRunner49.fillStatementWithBean(preparedStatement52, (java.lang.Object) 0, propertyDescriptorArray61);
        asyncQueryRunner44.fillStatement(preparedStatement45, (java.lang.Object[]) propertyDescriptorArray61);
        asyncQueryRunner10.fillStatement(preparedStatement40, parameterMetaData41, (java.lang.Object[]) propertyDescriptorArray61);
        asyncQueryRunner3.fillStatement(preparedStatement5, parameterMetaData6, (java.lang.Object[]) propertyDescriptorArray61);
        java.sql.Connection connection67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture69 = asyncQueryRunner3.update(connection67, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray14);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray14, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertNull(dataSource16);
        org.junit.Assert.assertNull(dataSource17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(dataSource25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray35);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray35, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(dataSource51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray61);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray61, new java.beans.PropertyDescriptor[] {});
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.dbutils.StatementConfiguration.Builder builder4 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder6 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder8 = builder4.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder10 = builder8.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder12 = builder10.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder14 = builder10.fetchDirection((java.lang.Integer) 100);
        java.time.Duration duration15 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder16 = builder14.queryTimeout(duration15);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder18 = builder14.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder20 = builder18.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder21 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder23 = builder21.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder25 = builder21.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder27 = builder25.maxRows((java.lang.Integer) 10);
        java.time.Duration duration28 = null;
        org.apache.commons.dbutils.StatementConfiguration.Builder builder29 = builder27.queryTimeout(duration28);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder31 = builder29.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration32 = builder31.build();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder34 = builder31.maxRows((java.lang.Integer) 100);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder35 = new org.apache.commons.dbutils.StatementConfiguration.Builder();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder37 = builder35.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder39 = builder35.fetchSize((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder41 = builder39.maxRows((java.lang.Integer) 10);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder43 = builder41.maxRows((java.lang.Integer) (-1));
        org.apache.commons.dbutils.StatementConfiguration.Builder builder45 = builder43.fetchSize((java.lang.Integer) 0);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder47 = builder45.fetchDirection((java.lang.Integer) 1);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration53 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) 0);
        java.time.Duration duration54 = statementConfiguration53.getQueryTimeoutDuration();
        org.apache.commons.dbutils.StatementConfiguration.Builder builder55 = builder47.queryTimeout(duration54);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder56 = builder34.queryTimeout(duration54);
        org.apache.commons.dbutils.StatementConfiguration.Builder builder57 = builder20.queryTimeout(duration54);
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration58 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 100, (java.lang.Integer) 100, (java.lang.Integer) 10, (java.lang.Integer) 0, duration54);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(statementConfiguration32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isMaxRowsSet();
        java.lang.Integer int7 = statementConfiguration5.getQueryTimeout();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        java.lang.Integer int9 = statementConfiguration5.getFetchSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement6 = null;
        javax.sql.DataSource dataSource8 = null;
        java.util.concurrent.ExecutorService executorService10 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner11 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource8, true, executorService10);
        boolean boolean12 = asyncQueryRunner11.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement13 = null;
        java.lang.Object obj14 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray15 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner11.fillStatementWithBean(preparedStatement13, obj14, propertyDescriptorArray15);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement6, (java.lang.Object) 0, propertyDescriptorArray15);
        boolean boolean18 = asyncQueryRunner3.isPmdKnownBroken();
        boolean boolean19 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource20 = asyncQueryRunner3.getDataSource();
        java.lang.Object obj22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture23 = asyncQueryRunner3.update("", obj22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray15);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray15, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(dataSource20);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) 10, (java.lang.Integer) 1, (java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1));
        java.lang.Integer int6 = statementConfiguration5.getFetchSize();
        java.lang.Integer int7 = statementConfiguration5.getFetchDirection();
        java.lang.Integer int8 = statementConfiguration5.getQueryTimeout();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement5 = null;
        java.sql.ParameterMetaData parameterMetaData6 = asyncQueryRunner3.getParameterMetaData(preparedStatement5);
        java.sql.Connection connection7 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration14 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 100, (java.lang.Integer) 0);
        boolean boolean15 = statementConfiguration14.isMaxFieldSizeSet();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<java.lang.Integer> intFuture16 = asyncQueryRunner3.update(connection7, "hi!", (java.lang.Object) boolean15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)\" because \"this.executorService\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(parameterMetaData6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.time.Duration duration4 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration5 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 1, (java.lang.Integer) 0, (java.lang.Integer) 0, duration4);
        boolean boolean6 = statementConfiguration5.isQueryTimeoutSet();
        boolean boolean7 = statementConfiguration5.isFetchSizeSet();
        boolean boolean8 = statementConfiguration5.isFetchDirectionSet();
        java.time.Duration duration9 = statementConfiguration5.getQueryTimeoutDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(duration9);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        javax.sql.DataSource dataSource0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner3 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource0, true, executorService2);
        boolean boolean4 = asyncQueryRunner3.isPmdKnownBroken();
        javax.sql.DataSource dataSource5 = asyncQueryRunner3.getDataSource();
        javax.sql.DataSource dataSource6 = asyncQueryRunner3.getDataSource();
        java.sql.PreparedStatement preparedStatement7 = null;
        java.time.Duration duration12 = null;
        org.apache.commons.dbutils.StatementConfiguration statementConfiguration13 = new org.apache.commons.dbutils.StatementConfiguration((java.lang.Integer) (-1), (java.lang.Integer) 10, (java.lang.Integer) (-1), (java.lang.Integer) 10, duration12);
        boolean boolean14 = statementConfiguration13.isMaxFieldSizeSet();
        java.time.Duration duration15 = statementConfiguration13.getQueryTimeoutDuration();
        boolean boolean16 = statementConfiguration13.isFetchSizeSet();
        boolean boolean17 = statementConfiguration13.isMaxFieldSizeSet();
        boolean boolean18 = statementConfiguration13.isFetchDirectionSet();
        java.util.concurrent.ExecutorService executorService20 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner21 = new org.apache.commons.dbutils.AsyncQueryRunner(true, executorService20);
        java.sql.PreparedStatement preparedStatement22 = null;
        javax.sql.DataSource dataSource23 = null;
        java.util.concurrent.ExecutorService executorService25 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner26 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource23, true, executorService25);
        boolean boolean27 = asyncQueryRunner26.isPmdKnownBroken();
        javax.sql.DataSource dataSource28 = asyncQueryRunner26.getDataSource();
        java.sql.PreparedStatement preparedStatement29 = null;
        javax.sql.DataSource dataSource31 = null;
        java.util.concurrent.ExecutorService executorService33 = null;
        org.apache.commons.dbutils.AsyncQueryRunner asyncQueryRunner34 = new org.apache.commons.dbutils.AsyncQueryRunner(dataSource31, true, executorService33);
        boolean boolean35 = asyncQueryRunner34.isPmdKnownBroken();
        java.sql.PreparedStatement preparedStatement36 = null;
        java.lang.Object obj37 = null;
        java.beans.PropertyDescriptor[] propertyDescriptorArray38 = new java.beans.PropertyDescriptor[] {};
        asyncQueryRunner34.fillStatementWithBean(preparedStatement36, obj37, propertyDescriptorArray38);
        asyncQueryRunner26.fillStatementWithBean(preparedStatement29, (java.lang.Object) 0, propertyDescriptorArray38);
        asyncQueryRunner21.fillStatement(preparedStatement22, (java.lang.Object[]) propertyDescriptorArray38);
        asyncQueryRunner3.fillStatementWithBean(preparedStatement7, (java.lang.Object) statementConfiguration13, propertyDescriptorArray38);
        java.lang.Integer int43 = statementConfiguration13.getFetchSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(dataSource5);
        org.junit.Assert.assertNull(dataSource6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(dataSource28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(propertyDescriptorArray38);
        org.junit.Assert.assertArrayEquals(propertyDescriptorArray38, new java.beans.PropertyDescriptor[] {});
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
    }
}

